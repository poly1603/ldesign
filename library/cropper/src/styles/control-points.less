/**
 * @ldesign/cropper 控制点样式
 * 
 * 定义裁剪区域控制点和调整手柄样式
 */

// ============================================================================
// 控制点基础样式
// ============================================================================

.lcropper-control-point {
  .control-point-base();
  
  // 控制点定位
  &.lcropper-control-nw {
    top: calc(var(--lcropper-control-point-size) / -2);
    left: calc(var(--lcropper-control-point-size) / -2);
    cursor: nw-resize;
  }
  
  &.lcropper-control-n {
    top: calc(var(--lcropper-control-point-size) / -2);
    left: 50%;
    transform: translateX(-50%);
    cursor: n-resize;
  }
  
  &.lcropper-control-ne {
    top: calc(var(--lcropper-control-point-size) / -2);
    right: calc(var(--lcropper-control-point-size) / -2);
    cursor: ne-resize;
  }
  
  &.lcropper-control-e {
    top: 50%;
    right: calc(var(--lcropper-control-point-size) / -2);
    transform: translateY(-50%);
    cursor: e-resize;
  }
  
  &.lcropper-control-se {
    bottom: calc(var(--lcropper-control-point-size) / -2);
    right: calc(var(--lcropper-control-point-size) / -2);
    cursor: se-resize;
  }
  
  &.lcropper-control-s {
    bottom: calc(var(--lcropper-control-point-size) / -2);
    left: 50%;
    transform: translateX(-50%);
    cursor: s-resize;
  }
  
  &.lcropper-control-sw {
    bottom: calc(var(--lcropper-control-point-size) / -2);
    left: calc(var(--lcropper-control-point-size) / -2);
    cursor: sw-resize;
  }
  
  &.lcropper-control-w {
    top: 50%;
    left: calc(var(--lcropper-control-point-size) / -2);
    transform: translateY(-50%);
    cursor: w-resize;
  }
}

// ============================================================================
// 角落控制点
// ============================================================================

.lcropper-control-point {
  &.lcropper-control-corner {
    .corner-control-point();
  }
  
  // 角落控制点特殊样式
  &.lcropper-control-nw,
  &.lcropper-control-ne,
  &.lcropper-control-se,
  &.lcropper-control-sw {
    .corner-control-point();
  }
}

// ============================================================================
// 边缘控制点
// ============================================================================

.lcropper-control-point {
  &.lcropper-control-edge {
    .edge-control-point();
  }
  
  // 边缘控制点特殊样式
  &.lcropper-control-n,
  &.lcropper-control-s {
    .edge-control-point();
    
    &::before {
      width: 8px;
      height: 2px;
    }
  }
  
  &.lcropper-control-e,
  &.lcropper-control-w {
    .edge-control-point();
    
    &::before {
      width: 2px;
      height: 8px;
    }
  }
}

// ============================================================================
// 旋转控制点
// ============================================================================

.lcropper-control-rotation {
  .rotation-control-point();
  
  // 旋转控制点位置
  top: calc(var(--lcropper-control-point-size) * -2);
  left: 50%;
  transform: translateX(-50%);
  cursor: crosshair;
  
  // 连接线
  &::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    width: 1px;
    height: calc(var(--lcropper-control-point-size) / 2);
    background-color: var(--lcropper-control-point-border);
    transform: translateX(-50%);
  }
  
  // 旋转图标
  &::before {
    content: '↻';
    font-size: 12px;
    font-weight: bold;
  }
}

// ============================================================================
// 中心控制点
// ============================================================================

.lcropper-control-center {
  .control-point-base(12px);
  
  // 中心点位置
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  cursor: move;
  
  // 中心点图标
  &::before {
    content: '✛';
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 8px;
    color: var(--lcropper-control-point-border);
    transform: translate(-50%, -50%);
  }
  
  // 中心点样式
  background-color: transparent;
  border: 2px solid var(--lcropper-control-point-bg);
  
  &:hover {
    background-color: var(--lcropper-control-point-hover-bg);
  }
}

// ============================================================================
// 控制点状态
// ============================================================================

.lcropper-control-point {
  // 激活状态
  &.lcropper-control-active {
    background-color: var(--lcropper-control-point-active-bg);
    transform: scale(1.2);
    z-index: calc(var(--lcropper-z-control-points) + 1);
  }
  
  // 拖拽状态
  &.lcropper-control-dragging {
    background-color: var(--lcropper-control-point-active-bg);
    transform: scale(1.1);
    transition: none;
    z-index: calc(var(--lcropper-z-control-points) + 1);
  }
  
  // 禁用状态
  &.lcropper-control-disabled {
    pointer-events: none;
    opacity: 0.3;
    cursor: not-allowed;
  }
  
  // 隐藏状态
  &.lcropper-control-hidden {
    display: none;
  }
}

// ============================================================================
// 控制点组
// ============================================================================

.lcropper-control-points {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: var(--lcropper-z-control-points);
  
  // 控制点容器
  .lcropper-control-point {
    pointer-events: auto;
  }
  
  // 显示/隐藏控制点
  &.lcropper-controls-visible {
    .lcropper-control-point {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  &.lcropper-controls-hidden {
    .lcropper-control-point {
      opacity: 0;
      transform: scale(0.8);
      pointer-events: none;
    }
  }
}

// ============================================================================
// 控制点动画
// ============================================================================

.lcropper-control-point {
  // 出现动画
  &.lcropper-control-appear {
    animation: lcropper-control-appear 0.3s ease-out;
  }
  
  // 消失动画
  &.lcropper-control-disappear {
    animation: lcropper-control-disappear 0.3s ease-in;
  }
  
  // 脉冲动画（用于提示）
  &.lcropper-control-pulse {
    animation: lcropper-control-pulse 1s ease-in-out infinite;
  }
}

// 控制点动画关键帧
@keyframes lcropper-control-appear {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes lcropper-control-disappear {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.5);
  }
}

@keyframes lcropper-control-pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.8;
  }
}

// ============================================================================
// 控制点尺寸变体
// ============================================================================

.lcropper-control-points {
  // 小尺寸控制点
  &.lcropper-controls-small {
    .lcropper-control-point {
      width: 12px;
      height: 12px;
      
      &::before {
        font-size: 8px;
      }
    }
    
    .lcropper-control-center {
      width: 10px;
      height: 10px;
      
      &::before {
        font-size: 6px;
      }
    }
  }
  
  // 大尺寸控制点
  &.lcropper-controls-large {
    .lcropper-control-point {
      width: 20px;
      height: 20px;
      
      &::before {
        font-size: 12px;
      }
    }
    
    .lcropper-control-center {
      width: 16px;
      height: 16px;
      
      &::before {
        font-size: 10px;
      }
    }
  }
}

// ============================================================================
// 控制点主题
// ============================================================================

.lcropper-control-points {
  // 圆形主题
  &.lcropper-controls-theme-circle {
    .lcropper-control-point {
      border-radius: 50%;
    }
  }
  
  // 方形主题
  &.lcropper-controls-theme-square {
    .lcropper-control-point {
      border-radius: 2px;
    }
  }
  
  // 菱形主题
  &.lcropper-controls-theme-diamond {
    .lcropper-control-point {
      border-radius: 0;
      transform: rotate(45deg);
      
      &::before {
        transform: rotate(-45deg);
      }
    }
  }
}

// ============================================================================
// 响应式控制点
// ============================================================================

.lcropper-control-points {
  // 移动端优化
  .mobile-only({
    .lcropper-control-point {
      width: 24px;
      height: 24px;
      border-width: 3px;
      
      &::before {
        font-size: 12px;
      }
    }
    
    .lcropper-control-center {
      width: 20px;
      height: 20px;
      
      &::before {
        font-size: 10px;
      }
    }
    
    .lcropper-control-rotation {
      top: calc(24px * -2);
      
      &::after {
        height: 12px;
      }
    }
  });
  
  // 平板端优化
  .tablet-only({
    .lcropper-control-point {
      width: 20px;
      height: 20px;
    }
    
    .lcropper-control-center {
      width: 16px;
      height: 16px;
    }
  });
  
  // 桌面端优化
  .desktop-up({
    .lcropper-control-point {
      // 悬停时显示工具提示
      &:hover::after {
        content: attr(data-tooltip);
        position: absolute;
        bottom: 100%;
        left: 50%;
        transform: translateX(-50%);
        padding: 4px 8px;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        font-size: 12px;
        border-radius: 4px;
        white-space: nowrap;
        z-index: var(--lcropper-z-tooltip);
        margin-bottom: 5px;
      }
    }
  });
}

// ============================================================================
// 高对比度模式
// ============================================================================

@media (prefers-contrast: high) {
  .lcropper-control-point {
    border-width: 3px;
    border-color: var(--ldesign-brand-color);
    background-color: #ffffff;
    
    &::before {
      color: var(--ldesign-brand-color);
    }
    
    &:hover {
      background-color: var(--ldesign-brand-color);
      
      &::before {
        color: #ffffff;
      }
    }
  }
}

// ============================================================================
// 减少动画偏好
// ============================================================================

@media (prefers-reduced-motion: reduce) {
  .lcropper-control-point {
    transition: none !important;
    animation: none !important;
    
    &:hover {
      transform: none !important;
    }
    
    &.lcropper-control-active {
      transform: none !important;
    }
  }
}
