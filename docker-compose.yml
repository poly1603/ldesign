version: '3.8'

services:
  # 主项目开发环境
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - '3000:3000'
      - '5173:5173'
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: pnpm dev
    networks:
      - ldesign-network

  # 主项目生产环境
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - '8080:80'
    environment:
      - NODE_ENV=production
    networks:
      - ldesign-network
    profiles:
      - production

  # 文档开发环境
  docs-dev:
    build:
      context: .
      dockerfile: docs/Dockerfile
      target: development
    ports:
      - '5173:5173'
    volumes:
      - ./docs:/app/docs
      - ./packages:/app/packages
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - ldesign-network

  # 文档生产环境
  docs-prod:
    build:
      context: .
      dockerfile: docs/Dockerfile
      target: production
    ports:
      - '8081:80'
    environment:
      - NODE_ENV=production
    networks:
      - ldesign-network
    profiles:
      - production

  # 示例应用 (预留)
  examples:
    build:
      context: .
      dockerfile: examples/Dockerfile
    ports:
      - '8082:80'
    environment:
      - NODE_ENV=production
    networks:
      - ldesign-network
    profiles:
      - production
      - examples

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app-prod
      - docs-prod
    networks:
      - ldesign-network
    profiles:
      - production
      - proxy

  # Redis (如果需要缓存)
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - ldesign-network
    profiles:
      - production
      - cache

networks:
  ldesign-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
