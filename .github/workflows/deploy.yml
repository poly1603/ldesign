name: Deploy

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:
    inputs:
      target:
        description: Deploy target
        required: true
        default: all
        type: choice
        options:
          - all
          - npm
          - cdn
          - docs
      environment:
        description: Environment
        required: true
        default: production
        type: choice
        options:
          - production
          - staging
          - development
      dry_run:
        description: Dry run
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test:coverage

      - name: Type check
        run: pnpm type-check:packages

      - name: Lint check
        run: pnpm lint

      - name: Size check
        run: pnpm size-check
        continue-on-error: true

      - name: Deploy to npm
        if: github.event.inputs.target == 'npm' || github.event.inputs.target == 'all' || github.ref_type == 'tag'
        run: |
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "Dry run mode: skipping npm deployment"
          else
            tsx tools/deploy/deploy-manager.ts npm ${{ github.event.inputs.environment || 'production' }}
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Deploy to CDN
        if: github.event.inputs.target == 'cdn' || github.event.inputs.target == 'all'
        run: |
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "Dry run mode: skipping CDN deployment"
          else
            tsx tools/deploy/deploy-manager.ts cdn ${{ github.event.inputs.environment || 'production' }}
          fi

      - name: Setup Pages
        if: github.event.inputs.target == 'docs' || github.event.inputs.target == 'all'
        uses: actions/configure-pages@v4

      - name: Build docs
        if: github.event.inputs.target == 'docs' || github.event.inputs.target == 'all'
        run: pnpm docs:build

      - name: Upload docs artifact
        if: github.event.inputs.target == 'docs' || github.event.inputs.target == 'all'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

      - name: Deploy to GitHub Pages
        if: github.event.inputs.target == 'docs' || github.event.inputs.target == 'all'
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false

      - name: Create deployment summary
        if: always()
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Item | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Target | ${{ github.event.inputs.target || 'all' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | ${{ github.event.inputs.environment || 'production' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dry Run | ${{ github.event.inputs.dry_run || 'false' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Commit | ${{ github.sha }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Branch | ${{ github.ref_name }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ **Deployment completed successfully!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Deployment failed!**" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Package Links" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- [npm packages](https://www.npmjs.com/org/ldesign)" >> $GITHUB_STEP_SUMMARY
          echo "- [Documentation](https://ldesign.github.io)" >> $GITHUB_STEP_SUMMARY
          echo "- [CDN (jsDelivr)](https://cdn.jsdelivr.net/npm/@ldesign/)" >> $GITHUB_STEP_SUMMARY
          echo "- [CDN (unpkg)](https://unpkg.com/@ldesign/)" >> $GITHUB_STEP_SUMMARY

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "🎉 Deployment completed successfully!"
          else
            echo "❌ Deployment failed!"
          fi
