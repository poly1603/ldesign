name: Performance Monitoring

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # 每天凌晨 2 点运行性能监控
    - cron: '0 2 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Bundle size analysis
        run: |
          pnpm size
          pnpm size:analyze > bundle-analysis.txt

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bundle-analysis.txt

      - name: Comment bundle size
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const analysis = fs.readFileSync('bundle-analysis.txt', 'utf8');

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 📦 Bundle Size Analysis\n\n\`\`\`\n${analysis}\n\`\`\``
              });
            } catch (error) {
              console.log('Bundle analysis file not found or error:', error);
            }

  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run performance benchmarks
        run: |
          # 创建性能测试脚本
          cat > performance-test.js << 'EOF'
          const { performance } = require('perf_hooks');
          const fs = require('fs');

          // 测试包加载性能
          const testPackageLoad = (packageName) => {
            const start = performance.now();
            try {
              require(`./packages/${packageName}/dist/index.js`);
              const end = performance.now();
              return { package: packageName, loadTime: end - start, success: true };
            } catch (error) {
              const end = performance.now();
              return { package: packageName, loadTime: end - start, success: false, error: error.message };
            }
          };

          const packages = ['color', 'crypto', 'device', 'engine', 'http', 'i18n', 'router', 'store'];
          const results = packages.map(testPackageLoad);

          console.log('Performance Benchmark Results:');
          console.log('================================');
          results.forEach(result => {
            const status = result.success ? '✅' : '❌';
            console.log(`${status} ${result.package}: ${result.loadTime.toFixed(2)}ms`);
            if (!result.success) {
              console.log(`   Error: ${result.error}`);
            }
          });

          // 保存结果到文件
          fs.writeFileSync('performance-results.json', JSON.stringify(results, null, 2));
          EOF

          node performance-test.js

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: performance-results.json

  lighthouse-audit:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Start demo server
        run: |
          # 启动演示服务器（如果存在）
          if [ -f "packages/engine/example/package.json" ]; then
            cd packages/engine/example
            pnpm install
            pnpm build
            pnpm preview &
            sleep 10
          fi
        continue-on-error: true

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: ./lighthouse.config.js
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

  regression-detection:
    name: Regression Detection
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout current
        uses: actions/checkout@v4
        with:
          path: current

      - name: Checkout base
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Build and test current
        run: |
          cd current
          pnpm install --frozen-lockfile
          pnpm build
          pnpm size > ../current-size.txt

      - name: Build and test base
        run: |
          cd base
          pnpm install --frozen-lockfile
          pnpm build
          pnpm size > ../base-size.txt

      - name: Compare bundle sizes
        run: |
          echo "## 📊 Bundle Size Comparison" > size-comparison.md
          echo "" >> size-comparison.md
          echo "### Base (target branch)" >> size-comparison.md
          echo "\`\`\`" >> size-comparison.md
          cat base-size.txt >> size-comparison.md
          echo "\`\`\`" >> size-comparison.md
          echo "" >> size-comparison.md
          echo "### Current (PR branch)" >> size-comparison.md
          echo "\`\`\`" >> size-comparison.md
          cat current-size.txt >> size-comparison.md
          echo "\`\`\`" >> size-comparison.md

      - name: Comment size comparison
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const comparison = fs.readFileSync('size-comparison.md', 'utf8');

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comparison
              });
            } catch (error) {
              console.log('Size comparison file not found or error:', error);
            }

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: |
          pnpm audit --audit-level moderate
          echo "Security audit completed"

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
