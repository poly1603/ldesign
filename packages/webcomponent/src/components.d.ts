/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonShape, ButtonType, Size, Theme } from "./types";
export { ButtonShape, ButtonType, Size, Theme } from "./types";
export namespace Components {
    /**
     * 组件基类
     * 提供通用的属性和方法
     */
    interface BaseComponent {
        /**
          * 组件类名
         */
        "class"?: string;
        /**
          * 组件ID
         */
        "componentId"?: string;
        /**
          * 是否禁用
          * @default false
         */
        "disabled": boolean;
        /**
          * 组件尺寸
          * @default 'medium'
         */
        "size": Size;
        /**
          * 主题
          * @default 'light'
         */
        "theme": Theme;
    }
    /**
     * Button 按钮组件
     * 用于触发操作或导航
     */
    interface LdesignButton {
        /**
          * 是否为块级按钮
          * @default false
         */
        "block": boolean;
        /**
          * 是否禁用
          * @default false
         */
        "disabled": boolean;
        /**
          * 图标名称
         */
        "icon"?: string;
        /**
          * 是否加载中
          * @default false
         */
        "loading": boolean;
        /**
          * 按钮形状
          * @default 'rectangle'
         */
        "shape": ButtonShape;
        /**
          * 按钮尺寸
          * @default 'medium'
         */
        "size": Size;
        /**
          * 按钮类型
          * @default 'primary'
         */
        "type": ButtonType;
    }
    /**
     * Icon 图标组件
     * 基于 Lucide 图标库
     */
    interface LdesignIcon {
        /**
          * 图标颜色
         */
        "color"?: string;
        /**
          * 图标名称
         */
        "name": string;
        /**
          * 图标尺寸
          * @default 'medium'
         */
        "size": Size | number;
        /**
          * 是否旋转
          * @default false
         */
        "spin": boolean;
    }
}
export interface LdesignButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLLdesignButtonElement;
}
declare global {
    /**
     * 组件基类
     * 提供通用的属性和方法
     */
    interface HTMLBaseComponentElement extends Components.BaseComponent, HTMLStencilElement {
    }
    var HTMLBaseComponentElement: {
        prototype: HTMLBaseComponentElement;
        new (): HTMLBaseComponentElement;
    };
    interface HTMLLdesignButtonElementEventMap {
        "ldesignClick": MouseEvent;
    }
    /**
     * Button 按钮组件
     * 用于触发操作或导航
     */
    interface HTMLLdesignButtonElement extends Components.LdesignButton, HTMLStencilElement {
        addEventListener<K extends keyof HTMLLdesignButtonElementEventMap>(type: K, listener: (this: HTMLLdesignButtonElement, ev: LdesignButtonCustomEvent<HTMLLdesignButtonElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLLdesignButtonElementEventMap>(type: K, listener: (this: HTMLLdesignButtonElement, ev: LdesignButtonCustomEvent<HTMLLdesignButtonElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLLdesignButtonElement: {
        prototype: HTMLLdesignButtonElement;
        new (): HTMLLdesignButtonElement;
    };
    /**
     * Icon 图标组件
     * 基于 Lucide 图标库
     */
    interface HTMLLdesignIconElement extends Components.LdesignIcon, HTMLStencilElement {
    }
    var HTMLLdesignIconElement: {
        prototype: HTMLLdesignIconElement;
        new (): HTMLLdesignIconElement;
    };
    interface HTMLElementTagNameMap {
        "base-component": HTMLBaseComponentElement;
        "ldesign-button": HTMLLdesignButtonElement;
        "ldesign-icon": HTMLLdesignIconElement;
    }
}
declare namespace LocalJSX {
    /**
     * 组件基类
     * 提供通用的属性和方法
     */
    interface BaseComponent {
        /**
          * 组件类名
         */
        "class"?: string;
        /**
          * 组件ID
         */
        "componentId"?: string;
        /**
          * 是否禁用
          * @default false
         */
        "disabled"?: boolean;
        /**
          * 组件尺寸
          * @default 'medium'
         */
        "size"?: Size;
        /**
          * 主题
          * @default 'light'
         */
        "theme"?: Theme;
    }
    /**
     * Button 按钮组件
     * 用于触发操作或导航
     */
    interface LdesignButton {
        /**
          * 是否为块级按钮
          * @default false
         */
        "block"?: boolean;
        /**
          * 是否禁用
          * @default false
         */
        "disabled"?: boolean;
        /**
          * 图标名称
         */
        "icon"?: string;
        /**
          * 是否加载中
          * @default false
         */
        "loading"?: boolean;
        /**
          * 点击事件
         */
        "onLdesignClick"?: (event: LdesignButtonCustomEvent<MouseEvent>) => void;
        /**
          * 按钮形状
          * @default 'rectangle'
         */
        "shape"?: ButtonShape;
        /**
          * 按钮尺寸
          * @default 'medium'
         */
        "size"?: Size;
        /**
          * 按钮类型
          * @default 'primary'
         */
        "type"?: ButtonType;
    }
    /**
     * Icon 图标组件
     * 基于 Lucide 图标库
     */
    interface LdesignIcon {
        /**
          * 图标颜色
         */
        "color"?: string;
        /**
          * 图标名称
         */
        "name": string;
        /**
          * 图标尺寸
          * @default 'medium'
         */
        "size"?: Size | number;
        /**
          * 是否旋转
          * @default false
         */
        "spin"?: boolean;
    }
    interface IntrinsicElements {
        "base-component": BaseComponent;
        "ldesign-button": LdesignButton;
        "ldesign-icon": LdesignIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            /**
             * 组件基类
             * 提供通用的属性和方法
             */
            "base-component": LocalJSX.BaseComponent & JSXBase.HTMLAttributes<HTMLBaseComponentElement>;
            /**
             * Button 按钮组件
             * 用于触发操作或导航
             */
            "ldesign-button": LocalJSX.LdesignButton & JSXBase.HTMLAttributes<HTMLLdesignButtonElement>;
            /**
             * Icon 图标组件
             * 基于 Lucide 图标库
             */
            "ldesign-icon": LocalJSX.LdesignIcon & JSXBase.HTMLAttributes<HTMLLdesignIconElement>;
        }
    }
}
