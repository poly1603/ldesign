{"version":3,"file":"index.js","names":["DEFAULT_BUILDER_CONFIG: Required<Omit<BuilderConfig, 'env' | 'library'>> & {\n  env: Record<string, Partial<BuilderConfig>>\n  library: Required<LibraryBuildOptions>\n}","fs","stat","files: string[]","typeMap: Record<string, string>","ERROR_MESSAGES: Record<ErrorCode, string>","ERROR_SUGGESTIONS: Record<ErrorCode, string>","path","STAR","POSIX_REGEX_SOURCE","chars","win32","path","append","utils","scan","isGlob","isExtglob","braces","CHAR_LEFT_CURLY_BRACE","CHAR_DOT","CHAR_COMMA","CHAR_RIGHT_CURLY_BRACE","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","constants","utils","parse","MAX_LENGTH","win32","START_ANCHOR","opts","DOTS_SLASH","DOT_LITERAL","NO_DOT","QMARK","QMARK_NO_DOT","STAR","braces","value","append","isExtglob","ONE_CHAR","chars","rest","escaped","open","SLASH_LITERAL","PLUS_LITERAL","NO_DOT_SLASH","NO_DOTS_SLASH","NO_DOTS","source","path","parse","utils","isObject","picomatch","state","format","append","fs","sysPath","picomatch","readdir","promisify","stat","lstat","realpath","BANG","path","depth","basename","readdirp","resolve","path","normalizePath","BANG","arrify","path","anymatch","returnIndex","testString","isExtglob","open","close","isGlob","isGlob","globParent","node","min","utils","stringify","isNumber","toRegexRange","min","zeros","max","stringify","format","min","fill","fill","utils","compile","stringify","expand","stringify","parse","depth","open","index","parse","braces","path","os","fs","sysPath","promisify","stat","lstat","statMethods","path","EV_ERROR","isWindows","EV_CHANGE","listener","NodeFsHandler","basename","EMPTY_FN","dirname","newStats","EV_ADD","EMPTY_STR","STR_DATA","depth","STR_END","EV_ADD_DIR","realpath","stats","BRACE_START","fs","sysPath","maj","min","stat","promisify","path","FsEventsHandler","EV_CHANGE","EV_ADD","EV_UNLINK","isDirectory","EV_ADD_DIR","transform","FUNCTION_TYPE","EV_ERROR","EMPTY_FN","STR_END","fs","stat","path","EventEmitter","now","depth","isDirectory","type: ConfigFileType","info: ConfigFileInfo","fs","config: BuilderConfig","configs: BuilderConfig[]","existingPaths: Array<{ path: string; priority: number }>","LOG_LEVEL_MAP: Record<LogLevel, LogLevelEnum>","config: Partial<BuilderConfig>","result: ValidationResult","format","unifiedConfig: UnifiedConfig","findFiles","entryMap: Record<string, string>","relative","extname","errors: string[]","warnings: string[]","suggestions: string[]","plugins: any[]","options: any","unifiedConfig: UnifiedConfig","errors: string[]","warnings: string[]","suggestions: string[]","plugins: any[]","findFiles","entryMap: Record<string, string>","relative","extname","unifiedConfig: UnifiedConfig","errors: string[]","warnings: string[]","suggestions: string[]","plugins: any[]","externals: string[]","findFiles","entryMap: Record<string, string>","relative","extname","plugins: any[]","findFiles","entryMap: Record<string, string>","relative","extname","unifiedConfig: UnifiedConfig","findFiles","entryMap: Record<string, string>","relative","extname","plugins: any[]","results: PluginLoadResult[]","scores: Record<LibraryType, number>","evidence: Record<LibraryType, DetectionEvidence[]>","result: LibraryDetectionResult","matchedDeps: string[]","foundConfigs: string[]","foundFields: string[]","finalScores: Record<LibraryType, number>","bestType: LibraryType","session: BuildSession","f","performance: TestPerformanceMetrics","testResult: TestRunResult","path","errors: TestError[]","report: ValidationReport","recommendations: any[]","path","path","DEFAULT_VALIDATION_CONFIG: Required<PostBuildValidationConfig>","stats: ValidationStats","validationResult: ValidationResult","summary: ValidationSummary","details: ValidationDetails","report: ValidationReport","results: any[]","buildResult: BuildResult","rollupConfig: any","umdConfig: any","format","transformedPlugins: BundlerSpecificPlugin[]","babelOptions: any","formatMap: Record<string, string>","fs","path","banners: string[]","parts: string[]","buildResult: BuildResult","rolldownConfig: any","transformedPlugins: BundlerSpecificPlugin[]","available: BundlerType[]","validationResult: PostBuildValidationResult | undefined","buildResult: BuildResult","validationContext: ValidationContext","OUTPUT_FORMATS: OutputFormat[]","FORMAT_ALIASES: Record<string, OutputFormat>","FORMAT_DESCRIPTIONS: Record<OutputFormat, string>","FORMAT_EXTENSIONS: Record<OutputFormat, string>","FORMAT_FILE_PATTERNS: Record<OutputFormat, string>","FORMAT_COMPATIBILITY: Record<OutputFormat, {\n  browser: boolean\n  node: boolean\n  requiresGlobals: boolean\n  supportsTreeShaking: boolean\n  supportsCodeSplitting: boolean\n}>","FORMAT_USE_CASES: Record<OutputFormat, string[]>","FORMAT_PRIORITY: Record<OutputFormat, number>","SUPPORTED_BUNDLERS: BundlerType[]","DEFAULT_BUNDLER: BundlerType","commonParts: string[]","parents: string[]","basename","statusMap: Record<string, string>","logger","builderOptions: BuilderOptions"],"sources":["../src/types/builder.ts","../src/types/library.ts","../src/constants/defaults.ts","../src/utils/file-system.ts","../src/constants/errors.ts","../src/utils/error-handler.ts","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/constants.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/utils.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/scan.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/parse.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/picomatch.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/index.js","../../../node_modules/.pnpm/readdirp@3.6.0/node_modules/readdirp/index.js","../../../node_modules/.pnpm/normalize-path@3.0.0/node_modules/normalize-path/index.js","../../../node_modules/.pnpm/anymatch@3.1.3/node_modules/anymatch/index.js","../../../node_modules/.pnpm/is-extglob@2.1.1/node_modules/is-extglob/index.js","../../../node_modules/.pnpm/is-glob@4.0.3/node_modules/is-glob/index.js","../../../node_modules/.pnpm/glob-parent@5.1.2/node_modules/glob-parent/index.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/utils.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/stringify.js","../../../node_modules/.pnpm/is-number@7.0.0/node_modules/is-number/index.js","../../../node_modules/.pnpm/to-regex-range@5.0.1/node_modules/to-regex-range/index.js","../../../node_modules/.pnpm/fill-range@7.1.1/node_modules/fill-range/index.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/compile.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/expand.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/constants.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/parse.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/index.js","../../../node_modules/.pnpm/binary-extensions@2.3.0/node_modules/binary-extensions/binary-extensions.json","../../../node_modules/.pnpm/binary-extensions@2.3.0/node_modules/binary-extensions/index.js","../../../node_modules/.pnpm/is-binary-path@2.1.0/node_modules/is-binary-path/index.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/constants.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/nodefs-handler.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/fsevents-handler.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/index.js","../src/utils/config/config-loader.ts","../src/utils/logger.ts","../src/core/ConfigManager.ts","../src/strategies/typescript/TypeScriptStrategy.ts","../src/strategies/style/StyleStrategy.ts","../src/strategies/vue3/Vue3Strategy.ts","../src/strategies/react/ReactStrategy.ts","../src/strategies/mixed/MixedStrategy.ts","../src/core/StrategyManager.ts","../src/core/PluginManager.ts","../src/constants/library-types.ts","../src/core/LibraryDetector.ts","../src/core/PerformanceMonitor.ts","../src/core/TestRunner.ts","../src/core/ValidationReporter.ts","../src/core/TemporaryEnvironment.ts","../src/core/PostBuildValidator.ts","../src/adapters/rollup/RollupAdapter.ts","../src/adapters/rolldown/RolldownAdapter.ts","../src/adapters/base/AdapterFactory.ts","../src/core/LibraryBuilder.ts","../src/strategies/vue2/Vue2Strategy.ts","../src/types/adapter.ts","../src/types/plugin.ts","../src/types/bundler.ts","../src/constants/formats.ts","../src/constants/bundlers.ts","../src/constants/extensions.ts","../src/constants/messages.ts","../src/utils/path-utils.ts","../src/utils/format-utils.ts","../src/utils/index.ts","../src/utils/factory.ts"],"sourcesContent":["/**\n * 构建器相关类型定义\n */\n\nimport type { EventEmitter } from 'events'\nimport type { BuilderConfig } from './config'\nimport type { OutputFile, BuildStats } from './output'\nimport type { PerformanceMetrics } from './performance'\nimport type { ValidationResult } from './common'\nimport type { ValidationResult as PostBuildValidationResult } from '../types/validation'\n\n/**\n * 构建器状态枚举\n */\nexport enum BuilderStatus {\n  /** 空闲状态 */\n  IDLE = 'idle',\n  /** 初始化中 */\n  INITIALIZING = 'initializing',\n  /** 构建中 */\n  BUILDING = 'building',\n  /** 监听中 */\n  WATCHING = 'watching',\n  /** 错误状态 */\n  ERROR = 'error',\n  /** 已销毁 */\n  DISPOSED = 'disposed'\n}\n\n/**\n * 构建器事件枚举\n */\nexport enum BuilderEvent {\n  /** 构建开始 */\n  BUILD_START = 'build:start',\n  /** 构建进度 */\n  BUILD_PROGRESS = 'build:progress',\n  /** 构建结束 */\n  BUILD_END = 'build:end',\n  /** 构建错误 */\n  BUILD_ERROR = 'build:error',\n  /** 监听开始 */\n  WATCH_START = 'watch:start',\n  /** 监听变化 */\n  WATCH_CHANGE = 'watch:change',\n  /** 监听结束 */\n  WATCH_END = 'watch:end',\n  /** 配置变化 */\n  CONFIG_CHANGE = 'config:change',\n  /** 状态变化 */\n  STATUS_CHANGE = 'status:change'\n}\n\n/**\n * 构建器选项\n */\nexport interface BuilderOptions {\n  /** 工作目录 */\n  cwd?: string\n\n  /** 初始配置 */\n  config?: BuilderConfig\n\n  /** 事件监听器 */\n  listeners?: Partial<BuilderEventListeners>\n\n  /** 日志记录器 */\n  logger?: any\n\n  /** 是否自动检测库类型 */\n  autoDetect?: boolean\n\n  /** 是否启用缓存 */\n  cache?: boolean\n\n  /** 缓存目录 */\n  cacheDir?: string\n\n  /** 是否启用性能监控 */\n  performance?: boolean\n}\n\n/**\n * 构建器事件监听器\n */\nexport interface BuilderEventListeners {\n  [BuilderEvent.BUILD_START]: (data: BuildStartEventData) => void\n  [BuilderEvent.BUILD_PROGRESS]: (data: BuildProgressEventData) => void\n  [BuilderEvent.BUILD_END]: (data: BuildEndEventData) => void\n  [BuilderEvent.BUILD_ERROR]: (data: BuildErrorEventData) => void\n  [BuilderEvent.WATCH_START]: (data: WatchStartEventData) => void\n  [BuilderEvent.WATCH_CHANGE]: (data: WatchChangeEventData) => void\n  [BuilderEvent.WATCH_END]: (data: WatchEndEventData) => void\n  [BuilderEvent.CONFIG_CHANGE]: (data: ConfigChangeEventData) => void\n  [BuilderEvent.STATUS_CHANGE]: (data: StatusChangeEventData) => void\n}\n\n/**\n * 构建开始事件数据\n */\nexport interface BuildStartEventData {\n  /** 配置 */\n  config: BuilderConfig\n  /** 时间戳 */\n  timestamp: number\n  /** 构建 ID */\n  buildId: string\n}\n\n/**\n * 构建进度事件数据\n */\nexport interface BuildProgressEventData {\n  /** 进度百分比 */\n  progress: number\n  /** 当前阶段 */\n  phase: string\n  /** 当前文件 */\n  currentFile?: string\n  /** 已处理文件数 */\n  processedFiles: number\n  /** 总文件数 */\n  totalFiles: number\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 构建结束事件数据\n */\nexport interface BuildEndEventData {\n  /** 构建结果 */\n  result: BuildResult\n  /** 持续时间 */\n  duration: number\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 构建错误事件数据\n */\nexport interface BuildErrorEventData {\n  /** 错误信息 */\n  error: Error\n  /** 错误阶段 */\n  phase: string\n  /** 相关文件 */\n  file?: string\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 监听开始事件数据\n */\nexport interface WatchStartEventData {\n  /** 监听的文件模式 */\n  patterns: string[]\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 监听变化事件数据\n */\nexport interface WatchChangeEventData {\n  /** 变化类型 */\n  type: 'add' | 'change' | 'unlink'\n  /** 文件路径 */\n  path: string\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 监听结束事件数据\n */\nexport interface WatchEndEventData {\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 配置变化事件数据\n */\nexport interface ConfigChangeEventData {\n  /** 新配置 */\n  config: BuilderConfig\n  /** 旧配置 */\n  oldConfig: BuilderConfig\n  /** 配置文件路径 */\n  configFile?: string\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 状态变化事件数据\n */\nexport interface StatusChangeEventData {\n  /** 新状态 */\n  status: BuilderStatus\n  /** 旧状态 */\n  oldStatus: BuilderStatus\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 构建结果\n */\nexport interface BuildResult {\n  /** 构建是否成功 */\n  success: boolean\n\n  /** 输出文件列表 */\n  outputs: OutputFile[]\n\n  /** 构建时间（毫秒） */\n  duration: number\n\n  /** 构建统计 */\n  stats: BuildStats\n\n  /** 性能指标 */\n  performance: PerformanceMetrics\n\n  /** 警告信息 */\n  warnings: Warning[]\n\n  /** 错误信息 */\n  errors: Error[]\n\n  /** 构建 ID */\n  buildId: string\n\n  /** 时间戳 */\n  timestamp: number\n\n  /** 构建器名称 */\n  bundler: string\n\n  /** 构建模式 */\n  mode: string\n\n  /** 库类型 */\n  libraryType?: string\n\n  /** 打包后验证结果 */\n  validation?: PostBuildValidationResult\n}\n\n/**\n * 警告信息\n */\nexport interface Warning {\n  /** 警告代码 */\n  code: string\n\n  /** 警告消息 */\n  message: string\n\n  /** 相关文件 */\n  file?: string\n\n  /** 行号 */\n  line?: number\n\n  /** 列号 */\n  column?: number\n\n  /** 建议 */\n  suggestion?: string\n}\n\n/**\n * 构建监听器\n */\nexport interface BuildWatcher extends EventEmitter {\n  /** 关闭监听器 */\n  close(): Promise<void>\n\n  /** 是否正在监听 */\n  readonly watching: boolean\n\n  /** 监听的文件模式 */\n  readonly patterns: string[]\n}\n\n/**\n * 库构建器接口\n */\nexport interface ILibraryBuilder extends EventEmitter {\n  // 构建管理\n  build(config?: BuilderConfig): Promise<BuildResult>\n  buildWatch(config?: BuilderConfig): Promise<BuildWatcher>\n\n  // 配置管理\n  mergeConfig(base: BuilderConfig, override: BuilderConfig): BuilderConfig\n  validateConfig(config: BuilderConfig): ValidationResult\n  loadConfig(configPath?: string): Promise<BuilderConfig>\n\n  // 核心切换\n  setBundler(bundler: 'rollup' | 'rolldown'): void\n  getBundler(): 'rollup' | 'rolldown'\n\n  // 库类型管理\n  setLibraryType(type: string): void\n  detectLibraryType(projectPath: string): Promise<string>\n\n  // 状态管理\n  getStatus(): BuilderStatus\n  isBuilding(): boolean\n  isWatching(): boolean\n\n  // 生命周期\n  initialize(): Promise<void>\n  dispose(): Promise<void>\n\n  // 统计信息\n  getStats(): BuildStats | null\n  getPerformanceMetrics(): PerformanceMetrics | null\n}\n\n/**\n * 构建上下文\n */\nexport interface BuildContext {\n  /** 构建 ID */\n  buildId: string\n\n  /** 开始时间 */\n  startTime: number\n\n  /** 配置 */\n  config: BuilderConfig\n\n  /** 工作目录 */\n  cwd: string\n\n  /** 缓存目录 */\n  cacheDir: string\n\n  /** 临时目录 */\n  tempDir: string\n\n  /** 是否为监听模式 */\n  watch: boolean\n\n  /** 环境变量 */\n  env: Record<string, string>\n\n  /** 日志记录器 */\n  logger: any\n\n  /** 性能监控器 */\n  performanceMonitor: any\n}\n\n/**\n * 构建钩子\n */\nexport interface BuildHooks {\n  /** 构建前钩子 */\n  beforeBuild?: (context: BuildContext) => Promise<void> | void\n\n  /** 构建后钩子 */\n  afterBuild?: (context: BuildContext, result: BuildResult) => Promise<void> | void\n\n  /** 错误钩子 */\n  onError?: (context: BuildContext, error: Error) => Promise<void> | void\n\n  /** 监听开始钩子 */\n  onWatchStart?: (context: BuildContext) => Promise<void> | void\n\n  /** 文件变化钩子 */\n  onFileChange?: (context: BuildContext, file: string, type: string) => Promise<void> | void\n\n  /** 监听结束钩子 */\n  onWatchEnd?: (context: BuildContext) => Promise<void> | void\n}\n\n/**\n * 构建器工厂选项\n */\nexport interface BuilderFactoryOptions {\n  /** 默认打包器 */\n  defaultBundler?: 'rollup' | 'rolldown'\n\n  /** 插件预设 */\n  pluginPresets?: Record<string, any[]>\n\n  /** 配置预设 */\n  configPresets?: Record<string, Partial<BuilderConfig>>\n\n  /** 是否启用自动检测 */\n  autoDetection?: boolean\n\n  /** 缓存配置 */\n  cache?: {\n    enabled: boolean\n    dir: string\n    ttl: number\n  }\n}\n\n/**\n * 构建器实例信息\n */\nexport interface BuilderInstanceInfo {\n  /** 实例 ID */\n  id: string\n\n  /** 创建时间 */\n  createdAt: number\n\n  /** 最后使用时间 */\n  lastUsedAt: number\n\n  /** 构建次数 */\n  buildCount: number\n\n  /** 当前状态 */\n  status: BuilderStatus\n\n  /** 配置摘要 */\n  configSummary: {\n    bundler: string\n    libraryType?: string\n    mode: string\n  }\n}\n","/**\n * 库类型相关定义\n */\n\n/**\n * 库类型枚举\n */\nexport enum LibraryType {\n  /** TypeScript 库 */\n  TYPESCRIPT = 'typescript',\n  /** 样式库 */\n  STYLE = 'style',\n  /** Vue2 组件库 */\n  VUE2 = 'vue2',\n  /** Vue3 组件库 */\n  VUE3 = 'vue3',\n  /** React 组件库 */\n  REACT = 'react',\n  /** 混合库 */\n  MIXED = 'mixed'\n}\n\n/**\n * 库检测结果\n */\nexport interface LibraryDetectionResult {\n  /** 检测到的库类型 */\n  type: LibraryType\n  /** 置信度 (0-1) */\n  confidence: number\n  /** 检测依据 */\n  evidence: DetectionEvidence[]\n  /** 建议的配置 */\n  suggestedConfig?: Partial<any>\n}\n\n/**\n * 检测依据\n */\nexport interface DetectionEvidence {\n  /** 依据类型 */\n  type: 'file' | 'dependency' | 'config' | 'content'\n  /** 依据描述 */\n  description: string\n  /** 权重 */\n  weight: number\n  /** 相关文件或配置 */\n  source?: string\n}\n\n/**\n * TypeScript 库配置\n */\nexport interface TypeScriptLibraryConfig {\n  /** tsconfig.json 路径 */\n  tsconfig?: string\n  /** 是否生成类型声明文件 */\n  declaration?: boolean\n  /** 类型声明文件输出目录 */\n  declarationDir?: string\n  /** 是否生成声明文件映射 */\n  declarationMap?: boolean\n  /** 是否启用 isolatedDeclarations */\n  isolatedDeclarations?: boolean\n  /** 是否跳过库检查 */\n  skipLibCheck?: boolean\n  /** 是否允许合成默认导入 */\n  allowSyntheticDefaultImports?: boolean\n  /** 是否启用严格模式 */\n  strict?: boolean\n  /** 目标 ES 版本 */\n  target?: string\n  /** 模块系统 */\n  module?: string\n  /** 模块解析策略 */\n  moduleResolution?: string\n  /** 基础 URL */\n  baseUrl?: string\n  /** 路径映射 */\n  paths?: Record<string, string[]>\n}\n\n/**\n * Vue 库配置\n */\nexport interface VueLibraryConfig {\n  /** Vue 版本 */\n  version?: 2 | 3\n  /** 是否支持按需加载 */\n  onDemand?: boolean\n  /** 编译器选项 */\n  compilerOptions?: {\n    /** 自定义元素判断函数 */\n    isCustomElement?: (tag: string) => boolean\n    /** 是否保留空白字符 */\n    whitespace?: 'preserve' | 'condense'\n    /** 是否启用注释 */\n    comments?: boolean\n    /** 自定义指令前缀 */\n    directiveTransforms?: Record<string, any>\n  }\n  /** JSX 配置 */\n  jsx?: {\n    /** JSX 工厂函数 */\n    factory?: string\n    /** JSX 片段 */\n    fragment?: string\n    /** 是否启用 JSX */\n    enabled?: boolean\n  }\n  /** 模板配置 */\n  template?: {\n    /** 是否预编译模板 */\n    precompile?: boolean\n    /** 模板编译器选项 */\n    compilerOptions?: Record<string, any>\n  }\n  /** 脚本配置 */\n  script?: {\n    /** 是否启用 defineModel */\n    defineModel?: boolean\n    /** 是否启用 props 解构 */\n    propsDestructure?: boolean\n    /** 其他脚本选项 */\n    [key: string]: any\n  }\n  /** 样式配置 */\n  style?: {\n    /** 是否修剪样式 */\n    trim?: boolean\n    /** 其他样式选项 */\n    [key: string]: any\n  }\n}\n\n/**\n * 样式库配置\n */\nexport interface StyleLibraryConfig {\n  /** 预处理器类型 */\n  preprocessor?: 'auto' | 'less' | 'scss' | 'sass' | 'stylus' | 'postcss' | {\n    /** Less 配置 */\n    less?: {\n      enabled?: boolean\n      options?: {\n        javascriptEnabled?: boolean\n        modifyVars?: Record<string, any>\n        [key: string]: any\n      }\n    }\n    /** Sass 配置 */\n    sass?: {\n      enabled?: boolean\n      options?: {\n        includePaths?: string[]\n        [key: string]: any\n      }\n    }\n  }\n  /** 是否提取 CSS */\n  extract?: boolean\n  /** 是否压缩 CSS */\n  minimize?: boolean\n  /** 是否启用 autoprefixer */\n  autoprefixer?: boolean\n  /** 浏览器兼容性列表 */\n  browserslist?: string[]\n  /** 是否启用 CSS 模块 */\n  modules?: boolean | {\n    /** 类名生成模式 */\n    generateScopedName?: string | ((name: string, filename: string, css: string) => string)\n    /** 全局模式 */\n    globalModulePaths?: string[]\n    /** 导出全局变量 */\n    exportGlobals?: boolean\n  }\n  /** PostCSS 插件 */\n  postcssPlugins?: any[]\n  /** 变量文件路径 */\n  variablesFile?: string\n  /** 主题配置 */\n  theme?: Record<string, any>\n}\n\n/**\n * 混合库配置\n */\nexport interface MixedLibraryConfig {\n  /** TypeScript 配置 */\n  typescript?: TypeScriptLibraryConfig\n  /** Vue 配置 */\n  vue?: VueLibraryConfig\n  /** 样式配置 */\n  style?: StyleLibraryConfig\n  /** 主要库类型 */\n  primaryType?: LibraryType\n  /** 次要库类型 */\n  secondaryTypes?: LibraryType[]\n}\n\n/**\n * 库元数据\n */\nexport interface LibraryMetadata {\n  /** 库名称 */\n  name: string\n  /** 库版本 */\n  version: string\n  /** 库描述 */\n  description?: string\n  /** 库类型 */\n  type: LibraryType\n  /** 入口文件 */\n  entry: string | string[]\n  /** 输出目录 */\n  outputDir: string\n  /** 依赖列表 */\n  dependencies: string[]\n  /** 开发依赖列表 */\n  devDependencies: string[]\n  /** 对等依赖列表 */\n  peerDependencies: string[]\n  /** 支持的环境 */\n  environments: ('browser' | 'node' | 'worker')[]\n  /** 支持的模块格式 */\n  formats: ('esm' | 'cjs' | 'umd' | 'iife')[]\n  /** 是否支持 Tree Shaking */\n  treeshakable: boolean\n  /** 是否支持按需加载 */\n  sideEffects: boolean | string[]\n}\n\n/**\n * 库分析结果\n */\nexport interface LibraryAnalysisResult {\n  /** 库元数据 */\n  metadata: LibraryMetadata\n  /** 检测结果 */\n  detection: LibraryDetectionResult\n  /** 文件统计 */\n  fileStats: {\n    total: number\n    byType: Record<string, number>\n    bySize: Record<string, number>\n  }\n  /** 依赖分析 */\n  dependencyAnalysis: {\n    total: number\n    external: string[]\n    internal: string[]\n    circular: string[][]\n  }\n  /** 建议的优化 */\n  optimizations: OptimizationSuggestion[]\n}\n\n/**\n * 优化建议\n */\nexport interface OptimizationSuggestion {\n  /** 建议类型 */\n  type: 'performance' | 'size' | 'compatibility' | 'maintainability'\n  /** 建议标题 */\n  title: string\n  /** 建议描述 */\n  description: string\n  /** 影响程度 */\n  impact: 'low' | 'medium' | 'high'\n  /** 实施难度 */\n  difficulty: 'easy' | 'medium' | 'hard'\n  /** 相关配置 */\n  config?: Record<string, any>\n}\n\n/**\n * 库构建选项\n */\nexport interface LibraryBuildOptions {\n  /** 是否启用 bundleless 模式 */\n  bundleless?: boolean\n  /** 是否保留模块结构 */\n  preserveModules?: boolean\n  /** 是否生成类型声明 */\n  generateTypes?: boolean\n  /** 是否压缩代码 */\n  minify?: boolean\n  /** 是否生成 sourcemap */\n  sourcemap?: boolean\n  /** 外部依赖处理 */\n  external?: string[] | ((id: string) => boolean)\n  /** 全局变量映射 */\n  globals?: Record<string, string>\n  /** 输出格式 */\n  formats?: ('esm' | 'cjs' | 'umd' | 'iife')[]\n  /** 代码分割配置 */\n  splitting?: boolean | {\n    /** 手动分块 */\n    manualChunks?: Record<string, string[]>\n    /** 分块策略 */\n    strategy?: 'default' | 'vendor' | 'component'\n  }\n}\n\n/**\n * 库发布配置\n */\nexport interface LibraryPublishConfig {\n  /** 发布注册表 */\n  registry?: string\n  /** 访问级别 */\n  access?: 'public' | 'restricted'\n  /** 标签 */\n  tag?: string\n  /** 是否干运行 */\n  dryRun?: boolean\n  /** 发布前钩子 */\n  beforePublish?: () => Promise<void> | void\n  /** 发布后钩子 */\n  afterPublish?: () => Promise<void> | void\n}\n","/**\n * 默认配置常量\n */\n\nimport type { BuilderConfig } from '../types/config'\nimport type { LibraryBuildOptions } from '../types/library'\nimport type { PostBuildValidationConfig } from '../types/validation'\nimport { LibraryType } from '../types/library'\n\n/**\n * 默认构建器配置\n */\nexport const DEFAULT_BUILDER_CONFIG: Required<Omit<BuilderConfig, 'env' | 'library'>> & {\n  env: Record<string, Partial<BuilderConfig>>\n  library: Required<LibraryBuildOptions>\n} = {\n  // 基础配置\n  input: 'src/index.ts',\n  output: {\n    dir: 'dist',\n    format: ['esm', 'cjs'],\n    fileName: '[name].[format].js',\n    sourcemap: true,\n    chunkFileNames: '[name]-[hash].js',\n    assetFileNames: '[name]-[hash][extname]'\n  },\n\n  // 打包器配置\n  bundler: 'rollup',\n\n  // 模式配置\n  mode: 'production',\n\n  // 库类型（自动检测）\n  libraryType: LibraryType.TYPESCRIPT,\n\n  // 输出选项\n  bundleless: false,\n  minify: false, // 默认不压缩\n  clean: true,\n\n  // UMD 构建配置\n  umd: {\n    enabled: true,\n    entry: 'src/index.ts',\n    name: 'MyLibrary', // 默认名称，会自动从 package.json 推断\n    forceMultiEntry: false,\n    fileName: 'index.umd.js',\n    globals: {},\n    minify: false // 默认不压缩\n  },\n\n  // Babel 转换配置\n  babel: {\n    enabled: false, // 默认不启用\n    presets: [],\n    plugins: [],\n    targets: 'defaults',\n    polyfill: false,\n    runtime: false,\n    configFile: false,\n    babelrc: true,\n    exclude: /node_modules/,\n    include: []\n  },\n\n  // Banner 和 Footer 配置\n  banner: {\n    banner: '',\n    footer: '',\n    intro: '',\n    outro: '',\n    copyright: false,\n    buildInfo: false\n  },\n\n  // 外部依赖\n  external: [],\n  globals: {},\n\n  // 插件配置\n  plugins: [],\n\n  // TypeScript 配置\n  typescript: {\n    tsconfig: './tsconfig.json',\n    declaration: true,\n    declarationDir: undefined, // 默认与 output.dir 相同\n    isolatedDeclarations: false,\n    skipLibCheck: true,\n    allowSyntheticDefaultImports: true,\n    strict: true,\n    target: 'ES2020',\n    module: 'ESNext',\n    moduleResolution: 'node'\n  },\n\n  // Vue 配置\n  vue: {\n    version: 3,\n    onDemand: false,\n    compilerOptions: {},\n    jsx: {\n      enabled: false,\n      factory: 'h',\n      fragment: 'Fragment'\n    },\n    template: {\n      precompile: true\n    }\n  },\n\n  // 样式配置\n  style: {\n    preprocessor: 'auto', // 自动检测\n    extract: true,\n    minimize: true,\n    autoprefixer: true,\n    modules: false,\n    postcssPlugins: []\n  },\n\n  // 性能配置\n  performance: {\n    bundleAnalyzer: false,\n    sizeLimit: undefined,\n    treeshaking: true,\n    cache: true,\n    parallel: true,\n    monitoring: false\n  },\n\n  // 调试配置\n  debug: false,\n\n  // 打包后验证配置\n  postBuildValidation: {\n    enabled: false,\n    testFramework: 'auto',\n    testPattern: ['**/*.test.{js,ts}', '**/*.spec.{js,ts}'],\n    timeout: 60000,\n    failOnError: true,\n    environment: {\n      tempDir: '.validation-temp',\n      keepTempFiles: false,\n      env: {},\n      packageManager: 'auto',\n      installDependencies: true,\n      installTimeout: 300000\n    },\n    reporting: {\n      format: 'console',\n      outputPath: 'validation-report',\n      verbose: false,\n      logLevel: 'info',\n      includePerformance: true,\n      includeCoverage: false\n    },\n    hooks: {},\n    scope: {\n      formats: ['esm', 'cjs'],\n      fileTypes: ['js', 'ts', 'dts'],\n      exclude: ['**/*.d.ts', '**/node_modules/**'],\n      include: ['**/*'],\n      validateTypes: true,\n      validateStyles: false,\n      validateSourceMaps: false\n    }\n  } as PostBuildValidationConfig,\n\n  // 环境配置\n  env: {\n    development: {\n      mode: 'development',\n      minify: false,\n      output: {\n        sourcemap: 'inline'\n      },\n      debug: true\n    },\n    production: {\n      mode: 'production',\n      minify: true,\n      output: {\n        sourcemap: true\n      },\n      debug: false\n    }\n  },\n\n  // 缓存配置\n  cache: {\n    enabled: true,\n    dir: 'node_modules/.cache/@ldesign/builder',\n    maxAge: 86400000, // 24 hours\n    maxSize: 500 * 1024 * 1024 // 500MB\n  },\n\n  // 监听配置\n  watch: {\n    include: ['src/**/*'],\n    exclude: ['node_modules/**/*', 'dist/**/*'],\n    persistent: true,\n    ignoreInitial: true\n  },\n\n  // 环境变量\n  define: {},\n\n  // 工作目录\n  cwd: process.cwd(),\n\n  // 配置文件路径\n  configFile: 'ldesign.config.ts',\n\n  // 日志级别\n  logLevel: 'info',\n\n  // 库构建选项\n  library: {\n    bundleless: false,\n    preserveModules: false,\n    generateTypes: true,\n    minify: true,\n    sourcemap: true,\n    external: [],\n    globals: {},\n    formats: ['esm', 'cjs'],\n    splitting: false\n  }\n}\n\n/**\n * 预设配置\n */\nexport const PRESET_CONFIGS = {\n  // TypeScript 库预设\n  typescript: {\n    libraryType: LibraryType.TYPESCRIPT,\n    typescript: {\n      declaration: true,\n      isolatedDeclarations: true\n    },\n    output: {\n      format: ['esm', 'cjs']\n    },\n    library: {\n      generateTypes: true,\n      formats: ['esm', 'cjs']\n    }\n  },\n\n  // Vue3 组件库预设\n  vue3: {\n    libraryType: LibraryType.VUE3,\n    vue: {\n      version: 3,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    library: {\n      formats: ['esm', 'cjs', 'umd']\n    }\n  },\n\n  // Vue2 组件库预设\n  vue2: {\n    libraryType: LibraryType.VUE2,\n    vue: {\n      version: 2,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    library: {\n      formats: ['esm', 'cjs', 'umd']\n    }\n  },\n\n  // 样式库预设\n  style: {\n    libraryType: LibraryType.STYLE,\n    style: {\n      extract: true,\n      minimize: true\n    },\n    output: {\n      format: ['esm']\n    },\n    library: {\n      formats: ['esm']\n    }\n  },\n\n  // 混合库预设\n  mixed: {\n    libraryType: LibraryType.MIXED,\n    typescript: {\n      declaration: true\n    },\n    style: {\n      extract: true\n    },\n    output: {\n      format: ['esm', 'cjs']\n    },\n    library: {\n      formats: ['esm', 'cjs']\n    }\n  }\n} as const\n\n/**\n * 支持的配置文件名称\n */\nexport const CONFIG_FILE_NAMES = [\n  'ldesign.config.ts',\n  'ldesign.config.js',\n  'ldesign.config.mjs',\n  'ldesign.config.json',\n  'builder.config.ts',\n  'builder.config.js',\n  'builder.config.mjs',\n  'builder.config.json',\n  '.builderrc.ts',\n  '.builderrc.js',\n  '.builderrc.json'\n] as const\n\n/**\n * 默认外部依赖\n */\nexport const DEFAULT_EXTERNAL_DEPS = [\n  // Node.js 内置模块\n  'fs', 'path', 'url', 'util', 'events', 'stream', 'crypto', 'os', 'http', 'https',\n\n  // 常见的前端框架（通常作为外部依赖）\n  'react', 'react-dom', 'vue', '@vue/runtime-core', '@vue/runtime-dom',\n  'angular', '@angular/core', '@angular/common',\n\n  // 常见的工具库\n  'lodash', 'moment', 'dayjs', 'axios'\n] as const\n\n/**\n * 默认全局变量映射\n */\nexport const DEFAULT_GLOBALS = {\n  'react': 'React',\n  'react-dom': 'ReactDOM',\n  'vue': 'Vue',\n  'lodash': '_',\n  'moment': 'moment',\n  'dayjs': 'dayjs',\n  'axios': 'axios'\n} as const\n\n/**\n * 默认文件名模式\n */\nexport const DEFAULT_FILE_PATTERNS = {\n  entry: '[name].[format].js',\n  chunk: '[name]-[hash].js',\n  asset: '[name]-[hash][extname]',\n  types: '[name].d.ts'\n} as const\n\n/**\n * 默认缓存配置\n */\nexport const DEFAULT_CACHE_CONFIG = {\n  enabled: true,\n  dir: 'node_modules/.cache/@ldesign/builder',\n  ttl: 24 * 60 * 60 * 1000, // 24 hours\n  maxSize: 500 * 1024 * 1024, // 500MB\n  compress: true,\n  version: '1.0.0'\n} as const\n\n/**\n * 默认性能配置\n */\nexport const DEFAULT_PERFORMANCE_CONFIG = {\n  bundleAnalyzer: false,\n  sizeLimit: undefined,\n  treeshaking: true,\n  cache: true,\n  parallel: true,\n  memoryLimit: '2GB',\n  timeout: 300000, // 5 minutes\n  monitoring: false\n} as const\n\n/**\n * 默认监听配置\n */\nexport const DEFAULT_WATCH_CONFIG = {\n  include: ['src/**/*'],\n  exclude: ['node_modules/**/*', 'dist/**/*', '**/*.test.*', '**/*.spec.*'],\n  persistent: true,\n  ignoreInitial: true,\n  followSymlinks: true,\n  usePolling: false,\n  interval: 100,\n  binaryInterval: 300,\n  alwaysStat: false,\n  depth: 99,\n  awaitWriteFinish: {\n    stabilityThreshold: 2000,\n    pollInterval: 100\n  }\n} as const\n","/**\n * 文件系统操作工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport { promises as fs } from 'fs'\nimport path from 'path'\nimport fastGlob from 'fast-glob'\nimport type { FileInfo } from '../types/common'\n\n/**\n * 文件系统工具类\n */\nexport class FileSystem {\n  /**\n   * 检查文件或目录是否存在\n   */\n  static async exists(filePath: string): Promise<boolean> {\n    try {\n      await fs.access(filePath)\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 同步检查文件或目录是否存在\n   */\n  static existsSync(filePath: string): boolean {\n    try {\n      require('fs').accessSync(filePath)\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 读取文件内容\n   */\n  static async readFile(filePath: string, encoding: BufferEncoding = 'utf8'): Promise<string> {\n    return fs.readFile(filePath, encoding)\n  }\n\n  /**\n   * 写入文件内容\n   */\n  static async writeFile(filePath: string, content: string, encoding: BufferEncoding = 'utf8'): Promise<void> {\n    // 确保目录存在\n    await this.ensureDir(path.dirname(filePath))\n    return fs.writeFile(filePath, content, encoding)\n  }\n\n  /**\n   * 复制文件\n   */\n  static async copyFile(src: string, dest: string): Promise<void> {\n    // 确保目标目录存在\n    await this.ensureDir(path.dirname(dest))\n    return fs.copyFile(src, dest)\n  }\n\n  /**\n   * 删除文件\n   */\n  static async removeFile(filePath: string): Promise<void> {\n    if (await this.exists(filePath)) {\n      return fs.unlink(filePath)\n    }\n  }\n\n  /**\n   * 创建目录\n   */\n  static async ensureDir(dirPath: string): Promise<void> {\n    try {\n      await fs.mkdir(dirPath, { recursive: true })\n    } catch (error) {\n      // 忽略目录已存在的错误\n      if ((error as NodeJS.ErrnoException).code !== 'EEXIST') {\n        throw error\n      }\n    }\n  }\n\n  /**\n   * 删除目录\n   */\n  static async removeDir(dirPath: string): Promise<void> {\n    if (await this.exists(dirPath)) {\n      return fs.rmdir(dirPath, { recursive: true })\n    }\n  }\n\n  /**\n   * 清空目录\n   */\n  static async emptyDir(dirPath: string): Promise<void> {\n    if (await this.exists(dirPath)) {\n      const files = await fs.readdir(dirPath)\n      await Promise.all(\n        files.map(async (file) => {\n          const filePath = path.join(dirPath, file)\n          const stat = await fs.stat(filePath)\n          if (stat.isDirectory()) {\n            await this.removeDir(filePath)\n          } else {\n            await this.removeFile(filePath)\n          }\n        })\n      )\n    }\n  }\n\n  /**\n   * 获取文件统计信息\n   */\n  static async stat(filePath: string): Promise<FileInfo> {\n    const stats = await fs.stat(filePath)\n    const ext = path.extname(filePath)\n\n    return {\n      path: filePath,\n      size: stats.size,\n      type: stats.isDirectory() ? 'directory' : this.getFileType(ext)\n    }\n  }\n\n  /**\n   * 读取目录内容\n   */\n  static async readDir(dirPath: string): Promise<string[]> {\n    return fs.readdir(dirPath)\n  }\n\n  /**\n   * 递归读取目录内容\n   */\n  static async readDirRecursive(dirPath: string): Promise<string[]> {\n    const files: string[] = []\n\n    const traverse = async (currentPath: string) => {\n      const items = await fs.readdir(currentPath)\n\n      for (const item of items) {\n        const itemPath = path.join(currentPath, item)\n        const stat = await fs.stat(itemPath)\n\n        if (stat.isDirectory()) {\n          await traverse(itemPath)\n        } else {\n          files.push(itemPath)\n        }\n      }\n    }\n\n    await traverse(dirPath)\n    return files\n  }\n\n  /**\n   * 使用 glob 模式查找文件\n   */\n  static async glob(pattern: string | string[], options: {\n    cwd?: string\n    ignore?: string[]\n    absolute?: boolean\n    onlyFiles?: boolean\n    onlyDirectories?: boolean\n  } = {}): Promise<string[]> {\n    return fastGlob(pattern, {\n      cwd: options.cwd || process.cwd(),\n      ignore: options.ignore || [],\n      absolute: options.absolute ?? true,\n      onlyFiles: options.onlyFiles ?? true,\n      onlyDirectories: options.onlyDirectories ?? false\n    })\n  }\n\n  /**\n   * 查找文件\n   */\n  static async findFiles(\n    patterns: string[],\n    options: {\n      cwd?: string\n      ignore?: string[]\n      maxDepth?: number\n    } = {}\n  ): Promise<string[]> {\n    return this.glob(patterns, {\n      cwd: options.cwd,\n      ignore: options.ignore,\n      onlyFiles: true\n    })\n  }\n\n  /**\n   * 查找目录\n   */\n  static async findDirs(\n    patterns: string[],\n    options: {\n      cwd?: string\n      ignore?: string[]\n      maxDepth?: number\n    } = {}\n  ): Promise<string[]> {\n    return this.glob(patterns, {\n      cwd: options.cwd,\n      ignore: options.ignore,\n      onlyDirectories: true\n    })\n  }\n\n  /**\n   * 获取文件大小\n   */\n  static async getFileSize(filePath: string): Promise<number> {\n    const stats = await fs.stat(filePath)\n    return stats.size\n  }\n\n  /**\n   * 获取目录大小\n   */\n  static async getDirSize(dirPath: string): Promise<number> {\n    let totalSize = 0\n\n    const traverse = async (currentPath: string) => {\n      const items = await fs.readdir(currentPath)\n\n      for (const item of items) {\n        const itemPath = path.join(currentPath, item)\n        const stat = await fs.stat(itemPath)\n\n        if (stat.isDirectory()) {\n          await traverse(itemPath)\n        } else {\n          totalSize += stat.size\n        }\n      }\n    }\n\n    await traverse(dirPath)\n    return totalSize\n  }\n\n  /**\n   * 检查路径是否为文件\n   */\n  static async isFile(filePath: string): Promise<boolean> {\n    try {\n      const stats = await fs.stat(filePath)\n      return stats.isFile()\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 检查路径是否为目录\n   */\n  static async isDirectory(dirPath: string): Promise<boolean> {\n    try {\n      const stats = await fs.stat(dirPath)\n      return stats.isDirectory()\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 获取文件的修改时间\n   */\n  static async getModifiedTime(filePath: string): Promise<Date> {\n    const stats = await fs.stat(filePath)\n    return stats.mtime\n  }\n\n  /**\n   * 比较文件修改时间\n   */\n  static async isNewer(file1: string, file2: string): Promise<boolean> {\n    if (!(await this.exists(file1))) return false\n    if (!(await this.exists(file2))) return true\n\n    const time1 = await this.getModifiedTime(file1)\n    const time2 = await this.getModifiedTime(file2)\n\n    return time1 > time2\n  }\n\n  /**\n   * 创建临时文件\n   */\n  static async createTempFile(prefix: string = 'temp', suffix: string = '.tmp'): Promise<string> {\n    const tempDir = require('os').tmpdir()\n    const fileName = `${prefix}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}${suffix}`\n    return path.join(tempDir, fileName)\n  }\n\n  /**\n   * 创建临时目录\n   */\n  static async createTempDir(prefix: string = 'temp'): Promise<string> {\n    const tempDir = require('os').tmpdir()\n    const dirName = `${prefix}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    const tempDirPath = path.join(tempDir, dirName)\n    await this.ensureDir(tempDirPath)\n    return tempDirPath\n  }\n\n  /**\n   * 获取文件类型\n   */\n  private static getFileType(extension: string): string {\n    const typeMap: Record<string, string> = {\n      '.js': 'javascript',\n      '.ts': 'typescript',\n      '.jsx': 'jsx',\n      '.tsx': 'tsx',\n      '.vue': 'vue',\n      '.css': 'css',\n      '.less': 'less',\n      '.scss': 'scss',\n      '.sass': 'sass',\n      '.json': 'json',\n      '.md': 'markdown',\n      '.html': 'html',\n      '.xml': 'xml',\n      '.svg': 'svg',\n      '.png': 'image',\n      '.jpg': 'image',\n      '.jpeg': 'image',\n      '.gif': 'image',\n      '.webp': 'image'\n    }\n\n    return typeMap[extension.toLowerCase()] || 'unknown'\n  }\n}\n\n// 导出便捷函数\nexport const {\n  exists,\n  existsSync,\n  readFile,\n  writeFile,\n  copyFile,\n  removeFile,\n  ensureDir,\n  removeDir,\n  emptyDir,\n  stat,\n  readDir,\n  readDirRecursive,\n  findDirs,\n  getFileSize,\n  getDirSize,\n  isFile,\n  isDirectory,\n  getModifiedTime,\n  isNewer,\n  createTempFile,\n  createTempDir\n} = FileSystem\n\n// 单独导出 findFiles 以保持正确的 this 上下文\nexport const findFiles = FileSystem.findFiles.bind(FileSystem)\n","/**\n * 错误码和错误信息常量\n */\n\n/**\n * 错误码枚举\n */\nexport enum ErrorCode {\n  // 配置相关错误 (1000-1999)\n  CONFIG_NOT_FOUND = 'E1001',\n  CONFIG_PARSE_ERROR = 'E1002',\n  CONFIG_VALIDATION_ERROR = 'E1003',\n  CONFIG_MERGE_ERROR = 'E1004',\n  CONFIG_TRANSFORM_ERROR = 'E1005',\n  \n  // 构建相关错误 (2000-2999)\n  BUILD_FAILED = 'E2001',\n  BUILD_TIMEOUT = 'E2002',\n  BUILD_CANCELLED = 'E2003',\n  BUILD_OUT_OF_MEMORY = 'E2004',\n  BUILD_DEPENDENCY_ERROR = 'E2005',\n  \n  // 适配器相关错误 (3000-3999)\n  ADAPTER_NOT_FOUND = 'E3001',\n  ADAPTER_INIT_ERROR = 'E3002',\n  ADAPTER_NOT_AVAILABLE = 'E3003',\n  ADAPTER_VERSION_MISMATCH = 'E3004',\n  ADAPTER_CONFIG_ERROR = 'E3005',\n  \n  // 插件相关错误 (4000-4999)\n  PLUGIN_NOT_FOUND = 'E4001',\n  PLUGIN_LOAD_ERROR = 'E4002',\n  PLUGIN_INIT_ERROR = 'E4003',\n  PLUGIN_EXECUTION_ERROR = 'E4004',\n  PLUGIN_DEPENDENCY_ERROR = 'E4005',\n  \n  // 文件系统相关错误 (5000-5999)\n  FILE_NOT_FOUND = 'E5001',\n  FILE_READ_ERROR = 'E5002',\n  FILE_WRITE_ERROR = 'E5003',\n  DIRECTORY_NOT_FOUND = 'E5004',\n  PERMISSION_DENIED = 'E5005',\n  \n  // 依赖相关错误 (6000-6999)\n  DEPENDENCY_NOT_FOUND = 'E6001',\n  DEPENDENCY_VERSION_CONFLICT = 'E6002',\n  DEPENDENCY_INSTALL_ERROR = 'E6003',\n  DEPENDENCY_RESOLUTION_ERROR = 'E6004',\n  \n  // 网络相关错误 (7000-7999)\n  NETWORK_ERROR = 'E7001',\n  DOWNLOAD_ERROR = 'E7002',\n  UPLOAD_ERROR = 'E7003',\n  TIMEOUT_ERROR = 'E7004',\n  \n  // 系统相关错误 (8000-8999)\n  SYSTEM_ERROR = 'E8001',\n  PLATFORM_NOT_SUPPORTED = 'E8002',\n  NODE_VERSION_MISMATCH = 'E8003',\n  INSUFFICIENT_RESOURCES = 'E8004',\n  \n  // 用户输入错误 (9000-9999)\n  INVALID_INPUT = 'E9001',\n  INVALID_OPTION = 'E9002',\n  INVALID_PATH = 'E9003',\n  INVALID_FORMAT = 'E9004',\n  MISSING_REQUIRED_OPTION = 'E9005'\n}\n\n/**\n * 错误信息映射\n */\nexport const ERROR_MESSAGES: Record<ErrorCode, string> = {\n  // 配置相关错误\n  [ErrorCode.CONFIG_NOT_FOUND]: '配置文件未找到',\n  [ErrorCode.CONFIG_PARSE_ERROR]: '配置文件解析失败',\n  [ErrorCode.CONFIG_VALIDATION_ERROR]: '配置验证失败',\n  [ErrorCode.CONFIG_MERGE_ERROR]: '配置合并失败',\n  [ErrorCode.CONFIG_TRANSFORM_ERROR]: '配置转换失败',\n  \n  // 构建相关错误\n  [ErrorCode.BUILD_FAILED]: '构建失败',\n  [ErrorCode.BUILD_TIMEOUT]: '构建超时',\n  [ErrorCode.BUILD_CANCELLED]: '构建被取消',\n  [ErrorCode.BUILD_OUT_OF_MEMORY]: '构建内存不足',\n  [ErrorCode.BUILD_DEPENDENCY_ERROR]: '构建依赖错误',\n  \n  // 适配器相关错误\n  [ErrorCode.ADAPTER_NOT_FOUND]: '适配器未找到',\n  [ErrorCode.ADAPTER_INIT_ERROR]: '适配器初始化失败',\n  [ErrorCode.ADAPTER_NOT_AVAILABLE]: '适配器不可用',\n  [ErrorCode.ADAPTER_VERSION_MISMATCH]: '适配器版本不匹配',\n  [ErrorCode.ADAPTER_CONFIG_ERROR]: '适配器配置错误',\n  \n  // 插件相关错误\n  [ErrorCode.PLUGIN_NOT_FOUND]: '插件未找到',\n  [ErrorCode.PLUGIN_LOAD_ERROR]: '插件加载失败',\n  [ErrorCode.PLUGIN_INIT_ERROR]: '插件初始化失败',\n  [ErrorCode.PLUGIN_EXECUTION_ERROR]: '插件执行失败',\n  [ErrorCode.PLUGIN_DEPENDENCY_ERROR]: '插件依赖错误',\n  \n  // 文件系统相关错误\n  [ErrorCode.FILE_NOT_FOUND]: '文件未找到',\n  [ErrorCode.FILE_READ_ERROR]: '文件读取失败',\n  [ErrorCode.FILE_WRITE_ERROR]: '文件写入失败',\n  [ErrorCode.DIRECTORY_NOT_FOUND]: '目录未找到',\n  [ErrorCode.PERMISSION_DENIED]: '权限不足',\n  \n  // 依赖相关错误\n  [ErrorCode.DEPENDENCY_NOT_FOUND]: '依赖未找到',\n  [ErrorCode.DEPENDENCY_VERSION_CONFLICT]: '依赖版本冲突',\n  [ErrorCode.DEPENDENCY_INSTALL_ERROR]: '依赖安装失败',\n  [ErrorCode.DEPENDENCY_RESOLUTION_ERROR]: '依赖解析失败',\n  \n  // 网络相关错误\n  [ErrorCode.NETWORK_ERROR]: '网络错误',\n  [ErrorCode.DOWNLOAD_ERROR]: '下载失败',\n  [ErrorCode.UPLOAD_ERROR]: '上传失败',\n  [ErrorCode.TIMEOUT_ERROR]: '网络超时',\n  \n  // 系统相关错误\n  [ErrorCode.SYSTEM_ERROR]: '系统错误',\n  [ErrorCode.PLATFORM_NOT_SUPPORTED]: '平台不支持',\n  [ErrorCode.NODE_VERSION_MISMATCH]: 'Node.js 版本不匹配',\n  [ErrorCode.INSUFFICIENT_RESOURCES]: '系统资源不足',\n  \n  // 用户输入错误\n  [ErrorCode.INVALID_INPUT]: '无效输入',\n  [ErrorCode.INVALID_OPTION]: '无效选项',\n  [ErrorCode.INVALID_PATH]: '无效路径',\n  [ErrorCode.INVALID_FORMAT]: '无效格式',\n  [ErrorCode.MISSING_REQUIRED_OPTION]: '缺少必需选项'\n}\n\n/**\n * 错误建议映射\n */\nexport const ERROR_SUGGESTIONS: Record<ErrorCode, string> = {\n  // 配置相关错误\n  [ErrorCode.CONFIG_NOT_FOUND]: '请在项目根目录创建 builder.config.ts 配置文件',\n  [ErrorCode.CONFIG_PARSE_ERROR]: '请检查配置文件语法是否正确',\n  [ErrorCode.CONFIG_VALIDATION_ERROR]: '请检查配置项是否符合要求',\n  [ErrorCode.CONFIG_MERGE_ERROR]: '请检查配置合并逻辑',\n  [ErrorCode.CONFIG_TRANSFORM_ERROR]: '请检查配置转换规则',\n  \n  // 构建相关错误\n  [ErrorCode.BUILD_FAILED]: '请检查构建日志获取详细错误信息',\n  [ErrorCode.BUILD_TIMEOUT]: '请增加构建超时时间或优化构建配置',\n  [ErrorCode.BUILD_CANCELLED]: '构建被用户或系统取消',\n  [ErrorCode.BUILD_OUT_OF_MEMORY]: '请增加系统内存或优化构建配置',\n  [ErrorCode.BUILD_DEPENDENCY_ERROR]: '请检查项目依赖是否正确安装',\n  \n  // 适配器相关错误\n  [ErrorCode.ADAPTER_NOT_FOUND]: '请安装对应的打包器依赖',\n  [ErrorCode.ADAPTER_INIT_ERROR]: '请检查打包器是否正确安装',\n  [ErrorCode.ADAPTER_NOT_AVAILABLE]: '请确保打包器依赖已正确安装',\n  [ErrorCode.ADAPTER_VERSION_MISMATCH]: '请升级或降级打包器版本',\n  [ErrorCode.ADAPTER_CONFIG_ERROR]: '请检查适配器配置是否正确',\n  \n  // 插件相关错误\n  [ErrorCode.PLUGIN_NOT_FOUND]: '请安装对应的插件依赖',\n  [ErrorCode.PLUGIN_LOAD_ERROR]: '请检查插件是否正确安装',\n  [ErrorCode.PLUGIN_INIT_ERROR]: '请检查插件配置是否正确',\n  [ErrorCode.PLUGIN_EXECUTION_ERROR]: '请检查插件执行环境',\n  [ErrorCode.PLUGIN_DEPENDENCY_ERROR]: '请检查插件依赖是否满足',\n  \n  // 文件系统相关错误\n  [ErrorCode.FILE_NOT_FOUND]: '请检查文件路径是否正确',\n  [ErrorCode.FILE_READ_ERROR]: '请检查文件权限和文件完整性',\n  [ErrorCode.FILE_WRITE_ERROR]: '请检查目录权限和磁盘空间',\n  [ErrorCode.DIRECTORY_NOT_FOUND]: '请检查目录路径是否正确',\n  [ErrorCode.PERMISSION_DENIED]: '请检查文件或目录权限',\n  \n  // 依赖相关错误\n  [ErrorCode.DEPENDENCY_NOT_FOUND]: '请运行 npm install 安装依赖',\n  [ErrorCode.DEPENDENCY_VERSION_CONFLICT]: '请解决依赖版本冲突',\n  [ErrorCode.DEPENDENCY_INSTALL_ERROR]: '请检查网络连接和包管理器配置',\n  [ErrorCode.DEPENDENCY_RESOLUTION_ERROR]: '请检查依赖解析配置',\n  \n  // 网络相关错误\n  [ErrorCode.NETWORK_ERROR]: '请检查网络连接',\n  [ErrorCode.DOWNLOAD_ERROR]: '请检查网络连接和下载地址',\n  [ErrorCode.UPLOAD_ERROR]: '请检查网络连接和上传权限',\n  [ErrorCode.TIMEOUT_ERROR]: '请检查网络连接或增加超时时间',\n  \n  // 系统相关错误\n  [ErrorCode.SYSTEM_ERROR]: '请检查系统环境和权限',\n  [ErrorCode.PLATFORM_NOT_SUPPORTED]: '请使用支持的操作系统',\n  [ErrorCode.NODE_VERSION_MISMATCH]: '请升级 Node.js 到支持的版本',\n  [ErrorCode.INSUFFICIENT_RESOURCES]: '请释放系统资源或增加硬件配置',\n  \n  // 用户输入错误\n  [ErrorCode.INVALID_INPUT]: '请检查输入参数格式',\n  [ErrorCode.INVALID_OPTION]: '请使用有效的选项参数',\n  [ErrorCode.INVALID_PATH]: '请使用有效的文件或目录路径',\n  [ErrorCode.INVALID_FORMAT]: '请使用正确的格式',\n  [ErrorCode.MISSING_REQUIRED_OPTION]: '请提供必需的选项参数'\n}\n\n/**\n * 错误分类\n */\nexport const ERROR_CATEGORIES = {\n  CONFIGURATION: [\n    ErrorCode.CONFIG_NOT_FOUND,\n    ErrorCode.CONFIG_PARSE_ERROR,\n    ErrorCode.CONFIG_VALIDATION_ERROR,\n    ErrorCode.CONFIG_MERGE_ERROR,\n    ErrorCode.CONFIG_TRANSFORM_ERROR\n  ],\n  BUILD: [\n    ErrorCode.BUILD_FAILED,\n    ErrorCode.BUILD_TIMEOUT,\n    ErrorCode.BUILD_CANCELLED,\n    ErrorCode.BUILD_OUT_OF_MEMORY,\n    ErrorCode.BUILD_DEPENDENCY_ERROR\n  ],\n  ADAPTER: [\n    ErrorCode.ADAPTER_NOT_FOUND,\n    ErrorCode.ADAPTER_INIT_ERROR,\n    ErrorCode.ADAPTER_NOT_AVAILABLE,\n    ErrorCode.ADAPTER_VERSION_MISMATCH,\n    ErrorCode.ADAPTER_CONFIG_ERROR\n  ],\n  PLUGIN: [\n    ErrorCode.PLUGIN_NOT_FOUND,\n    ErrorCode.PLUGIN_LOAD_ERROR,\n    ErrorCode.PLUGIN_INIT_ERROR,\n    ErrorCode.PLUGIN_EXECUTION_ERROR,\n    ErrorCode.PLUGIN_DEPENDENCY_ERROR\n  ],\n  FILESYSTEM: [\n    ErrorCode.FILE_NOT_FOUND,\n    ErrorCode.FILE_READ_ERROR,\n    ErrorCode.FILE_WRITE_ERROR,\n    ErrorCode.DIRECTORY_NOT_FOUND,\n    ErrorCode.PERMISSION_DENIED\n  ],\n  DEPENDENCY: [\n    ErrorCode.DEPENDENCY_NOT_FOUND,\n    ErrorCode.DEPENDENCY_VERSION_CONFLICT,\n    ErrorCode.DEPENDENCY_INSTALL_ERROR,\n    ErrorCode.DEPENDENCY_RESOLUTION_ERROR\n  ],\n  NETWORK: [\n    ErrorCode.NETWORK_ERROR,\n    ErrorCode.DOWNLOAD_ERROR,\n    ErrorCode.UPLOAD_ERROR,\n    ErrorCode.TIMEOUT_ERROR\n  ],\n  SYSTEM: [\n    ErrorCode.SYSTEM_ERROR,\n    ErrorCode.PLATFORM_NOT_SUPPORTED,\n    ErrorCode.NODE_VERSION_MISMATCH,\n    ErrorCode.INSUFFICIENT_RESOURCES\n  ],\n  USER_INPUT: [\n    ErrorCode.INVALID_INPUT,\n    ErrorCode.INVALID_OPTION,\n    ErrorCode.INVALID_PATH,\n    ErrorCode.INVALID_FORMAT,\n    ErrorCode.MISSING_REQUIRED_OPTION\n  ]\n} as const\n\n/**\n * 错误严重程度\n */\nexport const ERROR_SEVERITY = {\n  [ErrorCode.CONFIG_NOT_FOUND]: 'high',\n  [ErrorCode.CONFIG_PARSE_ERROR]: 'high',\n  [ErrorCode.CONFIG_VALIDATION_ERROR]: 'medium',\n  [ErrorCode.BUILD_FAILED]: 'high',\n  [ErrorCode.BUILD_TIMEOUT]: 'medium',\n  [ErrorCode.ADAPTER_NOT_FOUND]: 'high',\n  [ErrorCode.PLUGIN_NOT_FOUND]: 'medium',\n  [ErrorCode.FILE_NOT_FOUND]: 'medium',\n  [ErrorCode.DEPENDENCY_NOT_FOUND]: 'high',\n  [ErrorCode.NETWORK_ERROR]: 'low',\n  [ErrorCode.SYSTEM_ERROR]: 'high',\n  [ErrorCode.INVALID_INPUT]: 'low'\n} as const\n","/**\n * 错误处理工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport { ErrorCode, ERROR_MESSAGES, ERROR_SUGGESTIONS } from '../constants/errors'\nimport type { Logger } from './logger'\n\n/**\n * 构建器错误类\n */\nexport class BuilderError extends Error {\n  public readonly code: ErrorCode\n  public readonly suggestion?: string\n  public readonly details?: any\n  public readonly phase?: string\n  public readonly file?: string\n  public readonly cause?: Error\n\n  constructor(\n    code: ErrorCode,\n    message?: string,\n    options: {\n      suggestion?: string\n      details?: any\n      phase?: string\n      file?: string\n      cause?: Error\n    } = {}\n  ) {\n    const errorMessage = message || ERROR_MESSAGES[code] || '未知错误'\n    super(errorMessage)\n\n    this.name = 'BuilderError'\n    this.code = code\n    this.suggestion = options.suggestion || ERROR_SUGGESTIONS[code]\n    this.details = options.details\n    this.phase = options.phase\n    this.file = options.file\n\n    if (options.cause) {\n      this.cause = options.cause\n    }\n\n    // 保持堆栈跟踪\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BuilderError)\n    }\n  }\n\n  /**\n   * 获取完整的错误信息\n   */\n  getFullMessage(): string {\n    let message = `[${this.code}] ${this.message}`\n\n    if (this.phase) {\n      message += ` (阶段: ${this.phase})`\n    }\n\n    if (this.file) {\n      message += ` (文件: ${this.file})`\n    }\n\n    if (this.suggestion) {\n      message += `\\n建议: ${this.suggestion}`\n    }\n\n    return message\n  }\n\n  /**\n   * 转换为 JSON 格式\n   */\n  toJSON(): Record<string, any> {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      suggestion: this.suggestion,\n      details: this.details,\n      phase: this.phase,\n      file: this.file,\n      stack: this.stack\n    }\n  }\n}\n\n/**\n * 错误处理器选项\n */\nexport interface ErrorHandlerOptions {\n  /** 日志记录器 */\n  logger?: Logger\n\n  /** 是否显示堆栈跟踪 */\n  showStack?: boolean\n\n  /** 是否显示建议 */\n  showSuggestions?: boolean\n\n  /** 错误回调 */\n  onError?: (error: Error) => void\n\n  /** 是否退出进程 */\n  exitOnError?: boolean\n\n  /** 退出码 */\n  exitCode?: number\n}\n\n/**\n * 错误处理器类\n */\nexport class ErrorHandler {\n  private logger?: Logger\n  private showStack: boolean\n  private showSuggestions: boolean\n  private onError?: (error: Error) => void\n  private exitOnError: boolean\n  private exitCode: number\n\n  constructor(options: ErrorHandlerOptions = {}) {\n    this.logger = options.logger\n    this.showStack = options.showStack ?? false\n    this.showSuggestions = options.showSuggestions ?? true\n    this.onError = options.onError\n    this.exitOnError = options.exitOnError ?? false\n    this.exitCode = options.exitCode ?? 1\n  }\n\n  /**\n   * 处理错误\n   */\n  handle(error: Error, context?: string): void {\n    // 调用错误回调\n    if (this.onError) {\n      try {\n        this.onError(error)\n      } catch (callbackError) {\n        this.logger?.error('错误回调执行失败:', callbackError)\n      }\n    }\n\n    // 记录错误日志\n    this.logError(error, context)\n\n    // 是否退出进程\n    if (this.exitOnError) {\n      process.exit(this.exitCode)\n    }\n  }\n\n  /**\n   * 处理异步错误\n   */\n  async handleAsync(error: Error, context?: string): Promise<void> {\n    return new Promise((resolve) => {\n      this.handle(error, context)\n      resolve()\n    })\n  }\n\n  /**\n   * 包装函数以处理错误\n   */\n  wrap<T extends (...args: any[]) => any>(fn: T, context?: string): T {\n    return ((...args: any[]) => {\n      try {\n        const result = fn(...args)\n\n        // 处理 Promise\n        if (result && typeof result.catch === 'function') {\n          return result.catch((error: Error) => {\n            this.handle(error, context)\n            throw error\n          })\n        }\n\n        return result\n      } catch (error) {\n        this.handle(error as Error, context)\n        throw error\n      }\n    }) as T\n  }\n\n  /**\n   * 包装异步函数以处理错误\n   */\n  wrapAsync<T extends (...args: any[]) => Promise<any>>(fn: T, context?: string): T {\n    return (async (...args: any[]) => {\n      try {\n        return await fn(...args)\n      } catch (error) {\n        await this.handleAsync(error as Error, context)\n        throw error\n      }\n    }) as T\n  }\n\n  /**\n   * 创建构建器错误\n   */\n  createError(\n    code: ErrorCode,\n    message?: string,\n    options?: {\n      suggestion?: string\n      details?: any\n      phase?: string\n      file?: string\n      cause?: Error\n    }\n  ): BuilderError {\n    return new BuilderError(code, message, options)\n  }\n\n  /**\n   * 抛出构建器错误\n   */\n  throwError(\n    code: ErrorCode,\n    message?: string,\n    options?: {\n      suggestion?: string\n      details?: any\n      phase?: string\n      file?: string\n      cause?: Error\n    }\n  ): never {\n    throw this.createError(code, message, options)\n  }\n\n  /**\n   * 记录错误日志\n   */\n  private logError(error: Error, context?: string): void {\n    if (!this.logger) {\n      console.error(error)\n      return\n    }\n\n    // 构建错误消息\n    let message = error.message\n    if (context) {\n      message = `${context}: ${message}`\n    }\n\n    // 记录基本错误信息\n    this.logger.error(message)\n\n    // 如果是构建器错误，显示额外信息\n    if (error instanceof BuilderError) {\n      if (error.phase) {\n        this.logger.error(`阶段: ${error.phase}`)\n      }\n\n      if (error.file) {\n        this.logger.error(`文件: ${error.file}`)\n      }\n\n      if (error.details) {\n        this.logger.debug('错误详情:', error.details)\n      }\n\n      if (this.showSuggestions && error.suggestion) {\n        this.logger.info(`建议: ${error.suggestion}`)\n      }\n    }\n\n    // 显示堆栈跟踪\n    if (this.showStack && error.stack) {\n      this.logger.debug('堆栈跟踪:')\n      this.logger.debug(error.stack)\n    }\n\n    // 显示原因链\n    if ((error as any).cause) {\n      this.logger.debug('原因:')\n      this.logError((error as any).cause as Error)\n    }\n  }\n}\n\n/**\n * 默认错误处理器实例\n */\nexport const errorHandler = new ErrorHandler()\n\n/**\n * 创建错误处理器\n */\nexport function createErrorHandler(options: ErrorHandlerOptions = {}): ErrorHandler {\n  return new ErrorHandler(options)\n}\n\n/**\n * 处理未捕获的异常\n */\nexport function setupGlobalErrorHandling(handler: ErrorHandler = errorHandler): void {\n  // 处理未捕获的异常\n  process.on('uncaughtException', (error) => {\n    handler.handle(error, '未捕获的异常')\n    process.exit(1)\n  })\n\n  // 处理未处理的 Promise 拒绝\n  process.on('unhandledRejection', (reason, _promise) => {\n    const error = reason instanceof Error ? reason : new Error(String(reason))\n    handler.handle(error, '未处理的 Promise 拒绝')\n  })\n\n  // 处理警告\n  process.on('warning', (warning) => {\n    if (handler['logger']) {\n      handler['logger'].warn(`Node.js 警告: ${warning.message}`)\n    }\n  })\n}\n\n/**\n * 判断是否为构建器错误\n */\nexport function isBuilderError(error: any): error is BuilderError {\n  return error instanceof BuilderError\n}\n\n/**\n * 从错误中提取错误码\n */\nexport function getErrorCode(error: Error): ErrorCode | undefined {\n  if (isBuilderError(error)) {\n    return error.code\n  }\n  return undefined\n}\n\n/**\n * 格式化错误信息\n */\nexport function formatError(error: Error, includeStack: boolean = false): string {\n  if (isBuilderError(error)) {\n    return error.getFullMessage()\n  }\n\n  let message = error.message\n  if (includeStack && error.stack) {\n    message += `\\n${error.stack}`\n  }\n\n  return message\n}\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst fs = require('fs');\nconst { Readable } = require('stream');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst picomatch = require('picomatch');\n\nconst readdir = promisify(fs.readdir);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\n/**\n * @typedef {Object} EntryInfo\n * @property {String} path\n * @property {String} fullPath\n * @property {fs.Stats=} stats\n * @property {fs.Dirent=} dirent\n * @property {String} basename\n */\n\nconst BANG = '!';\nconst RECURSIVE_ERROR_CODE = 'READDIRP_RECURSIVE_ERROR';\nconst NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP', RECURSIVE_ERROR_CODE]);\nconst FILE_TYPE = 'files';\nconst DIR_TYPE = 'directories';\nconst FILE_DIR_TYPE = 'files_directories';\nconst EVERYTHING_TYPE = 'all';\nconst ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];\n\nconst isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);\nconst [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));\nconst wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));\n\nconst normalizeFilter = filter => {\n  if (filter === undefined) return;\n  if (typeof filter === 'function') return filter;\n\n  if (typeof filter === 'string') {\n    const glob = picomatch(filter.trim());\n    return entry => glob(entry.basename);\n  }\n\n  if (Array.isArray(filter)) {\n    const positive = [];\n    const negative = [];\n    for (const item of filter) {\n      const trimmed = item.trim();\n      if (trimmed.charAt(0) === BANG) {\n        negative.push(picomatch(trimmed.slice(1)));\n      } else {\n        positive.push(picomatch(trimmed));\n      }\n    }\n\n    if (negative.length > 0) {\n      if (positive.length > 0) {\n        return entry =>\n          positive.some(f => f(entry.basename)) && !negative.some(f => f(entry.basename));\n      }\n      return entry => !negative.some(f => f(entry.basename));\n    }\n    return entry => positive.some(f => f(entry.basename));\n  }\n};\n\nclass ReaddirpStream extends Readable {\n  static get defaultOptions() {\n    return {\n      root: '.',\n      /* eslint-disable no-unused-vars */\n      fileFilter: (path) => true,\n      directoryFilter: (path) => true,\n      /* eslint-enable no-unused-vars */\n      type: FILE_TYPE,\n      lstat: false,\n      depth: 2147483648,\n      alwaysStat: false\n    };\n  }\n\n  constructor(options = {}) {\n    super({\n      objectMode: true,\n      autoDestroy: true,\n      highWaterMark: options.highWaterMark || 4096\n    });\n    const opts = { ...ReaddirpStream.defaultOptions, ...options };\n    const { root, type } = opts;\n\n    this._fileFilter = normalizeFilter(opts.fileFilter);\n    this._directoryFilter = normalizeFilter(opts.directoryFilter);\n\n    const statMethod = opts.lstat ? lstat : stat;\n    // Use bigint stats if it's windows and stat() supports options (node 10+).\n    if (wantBigintFsStats) {\n      this._stat = path => statMethod(path, { bigint: true });\n    } else {\n      this._stat = statMethod;\n    }\n\n    this._maxDepth = opts.depth;\n    this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsEverything = type === EVERYTHING_TYPE;\n    this._root = sysPath.resolve(root);\n    this._isDirent = ('Dirent' in fs) && !opts.alwaysStat;\n    this._statsProp = this._isDirent ? 'dirent' : 'stats';\n    this._rdOptions = { encoding: 'utf8', withFileTypes: this._isDirent };\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  }\n\n  async _read(batch) {\n    if (this.reading) return;\n    this.reading = true;\n\n    try {\n      while (!this.destroyed && batch > 0) {\n        const { path, depth, files = [] } = this.parent || {};\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) {\n                this.push(entry);\n                batch--;\n              }\n            } else if ((entryType === 'file' || this._includeAsFile(entry)) && this._fileFilter(entry)) {\n              if (this._wantsFile) {\n                this.push(entry);\n                batch--;\n              }\n            }\n          }\n        } else {\n          const parent = this.parents.pop();\n          if (!parent) {\n            this.push(null);\n            break;\n          }\n          this.parent = await parent;\n          if (this.destroyed) return;\n        }\n      }\n    } catch (error) {\n      this.destroy(error);\n    } finally {\n      this.reading = false;\n    }\n  }\n\n  async _exploreDir(path, depth) {\n    let files;\n    try {\n      files = await readdir(path, this._rdOptions);\n    } catch (error) {\n      this._onError(error);\n    }\n    return { files, depth, path };\n  }\n\n  async _formatEntry(dirent, path) {\n    let entry;\n    try {\n      const basename = this._isDirent ? dirent.name : dirent;\n      const fullPath = sysPath.resolve(sysPath.join(path, basename));\n      entry = { path: sysPath.relative(this._root, fullPath), fullPath, basename };\n      entry[this._statsProp] = this._isDirent ? dirent : await this._stat(fullPath);\n    } catch (err) {\n      this._onError(err);\n    }\n    return entry;\n  }\n\n  _onError(err) {\n    if (isNormalFlowError(err) && !this.destroyed) {\n      this.emit('warn', err);\n    } else {\n      this.destroy(err);\n    }\n  }\n\n  async _getEntryType(entry) {\n    // entry may be undefined, because a warning or an error were emitted\n    // and the statsProp is undefined\n    const stats = entry && entry[this._statsProp];\n    if (!stats) {\n      return;\n    }\n    if (stats.isFile()) {\n      return 'file';\n    }\n    if (stats.isDirectory()) {\n      return 'directory';\n    }\n    if (stats && stats.isSymbolicLink()) {\n      const full = entry.fullPath;\n      try {\n        const entryRealPath = await realpath(full);\n        const entryRealPathStats = await lstat(entryRealPath);\n        if (entryRealPathStats.isFile()) {\n          return 'file';\n        }\n        if (entryRealPathStats.isDirectory()) {\n          const len = entryRealPath.length;\n          if (full.startsWith(entryRealPath) && full.substr(len, 1) === sysPath.sep) {\n            const recursiveError = new Error(\n              `Circular symlink detected: \"${full}\" points to \"${entryRealPath}\"`\n            );\n            recursiveError.code = RECURSIVE_ERROR_CODE;\n            return this._onError(recursiveError);\n          }\n          return 'directory';\n        }\n      } catch (error) {\n        this._onError(error);\n      }\n    }\n  }\n\n  _includeAsFile(entry) {\n    const stats = entry && entry[this._statsProp];\n\n    return stats && this._wantsEverything && !stats.isDirectory();\n  }\n}\n\n/**\n * @typedef {Object} ReaddirpArguments\n * @property {Function=} fileFilter\n * @property {Function=} directoryFilter\n * @property {String=} type\n * @property {Number=} depth\n * @property {String=} root\n * @property {Boolean=} lstat\n * @property {Boolean=} bigint\n */\n\n/**\n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param {String} root Root directory\n * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth\n */\nconst readdirp = (root, options = {}) => {\n  let type = options.entryType || options.type;\n  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility\n  if (type) options.type = type;\n  if (!root) {\n    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');\n  } else if (typeof root !== 'string') {\n    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');\n  } else if (type && !ALL_TYPES.includes(type)) {\n    throw new Error(`readdirp: Invalid type passed. Use one of ${ALL_TYPES.join(', ')}`);\n  }\n\n  options.root = root;\n  return new ReaddirpStream(options);\n};\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry))\n      .on('end', () => resolve(files))\n      .on('error', error => reject(error));\n  });\n};\n\nreaddirp.promise = readdirpPromise;\nreaddirp.ReaddirpStream = ReaddirpStream;\nreaddirp.default = readdirp;\n\nmodule.exports = readdirp;\n","/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst picomatch = require('picomatch');\nconst normalizePath = require('normalize-path');\n\n/**\n * @typedef {(testString: string) => boolean} AnymatchFn\n * @typedef {string|RegExp|AnymatchFn} AnymatchPattern\n * @typedef {AnymatchPattern|AnymatchPattern[]} AnymatchMatcher\n */\nconst BANG = '!';\nconst DEFAULT_OPTIONS = {returnIndex: false};\nconst arrify = (item) => Array.isArray(item) ? item : [item];\n\n/**\n * @param {AnymatchPattern} matcher\n * @param {object} options\n * @returns {AnymatchFn}\n */\nconst createPattern = (matcher, options) => {\n  if (typeof matcher === 'function') {\n    return matcher;\n  }\n  if (typeof matcher === 'string') {\n    const glob = picomatch(matcher, options);\n    return (string) => matcher === string || glob(string);\n  }\n  if (matcher instanceof RegExp) {\n    return (string) => matcher.test(string);\n  }\n  return (string) => false;\n};\n\n/**\n * @param {Array<Function>} patterns\n * @param {Array<Function>} negPatterns\n * @param {String|Array} args\n * @param {Boolean} returnIndex\n * @returns {boolean|number}\n */\nconst matchPatterns = (patterns, negPatterns, args, returnIndex) => {\n  const isList = Array.isArray(args);\n  const _path = isList ? args[0] : args;\n  if (!isList && typeof _path !== 'string') {\n    throw new TypeError('anymatch: second argument must be a string: got ' +\n      Object.prototype.toString.call(_path))\n  }\n  const path = normalizePath(_path, false);\n\n  for (let index = 0; index < negPatterns.length; index++) {\n    const nglob = negPatterns[index];\n    if (nglob(path)) {\n      return returnIndex ? -1 : false;\n    }\n  }\n\n  const applied = isList && [path].concat(args.slice(1));\n  for (let index = 0; index < patterns.length; index++) {\n    const pattern = patterns[index];\n    if (isList ? pattern(...applied) : pattern(path)) {\n      return returnIndex ? index : true;\n    }\n  }\n\n  return returnIndex ? -1 : false;\n};\n\n/**\n * @param {AnymatchMatcher} matchers\n * @param {Array|string} testString\n * @param {object} options\n * @returns {boolean|number|Function}\n */\nconst anymatch = (matchers, testString, options = DEFAULT_OPTIONS) => {\n  if (matchers == null) {\n    throw new TypeError('anymatch: specify first argument');\n  }\n  const opts = typeof options === 'boolean' ? {returnIndex: options} : options;\n  const returnIndex = opts.returnIndex || false;\n\n  // Early cache for matchers.\n  const mtchers = arrify(matchers);\n  const negatedGlobs = mtchers\n    .filter(item => typeof item === 'string' && item.charAt(0) === BANG)\n    .map(item => item.slice(1))\n    .map(item => picomatch(item, opts));\n  const patterns = mtchers\n    .filter(item => typeof item !== 'string' || (typeof item === 'string' && item.charAt(0) !== BANG))\n    .map(matcher => createPattern(matcher, opts));\n\n  if (testString == null) {\n    return (testString, ri = false) => {\n      const returnIndex = typeof ri === 'boolean' ? ri : false;\n      return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n    }\n  }\n\n  return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n};\n\nanymatch.default = anymatch;\nmodule.exports = anymatch;\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n","'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  const node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      const ele = arr[i];\n\n      if (Array.isArray(ele)) {\n        flat(ele);\n        continue;\n      }\n\n      if (ele !== undefined) {\n        result.push(ele);\n      }\n    }\n    return result;\n  };\n\n  flat(args);\n  return result;\n};\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  const stringify = (node, parent = {}) => {\n    const invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options, maxLen) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.map(v => toMaxLen(String(v), maxLen)).join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.map(v => toMaxLen(String(v), maxLen)).join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options, maxLen)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  const walk = (node, parent = {}) => {\n    const invalidBlock = utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    const invalid = invalidBlock === true || invalidNode === true;\n    const prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n\n    if (node.isClose === true) {\n      console.log('node.isClose', prefix, node.value);\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? prefix + node.value : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? prefix + node.value : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n      const range = fill(...args, { ...options, wrap: false, toRegex: true, strictZeros: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  const result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (const item of queue) {\n    if (Array.isArray(item)) {\n      for (const value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  const rangeLimit = options.rangeLimit === undefined ? 1000 : options.rangeLimit;\n\n  const walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    const enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      const child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 10000,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  const opts = options || {};\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  const ast = { type: 'root', input, nodes: [] };\n  const stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  const length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      const open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      const dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      const brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      const type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        const open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      const siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        const before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      const parent = stack[stack.length - 1];\n      const index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (const pattern of input) {\n      const result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n  return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","[\n\t\"3dm\",\n\t\"3ds\",\n\t\"3g2\",\n\t\"3gp\",\n\t\"7z\",\n\t\"a\",\n\t\"aac\",\n\t\"adp\",\n\t\"afdesign\",\n\t\"afphoto\",\n\t\"afpub\",\n\t\"ai\",\n\t\"aif\",\n\t\"aiff\",\n\t\"alz\",\n\t\"ape\",\n\t\"apk\",\n\t\"appimage\",\n\t\"ar\",\n\t\"arj\",\n\t\"asf\",\n\t\"au\",\n\t\"avi\",\n\t\"bak\",\n\t\"baml\",\n\t\"bh\",\n\t\"bin\",\n\t\"bk\",\n\t\"bmp\",\n\t\"btif\",\n\t\"bz2\",\n\t\"bzip2\",\n\t\"cab\",\n\t\"caf\",\n\t\"cgm\",\n\t\"class\",\n\t\"cmx\",\n\t\"cpio\",\n\t\"cr2\",\n\t\"cur\",\n\t\"dat\",\n\t\"dcm\",\n\t\"deb\",\n\t\"dex\",\n\t\"djvu\",\n\t\"dll\",\n\t\"dmg\",\n\t\"dng\",\n\t\"doc\",\n\t\"docm\",\n\t\"docx\",\n\t\"dot\",\n\t\"dotm\",\n\t\"dra\",\n\t\"DS_Store\",\n\t\"dsk\",\n\t\"dts\",\n\t\"dtshd\",\n\t\"dvb\",\n\t\"dwg\",\n\t\"dxf\",\n\t\"ecelp4800\",\n\t\"ecelp7470\",\n\t\"ecelp9600\",\n\t\"egg\",\n\t\"eol\",\n\t\"eot\",\n\t\"epub\",\n\t\"exe\",\n\t\"f4v\",\n\t\"fbs\",\n\t\"fh\",\n\t\"fla\",\n\t\"flac\",\n\t\"flatpak\",\n\t\"fli\",\n\t\"flv\",\n\t\"fpx\",\n\t\"fst\",\n\t\"fvt\",\n\t\"g3\",\n\t\"gh\",\n\t\"gif\",\n\t\"graffle\",\n\t\"gz\",\n\t\"gzip\",\n\t\"h261\",\n\t\"h263\",\n\t\"h264\",\n\t\"icns\",\n\t\"ico\",\n\t\"ief\",\n\t\"img\",\n\t\"ipa\",\n\t\"iso\",\n\t\"jar\",\n\t\"jpeg\",\n\t\"jpg\",\n\t\"jpgv\",\n\t\"jpm\",\n\t\"jxr\",\n\t\"key\",\n\t\"ktx\",\n\t\"lha\",\n\t\"lib\",\n\t\"lvp\",\n\t\"lz\",\n\t\"lzh\",\n\t\"lzma\",\n\t\"lzo\",\n\t\"m3u\",\n\t\"m4a\",\n\t\"m4v\",\n\t\"mar\",\n\t\"mdi\",\n\t\"mht\",\n\t\"mid\",\n\t\"midi\",\n\t\"mj2\",\n\t\"mka\",\n\t\"mkv\",\n\t\"mmr\",\n\t\"mng\",\n\t\"mobi\",\n\t\"mov\",\n\t\"movie\",\n\t\"mp3\",\n\t\"mp4\",\n\t\"mp4a\",\n\t\"mpeg\",\n\t\"mpg\",\n\t\"mpga\",\n\t\"mxu\",\n\t\"nef\",\n\t\"npx\",\n\t\"numbers\",\n\t\"nupkg\",\n\t\"o\",\n\t\"odp\",\n\t\"ods\",\n\t\"odt\",\n\t\"oga\",\n\t\"ogg\",\n\t\"ogv\",\n\t\"otf\",\n\t\"ott\",\n\t\"pages\",\n\t\"pbm\",\n\t\"pcx\",\n\t\"pdb\",\n\t\"pdf\",\n\t\"pea\",\n\t\"pgm\",\n\t\"pic\",\n\t\"png\",\n\t\"pnm\",\n\t\"pot\",\n\t\"potm\",\n\t\"potx\",\n\t\"ppa\",\n\t\"ppam\",\n\t\"ppm\",\n\t\"pps\",\n\t\"ppsm\",\n\t\"ppsx\",\n\t\"ppt\",\n\t\"pptm\",\n\t\"pptx\",\n\t\"psd\",\n\t\"pya\",\n\t\"pyc\",\n\t\"pyo\",\n\t\"pyv\",\n\t\"qt\",\n\t\"rar\",\n\t\"ras\",\n\t\"raw\",\n\t\"resources\",\n\t\"rgb\",\n\t\"rip\",\n\t\"rlc\",\n\t\"rmf\",\n\t\"rmvb\",\n\t\"rpm\",\n\t\"rtf\",\n\t\"rz\",\n\t\"s3m\",\n\t\"s7z\",\n\t\"scpt\",\n\t\"sgi\",\n\t\"shar\",\n\t\"snap\",\n\t\"sil\",\n\t\"sketch\",\n\t\"slk\",\n\t\"smv\",\n\t\"snk\",\n\t\"so\",\n\t\"stl\",\n\t\"suo\",\n\t\"sub\",\n\t\"swf\",\n\t\"tar\",\n\t\"tbz\",\n\t\"tbz2\",\n\t\"tga\",\n\t\"tgz\",\n\t\"thmx\",\n\t\"tif\",\n\t\"tiff\",\n\t\"tlz\",\n\t\"ttc\",\n\t\"ttf\",\n\t\"txz\",\n\t\"udf\",\n\t\"uvh\",\n\t\"uvi\",\n\t\"uvm\",\n\t\"uvp\",\n\t\"uvs\",\n\t\"uvu\",\n\t\"viv\",\n\t\"vob\",\n\t\"war\",\n\t\"wav\",\n\t\"wax\",\n\t\"wbmp\",\n\t\"wdp\",\n\t\"weba\",\n\t\"webm\",\n\t\"webp\",\n\t\"whl\",\n\t\"wim\",\n\t\"wm\",\n\t\"wma\",\n\t\"wmv\",\n\t\"wmx\",\n\t\"woff\",\n\t\"woff2\",\n\t\"wrm\",\n\t\"wvx\",\n\t\"xbm\",\n\t\"xif\",\n\t\"xla\",\n\t\"xlam\",\n\t\"xls\",\n\t\"xlsb\",\n\t\"xlsm\",\n\t\"xlsx\",\n\t\"xlt\",\n\t\"xltm\",\n\t\"xltx\",\n\t\"xm\",\n\t\"xmind\",\n\t\"xpi\",\n\t\"xpm\",\n\t\"xwd\",\n\t\"xz\",\n\t\"z\",\n\t\"zip\",\n\t\"zipx\"\n]\n","module.exports = require('./binary-extensions.json');\n","'use strict';\nconst path = require('path');\nconst binaryExtensions = require('binary-extensions');\n\nconst extensions = new Set(binaryExtensions);\n\nmodule.exports = filePath => extensions.has(path.extname(filePath).slice(1).toLowerCase());\n","'use strict';\n\nconst {sep} = require('path');\nconst {platform} = process;\nconst os = require('os');\n\nexports.EV_ALL = 'all';\nexports.EV_READY = 'ready';\nexports.EV_ADD = 'add';\nexports.EV_CHANGE = 'change';\nexports.EV_ADD_DIR = 'addDir';\nexports.EV_UNLINK = 'unlink';\nexports.EV_UNLINK_DIR = 'unlinkDir';\nexports.EV_RAW = 'raw';\nexports.EV_ERROR = 'error';\n\nexports.STR_DATA = 'data';\nexports.STR_END = 'end';\nexports.STR_CLOSE = 'close';\n\nexports.FSEVENT_CREATED = 'created';\nexports.FSEVENT_MODIFIED = 'modified';\nexports.FSEVENT_DELETED = 'deleted';\nexports.FSEVENT_MOVED = 'moved';\nexports.FSEVENT_CLONED = 'cloned';\nexports.FSEVENT_UNKNOWN = 'unknown';\nexports.FSEVENT_FLAG_MUST_SCAN_SUBDIRS = 1;\nexports.FSEVENT_TYPE_FILE = 'file';\nexports.FSEVENT_TYPE_DIRECTORY = 'directory';\nexports.FSEVENT_TYPE_SYMLINK = 'symlink';\n\nexports.KEY_LISTENERS = 'listeners';\nexports.KEY_ERR = 'errHandlers';\nexports.KEY_RAW = 'rawEmitters';\nexports.HANDLER_KEYS = [exports.KEY_LISTENERS, exports.KEY_ERR, exports.KEY_RAW];\n\nexports.DOT_SLASH = `.${sep}`;\n\nexports.BACK_SLASH_RE = /\\\\/g;\nexports.DOUBLE_SLASH_RE = /\\/\\//;\nexports.SLASH_OR_BACK_SLASH_RE = /[/\\\\]/;\nexports.DOT_RE = /\\..*\\.(sw[px])$|~$|\\.subl.*\\.tmp/;\nexports.REPLACER_RE = /^\\.[/\\\\]/;\n\nexports.SLASH = '/';\nexports.SLASH_SLASH = '//';\nexports.BRACE_START = '{';\nexports.BANG = '!';\nexports.ONE_DOT = '.';\nexports.TWO_DOTS = '..';\nexports.STAR = '*';\nexports.GLOBSTAR = '**';\nexports.ROOT_GLOBSTAR = '/**/*';\nexports.SLASH_GLOBSTAR = '/**';\nexports.DIR_SUFFIX = 'Dir';\nexports.ANYMATCH_OPTS = {dot: true};\nexports.STRING_TYPE = 'string';\nexports.FUNCTION_TYPE = 'function';\nexports.EMPTY_STR = '';\nexports.EMPTY_FN = () => {};\nexports.IDENTITY_FN = val => val;\n\nexports.isWindows = platform === 'win32';\nexports.isMacos = platform === 'darwin';\nexports.isLinux = platform === 'linux';\nexports.isIBMi = os.type() === 'OS400';\n","'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst isBinaryPath = require('is-binary-path');\nconst {\n  isWindows,\n  isLinux,\n  EMPTY_FN,\n  EMPTY_STR,\n  KEY_LISTENERS,\n  KEY_ERR,\n  KEY_RAW,\n  HANDLER_KEYS,\n  EV_CHANGE,\n  EV_ADD,\n  EV_ADD_DIR,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  BRACE_START,\n  STAR\n} = require('./constants');\n\nconst THROTTLE_MODE_WATCH = 'watch';\n\nconst open = promisify(fs.open);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst close = promisify(fs.close);\nconst fsrealpath = promisify(fs.realpath);\n\nconst statMethods = { lstat, stat };\n\n// TODO: emit errors properly. Example: EMFILE on Macos.\nconst foreach = (val, fn) => {\n  if (val instanceof Set) {\n    val.forEach(fn);\n  } else {\n    fn(val);\n  }\n};\n\nconst addAndConvert = (main, prop, item) => {\n  let container = main[prop];\n  if (!(container instanceof Set)) {\n    main[prop] = container = new Set([container]);\n  }\n  container.add(item);\n};\n\nconst clearItem = cont => key => {\n  const set = cont[key];\n  if (set instanceof Set) {\n    set.clear();\n  } else {\n    delete cont[key];\n  }\n};\n\nconst delFromSet = (main, prop, item) => {\n  const container = main[prop];\n  if (container instanceof Set) {\n    container.delete(item);\n  } else if (container === item) {\n    delete main[prop];\n  }\n};\n\nconst isEmptySet = (val) => val instanceof Set ? val.size === 0 : !val;\n\n/**\n * @typedef {String} Path\n */\n\n// fs_watch helpers\n\n// object to hold per-process fs_watch instances\n// (may be shared across chokidar FSWatcher instances)\n\n/**\n * @typedef {Object} FsWatchContainer\n * @property {Set} listeners\n * @property {Set} errHandlers\n * @property {Set} rawEmitters\n * @property {fs.FSWatcher=} watcher\n * @property {Boolean=} watcherUnusable\n */\n\n/**\n * @type {Map<String,FsWatchContainer>}\n */\nconst FsWatchInstances = new Map();\n\n/**\n * Instantiates the fs_watch interface\n * @param {String} path to be watched\n * @param {Object} options to be passed to fs_watch\n * @param {Function} listener main event handler\n * @param {Function} errHandler emits info about errors\n * @param {Function} emitRaw emits raw event data\n * @returns {fs.FSWatcher} new fsevents instance\n */\nfunction createFsWatchInstance(path, options, listener, errHandler, emitRaw) {\n  const handleEvent = (rawEvent, evPath) => {\n    listener(path);\n    emitRaw(rawEvent, evPath, {watchedPath: path});\n\n    // emit based on events occurring for files from a directory's watcher in\n    // case the file's watcher misses it (and rely on throttling to de-dupe)\n    if (evPath && path !== evPath) {\n      fsWatchBroadcast(\n        sysPath.resolve(path, evPath), KEY_LISTENERS, sysPath.join(path, evPath)\n      );\n    }\n  };\n  try {\n    return fs.watch(path, options, handleEvent);\n  } catch (error) {\n    errHandler(error);\n  }\n}\n\n/**\n * Helper for passing fs_watch event data to a collection of listeners\n * @param {Path} fullPath absolute path bound to fs_watch instance\n * @param {String} type listener type\n * @param {*=} val1 arguments to be passed to listeners\n * @param {*=} val2\n * @param {*=} val3\n */\nconst fsWatchBroadcast = (fullPath, type, val1, val2, val3) => {\n  const cont = FsWatchInstances.get(fullPath);\n  if (!cont) return;\n  foreach(cont[type], (listener) => {\n    listener(val1, val2, val3);\n  });\n};\n\n/**\n * Instantiates the fs_watch interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path\n * @param {String} fullPath absolute path\n * @param {Object} options to be passed to fs_watch\n * @param {Object} handlers container for event listener functions\n */\nconst setFsWatchListener = (path, fullPath, options, handlers) => {\n  const {listener, errHandler, rawEmitter} = handlers;\n  let cont = FsWatchInstances.get(fullPath);\n\n  /** @type {fs.FSWatcher=} */\n  let watcher;\n  if (!options.persistent) {\n    watcher = createFsWatchInstance(\n      path, options, listener, errHandler, rawEmitter\n    );\n    return watcher.close.bind(watcher);\n  }\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_ERR, errHandler);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    watcher = createFsWatchInstance(\n      path,\n      options,\n      fsWatchBroadcast.bind(null, fullPath, KEY_LISTENERS),\n      errHandler, // no need to use broadcast here\n      fsWatchBroadcast.bind(null, fullPath, KEY_RAW)\n    );\n    if (!watcher) return;\n    watcher.on(EV_ERROR, async (error) => {\n      const broadcastErr = fsWatchBroadcast.bind(null, fullPath, KEY_ERR);\n      cont.watcherUnusable = true; // documented since Node 10.4.1\n      // Workaround for https://github.com/joyent/node/issues/4337\n      if (isWindows && error.code === 'EPERM') {\n        try {\n          const fd = await open(path, 'r');\n          await close(fd);\n          broadcastErr(error);\n        } catch (err) {}\n      } else {\n        broadcastErr(error);\n      }\n    });\n    cont = {\n      listeners: listener,\n      errHandlers: errHandler,\n      rawEmitters: rawEmitter,\n      watcher\n    };\n    FsWatchInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // removes this instance's listeners and closes the underlying fs_watch\n  // instance if there are no more listeners left\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_ERR, errHandler);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      // Check to protect against issue gh-730.\n      // if (cont.watcherUnusable) {\n      cont.watcher.close();\n      // }\n      FsWatchInstances.delete(fullPath);\n      HANDLER_KEYS.forEach(clearItem(cont));\n      cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n// fs_watchFile helpers\n\n// object to hold per-process fs_watchFile instances\n// (may be shared across chokidar FSWatcher instances)\nconst FsWatchFileInstances = new Map();\n\n/**\n * Instantiates the fs_watchFile interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path to be watched\n * @param {String} fullPath absolute path\n * @param {Object} options options to be passed to fs_watchFile\n * @param {Object} handlers container for event listener functions\n * @returns {Function} closer\n */\nconst setFsWatchFileListener = (path, fullPath, options, handlers) => {\n  const {listener, rawEmitter} = handlers;\n  let cont = FsWatchFileInstances.get(fullPath);\n\n  /* eslint-disable no-unused-vars, prefer-destructuring */\n  let listeners = new Set();\n  let rawEmitters = new Set();\n\n  const copts = cont && cont.options;\n  if (copts && (copts.persistent < options.persistent || copts.interval > options.interval)) {\n    // \"Upgrade\" the watcher to persistence or a quicker interval.\n    // This creates some unlikely edge case issues if the user mixes\n    // settings in a very weird way, but solving for those cases\n    // doesn't seem worthwhile for the added complexity.\n    listeners = cont.listeners;\n    rawEmitters = cont.rawEmitters;\n    fs.unwatchFile(fullPath);\n    cont = undefined;\n  }\n\n  /* eslint-enable no-unused-vars, prefer-destructuring */\n\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    // TODO\n    // listeners.add(listener);\n    // rawEmitters.add(rawEmitter);\n    cont = {\n      listeners: listener,\n      rawEmitters: rawEmitter,\n      options,\n      watcher: fs.watchFile(fullPath, options, (curr, prev) => {\n        foreach(cont.rawEmitters, (rawEmitter) => {\n          rawEmitter(EV_CHANGE, fullPath, {curr, prev});\n        });\n        const currmtime = curr.mtimeMs;\n        if (curr.size !== prev.size || currmtime > prev.mtimeMs || currmtime === 0) {\n          foreach(cont.listeners, (listener) => listener(path, curr));\n        }\n      })\n    };\n    FsWatchFileInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // Removes this instance's listeners and closes the underlying fs_watchFile\n  // instance if there are no more listeners left.\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      FsWatchFileInstances.delete(fullPath);\n      fs.unwatchFile(fullPath);\n      cont.options = cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n/**\n * @mixin\n */\nclass NodeFsHandler {\n\n/**\n * @param {import(\"../index\").FSWatcher} fsW\n */\nconstructor(fsW) {\n  this.fsw = fsW;\n  this._boundHandleError = (error) => fsW._handleError(error);\n}\n\n/**\n * Watch file for changes with fs_watchFile or fs_watch.\n * @param {String} path to file or dir\n * @param {Function} listener on fs change\n * @returns {Function} closer for the watcher instance\n */\n_watchWithNodeFs(path, listener) {\n  const opts = this.fsw.options;\n  const directory = sysPath.dirname(path);\n  const basename = sysPath.basename(path);\n  const parent = this.fsw._getWatchedDir(directory);\n  parent.add(basename);\n  const absolutePath = sysPath.resolve(path);\n  const options = {persistent: opts.persistent};\n  if (!listener) listener = EMPTY_FN;\n\n  let closer;\n  if (opts.usePolling) {\n    options.interval = opts.enableBinaryInterval && isBinaryPath(basename) ?\n      opts.binaryInterval : opts.interval;\n    closer = setFsWatchFileListener(path, absolutePath, options, {\n      listener,\n      rawEmitter: this.fsw._emitRaw\n    });\n  } else {\n    closer = setFsWatchListener(path, absolutePath, options, {\n      listener,\n      errHandler: this._boundHandleError,\n      rawEmitter: this.fsw._emitRaw\n    });\n  }\n  return closer;\n}\n\n/**\n * Watch a file and emit add event if warranted.\n * @param {Path} file Path\n * @param {fs.Stats} stats result of fs_stat\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @returns {Function} closer for the watcher instance\n */\n_handleFile(file, stats, initialAdd) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const dirname = sysPath.dirname(file);\n  const basename = sysPath.basename(file);\n  const parent = this.fsw._getWatchedDir(dirname);\n  // stats is always present\n  let prevStats = stats;\n\n  // if the file is already being watched, do nothing\n  if (parent.has(basename)) return;\n\n  const listener = async (path, newStats) => {\n    if (!this.fsw._throttle(THROTTLE_MODE_WATCH, file, 5)) return;\n    if (!newStats || newStats.mtimeMs === 0) {\n      try {\n        const newStats = await stat(file);\n        if (this.fsw.closed) return;\n        // Check that change event was not fired because of changed only accessTime.\n        const at = newStats.atimeMs;\n        const mt = newStats.mtimeMs;\n        if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n          this.fsw._emit(EV_CHANGE, file, newStats);\n        }\n        if (isLinux && prevStats.ino !== newStats.ino) {\n          this.fsw._closeFile(path)\n          prevStats = newStats;\n          this.fsw._addPathCloser(path, this._watchWithNodeFs(file, listener));\n        } else {\n          prevStats = newStats;\n        }\n      } catch (error) {\n        // Fix issues where mtime is null but file is still present\n        this.fsw._remove(dirname, basename);\n      }\n      // add is about to be emitted if file not already tracked in parent\n    } else if (parent.has(basename)) {\n      // Check that change event was not fired because of changed only accessTime.\n      const at = newStats.atimeMs;\n      const mt = newStats.mtimeMs;\n      if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n        this.fsw._emit(EV_CHANGE, file, newStats);\n      }\n      prevStats = newStats;\n    }\n  }\n  // kick off the watcher\n  const closer = this._watchWithNodeFs(file, listener);\n\n  // emit an add event if we're supposed to\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && this.fsw._isntIgnored(file)) {\n    if (!this.fsw._throttle(EV_ADD, file, 0)) return;\n    this.fsw._emit(EV_ADD, file, stats);\n  }\n\n  return closer;\n}\n\n/**\n * Handle symlinks encountered while reading a dir.\n * @param {Object} entry returned by readdirp\n * @param {String} directory path of dir being read\n * @param {String} path of this item\n * @param {String} item basename of this item\n * @returns {Promise<Boolean>} true if no more processing is needed for this entry.\n */\nasync _handleSymlink(entry, directory, path, item) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const full = entry.fullPath;\n  const dir = this.fsw._getWatchedDir(directory);\n\n  if (!this.fsw.options.followSymlinks) {\n    // watch symlink directly (don't follow) and detect changes\n    this.fsw._incrReadyCount();\n\n    let linkPath;\n    try {\n      linkPath = await fsrealpath(path);\n    } catch (e) {\n      this.fsw._emitReady();\n      return true;\n    }\n\n    if (this.fsw.closed) return;\n    if (dir.has(item)) {\n      if (this.fsw._symlinkPaths.get(full) !== linkPath) {\n        this.fsw._symlinkPaths.set(full, linkPath);\n        this.fsw._emit(EV_CHANGE, path, entry.stats);\n      }\n    } else {\n      dir.add(item);\n      this.fsw._symlinkPaths.set(full, linkPath);\n      this.fsw._emit(EV_ADD, path, entry.stats);\n    }\n    this.fsw._emitReady();\n    return true;\n  }\n\n  // don't follow the same symlink more than once\n  if (this.fsw._symlinkPaths.has(full)) {\n    return true;\n  }\n\n  this.fsw._symlinkPaths.set(full, true);\n}\n\n_handleRead(directory, initialAdd, wh, target, dir, depth, throttler) {\n  // Normalize the directory name on Windows\n  directory = sysPath.join(directory, EMPTY_STR);\n\n  if (!wh.hasGlob) {\n    throttler = this.fsw._throttle('readdir', directory, 1000);\n    if (!throttler) return;\n  }\n\n  const previous = this.fsw._getWatchedDir(wh.path);\n  const current = new Set();\n\n  let stream = this.fsw._readdirp(directory, {\n    fileFilter: entry => wh.filterPath(entry),\n    directoryFilter: entry => wh.filterDir(entry),\n    depth: 0\n  }).on(STR_DATA, async (entry) => {\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    const item = entry.path;\n    let path = sysPath.join(directory, item);\n    current.add(item);\n\n    if (entry.stats.isSymbolicLink() && await this._handleSymlink(entry, directory, path, item)) {\n      return;\n    }\n\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    // Files that present in current directory snapshot\n    // but absent in previous are added to watch list and\n    // emit `add` event.\n    if (item === target || !target && !previous.has(item)) {\n      this.fsw._incrReadyCount();\n\n      // ensure relativeness of path is preserved in case of watcher reuse\n      path = sysPath.join(dir, sysPath.relative(dir, path));\n\n      this._addToNodeFs(path, initialAdd, wh, depth + 1);\n    }\n  }).on(EV_ERROR, this._boundHandleError);\n\n  return new Promise(resolve =>\n    stream.once(STR_END, () => {\n      if (this.fsw.closed) {\n        stream = undefined;\n        return;\n      }\n      const wasThrottled = throttler ? throttler.clear() : false;\n\n      resolve();\n\n      // Files that absent in current directory snapshot\n      // but present in previous emit `remove` event\n      // and are removed from @watched[directory].\n      previous.getChildren().filter((item) => {\n        return item !== directory &&\n          !current.has(item) &&\n          // in case of intersecting globs;\n          // a path may have been filtered out of this readdir, but\n          // shouldn't be removed because it matches a different glob\n          (!wh.hasGlob || wh.filterPath({\n            fullPath: sysPath.resolve(directory, item)\n          }));\n      }).forEach((item) => {\n        this.fsw._remove(directory, item);\n      });\n\n      stream = undefined;\n\n      // one more time for any missed in case changes came in extremely quickly\n      if (wasThrottled) this._handleRead(directory, false, wh, target, dir, depth, throttler);\n    })\n  );\n}\n\n/**\n * Read directory to add / remove files from `@watched` list and re-read it on change.\n * @param {String} dir fs path\n * @param {fs.Stats} stats\n * @param {Boolean} initialAdd\n * @param {Number} depth relative to user-supplied path\n * @param {String} target child path targeted for watch\n * @param {Object} wh Common watch helpers for this path\n * @param {String} realpath\n * @returns {Promise<Function>} closer for the watcher instance.\n */\nasync _handleDir(dir, stats, initialAdd, depth, target, wh, realpath) {\n  const parentDir = this.fsw._getWatchedDir(sysPath.dirname(dir));\n  const tracked = parentDir.has(sysPath.basename(dir));\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && !target && !tracked) {\n    if (!wh.hasGlob || wh.globFilter(dir)) this.fsw._emit(EV_ADD_DIR, dir, stats);\n  }\n\n  // ensure dir is tracked (harmless if redundant)\n  parentDir.add(sysPath.basename(dir));\n  this.fsw._getWatchedDir(dir);\n  let throttler;\n  let closer;\n\n  const oDepth = this.fsw.options.depth;\n  if ((oDepth == null || depth <= oDepth) && !this.fsw._symlinkPaths.has(realpath)) {\n    if (!target) {\n      await this._handleRead(dir, initialAdd, wh, target, dir, depth, throttler);\n      if (this.fsw.closed) return;\n    }\n\n    closer = this._watchWithNodeFs(dir, (dirPath, stats) => {\n      // if current directory is removed, do nothing\n      if (stats && stats.mtimeMs === 0) return;\n\n      this._handleRead(dirPath, false, wh, target, dir, depth, throttler);\n    });\n  }\n  return closer;\n}\n\n/**\n * Handle added file, directory, or glob pattern.\n * Delegates call to _handleFile / _handleDir after checks.\n * @param {String} path to file or ir\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @param {Object} priorWh depth relative to user-supplied path\n * @param {Number} depth Child path actually targeted for watch\n * @param {String=} target Child path actually targeted for watch\n * @returns {Promise}\n */\nasync _addToNodeFs(path, initialAdd, priorWh, depth, target) {\n  const ready = this.fsw._emitReady;\n  if (this.fsw._isIgnored(path) || this.fsw.closed) {\n    ready();\n    return false;\n  }\n\n  const wh = this.fsw._getWatchHelpers(path, depth);\n  if (!wh.hasGlob && priorWh) {\n    wh.hasGlob = priorWh.hasGlob;\n    wh.globFilter = priorWh.globFilter;\n    wh.filterPath = entry => priorWh.filterPath(entry);\n    wh.filterDir = entry => priorWh.filterDir(entry);\n  }\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      ready();\n      return false;\n    }\n\n    const follow = this.fsw.options.followSymlinks && !path.includes(STAR) && !path.includes(BRACE_START);\n    let closer;\n    if (stats.isDirectory()) {\n      const absPath = sysPath.resolve(path);\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      closer = await this._handleDir(wh.watchPath, stats, initialAdd, depth, target, wh, targetPath);\n      if (this.fsw.closed) return;\n      // preserve this symlink's target path\n      if (absPath !== targetPath && targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(absPath, targetPath);\n      }\n    } else if (stats.isSymbolicLink()) {\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      const parent = sysPath.dirname(wh.watchPath);\n      this.fsw._getWatchedDir(parent).add(wh.watchPath);\n      this.fsw._emit(EV_ADD, wh.watchPath, stats);\n      closer = await this._handleDir(parent, stats, initialAdd, depth, path, wh, targetPath);\n      if (this.fsw.closed) return;\n\n      // preserve this symlink's target path\n      if (targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(sysPath.resolve(path), targetPath);\n      }\n    } else {\n      closer = this._handleFile(wh.watchPath, stats, initialAdd);\n    }\n    ready();\n\n    this.fsw._addPathCloser(path, closer);\n    return false;\n\n  } catch (error) {\n    if (this.fsw._handleError(error)) {\n      ready();\n      return path;\n    }\n  }\n}\n\n}\n\nmodule.exports = NodeFsHandler;\n","'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\n\nlet fsevents;\ntry {\n  fsevents = require('fsevents');\n} catch (error) {\n  if (process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR) console.error(error);\n}\n\nif (fsevents) {\n  // TODO: real check\n  const mtch = process.version.match(/v(\\d+)\\.(\\d+)/);\n  if (mtch && mtch[1] && mtch[2]) {\n    const maj = Number.parseInt(mtch[1], 10);\n    const min = Number.parseInt(mtch[2], 10);\n    if (maj === 8 && min < 16) {\n      fsevents = undefined;\n    }\n  }\n}\n\nconst {\n  EV_ADD,\n  EV_CHANGE,\n  EV_ADD_DIR,\n  EV_UNLINK,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  FSEVENT_CREATED,\n  FSEVENT_MODIFIED,\n  FSEVENT_DELETED,\n  FSEVENT_MOVED,\n  // FSEVENT_CLONED,\n  FSEVENT_UNKNOWN,\n  FSEVENT_FLAG_MUST_SCAN_SUBDIRS,\n  FSEVENT_TYPE_FILE,\n  FSEVENT_TYPE_DIRECTORY,\n  FSEVENT_TYPE_SYMLINK,\n\n  ROOT_GLOBSTAR,\n  DIR_SUFFIX,\n  DOT_SLASH,\n  FUNCTION_TYPE,\n  EMPTY_FN,\n  IDENTITY_FN\n} = require('./constants');\n\nconst Depth = (value) => isNaN(value) ? {} : {depth: value};\n\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\nconst statMethods = { stat, lstat };\n\n/**\n * @typedef {String} Path\n */\n\n/**\n * @typedef {Object} FsEventsWatchContainer\n * @property {Set<Function>} listeners\n * @property {Function} rawEmitter\n * @property {{stop: Function}} watcher\n */\n\n// fsevents instance helper functions\n/**\n * Object to hold per-process fsevents instances (may be shared across chokidar FSWatcher instances)\n * @type {Map<Path,FsEventsWatchContainer>}\n */\nconst FSEventsWatchers = new Map();\n\n// Threshold of duplicate path prefixes at which to start\n// consolidating going forward\nconst consolidateThreshhold = 10;\n\nconst wrongEventFlags = new Set([\n  69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912\n]);\n\n/**\n * Instantiates the fsevents interface\n * @param {Path} path path to be watched\n * @param {Function} callback called when fsevents is bound and ready\n * @returns {{stop: Function}} new fsevents instance\n */\nconst createFSEventsInstance = (path, callback) => {\n  const stop = fsevents.watch(path, callback);\n  return {stop};\n};\n\n/**\n * Instantiates the fsevents interface or binds listeners to an existing one covering\n * the same file tree.\n * @param {Path} path           - to be watched\n * @param {Path} realPath       - real path for symlinks\n * @param {Function} listener   - called when fsevents emits events\n * @param {Function} rawEmitter - passes data to listeners of the 'raw' event\n * @returns {Function} closer\n */\nfunction setFSEventsListener(path, realPath, listener, rawEmitter) {\n  let watchPath = sysPath.extname(realPath) ? sysPath.dirname(realPath) : realPath;\n\n  const parentPath = sysPath.dirname(watchPath);\n  let cont = FSEventsWatchers.get(watchPath);\n\n  // If we've accumulated a substantial number of paths that\n  // could have been consolidated by watching one directory\n  // above the current one, create a watcher on the parent\n  // path instead, so that we do consolidate going forward.\n  if (couldConsolidate(parentPath)) {\n    watchPath = parentPath;\n  }\n\n  const resolvedPath = sysPath.resolve(path);\n  const hasSymlink = resolvedPath !== realPath;\n\n  const filteredListener = (fullPath, flags, info) => {\n    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);\n    if (\n      fullPath === resolvedPath ||\n      !fullPath.indexOf(resolvedPath + sysPath.sep)\n    ) listener(fullPath, flags, info);\n  };\n\n  // check if there is already a watcher on a parent path\n  // modifies `watchPath` to the parent path when it finds a match\n  let watchedParent = false;\n  for (const watchedPath of FSEventsWatchers.keys()) {\n    if (realPath.indexOf(sysPath.resolve(watchedPath) + sysPath.sep) === 0) {\n      watchPath = watchedPath;\n      cont = FSEventsWatchers.get(watchPath);\n      watchedParent = true;\n      break;\n    }\n  }\n\n  if (cont || watchedParent) {\n    cont.listeners.add(filteredListener);\n  } else {\n    cont = {\n      listeners: new Set([filteredListener]),\n      rawEmitter,\n      watcher: createFSEventsInstance(watchPath, (fullPath, flags) => {\n        if (!cont.listeners.size) return;\n        if (flags & FSEVENT_FLAG_MUST_SCAN_SUBDIRS) return;\n        const info = fsevents.getInfo(fullPath, flags);\n        cont.listeners.forEach(list => {\n          list(fullPath, flags, info);\n        });\n\n        cont.rawEmitter(info.event, fullPath, info);\n      })\n    };\n    FSEventsWatchers.set(watchPath, cont);\n  }\n\n  // removes this instance's listeners and closes the underlying fsevents\n  // instance if there are no more listeners left\n  return () => {\n    const lst = cont.listeners;\n\n    lst.delete(filteredListener);\n    if (!lst.size) {\n      FSEventsWatchers.delete(watchPath);\n      if (cont.watcher) return cont.watcher.stop().then(() => {\n        cont.rawEmitter = cont.watcher = undefined;\n        Object.freeze(cont);\n      });\n    }\n  };\n}\n\n// Decide whether or not we should start a new higher-level\n// parent watcher\nconst couldConsolidate = (path) => {\n  let count = 0;\n  for (const watchPath of FSEventsWatchers.keys()) {\n    if (watchPath.indexOf(path) === 0) {\n      count++;\n      if (count >= consolidateThreshhold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n// returns boolean indicating whether fsevents can be used\nconst canUse = () => fsevents && FSEventsWatchers.size < 128;\n\n// determines subdirectory traversal levels from root to path\nconst calcDepth = (path, root) => {\n  let i = 0;\n  while (!path.indexOf(root) && (path = sysPath.dirname(path)) !== root) i++;\n  return i;\n};\n\n// returns boolean indicating whether the fsevents' event info has the same type\n// as the one returned by fs.stat\nconst sameTypes = (info, stats) => (\n  info.type === FSEVENT_TYPE_DIRECTORY && stats.isDirectory() ||\n  info.type === FSEVENT_TYPE_SYMLINK && stats.isSymbolicLink() ||\n  info.type === FSEVENT_TYPE_FILE && stats.isFile()\n)\n\n/**\n * @mixin\n */\nclass FsEventsHandler {\n\n/**\n * @param {import('../index').FSWatcher} fsw\n */\nconstructor(fsw) {\n  this.fsw = fsw;\n}\ncheckIgnored(path, stats) {\n  const ipaths = this.fsw._ignoredPaths;\n  if (this.fsw._isIgnored(path, stats)) {\n    ipaths.add(path);\n    if (stats && stats.isDirectory()) {\n      ipaths.add(path + ROOT_GLOBSTAR);\n    }\n    return true;\n  }\n\n  ipaths.delete(path);\n  ipaths.delete(path + ROOT_GLOBSTAR);\n}\n\naddOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  const event = watchedDir.has(item) ? EV_CHANGE : EV_ADD;\n  this.handleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n}\n\nasync checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  try {\n    const stats = await stat(path)\n    if (this.fsw.closed) return;\n    if (sameTypes(info, stats)) {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  } catch (error) {\n    if (error.code === 'EACCES') {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  }\n}\n\nhandleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  if (this.fsw.closed || this.checkIgnored(path)) return;\n\n  if (event === EV_UNLINK) {\n    const isDirectory = info.type === FSEVENT_TYPE_DIRECTORY\n    // suppress unlink events on never before seen files\n    if (isDirectory || watchedDir.has(item)) {\n      this.fsw._remove(parent, item, isDirectory);\n    }\n  } else {\n    if (event === EV_ADD) {\n      // track new directories\n      if (info.type === FSEVENT_TYPE_DIRECTORY) this.fsw._getWatchedDir(path);\n\n      if (info.type === FSEVENT_TYPE_SYMLINK && opts.followSymlinks) {\n        // push symlinks back to the top of the stack to get handled\n        const curDepth = opts.depth === undefined ?\n          undefined : calcDepth(fullPath, realPath) + 1;\n        return this._addToFsEvents(path, false, true, curDepth);\n      }\n\n      // track new paths\n      // (other than symlinks being followed, which will be tracked soon)\n      this.fsw._getWatchedDir(parent).add(item);\n    }\n    /**\n     * @type {'add'|'addDir'|'unlink'|'unlinkDir'}\n     */\n    const eventName = info.type === FSEVENT_TYPE_DIRECTORY ? event + DIR_SUFFIX : event;\n    this.fsw._emit(eventName, path);\n    if (eventName === EV_ADD_DIR) this._addToFsEvents(path, false, true);\n  }\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} watchPath  - file/dir path to be watched with fsevents\n * @param {String} realPath   - real path (in case of symlinks)\n * @param {Function} transform  - path transformer\n * @param {Function} globFilter - path filter in case a glob pattern was provided\n * @returns {Function} closer for the watcher instance\n*/\n_watchWithFsEvents(watchPath, realPath, transform, globFilter) {\n  if (this.fsw.closed || this.fsw._isIgnored(watchPath)) return;\n  const opts = this.fsw.options;\n  const watchCallback = async (fullPath, flags, info) => {\n    if (this.fsw.closed) return;\n    if (\n      opts.depth !== undefined &&\n      calcDepth(fullPath, realPath) > opts.depth\n    ) return;\n    const path = transform(sysPath.join(\n      watchPath, sysPath.relative(watchPath, fullPath)\n    ));\n    if (globFilter && !globFilter(path)) return;\n    // ensure directories are tracked\n    const parent = sysPath.dirname(path);\n    const item = sysPath.basename(path);\n    const watchedDir = this.fsw._getWatchedDir(\n      info.type === FSEVENT_TYPE_DIRECTORY ? path : parent\n    );\n\n    // correct for wrong events emitted\n    if (wrongEventFlags.has(flags) || info.event === FSEVENT_UNKNOWN) {\n      if (typeof opts.ignored === FUNCTION_TYPE) {\n        let stats;\n        try {\n          stats = await stat(path);\n        } catch (error) {}\n        if (this.fsw.closed) return;\n        if (this.checkIgnored(path, stats)) return;\n        if (sameTypes(info, stats)) {\n          this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        } else {\n          this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        }\n      } else {\n        this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    } else {\n      switch (info.event) {\n      case FSEVENT_CREATED:\n      case FSEVENT_MODIFIED:\n        return this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      case FSEVENT_DELETED:\n      case FSEVENT_MOVED:\n        return this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    }\n  };\n\n  const closer = setFSEventsListener(\n    watchPath,\n    realPath,\n    watchCallback,\n    this.fsw._emitRaw\n  );\n\n  this.fsw._emitReady();\n  return closer;\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} linkPath path to symlink\n * @param {String} fullPath absolute path to the symlink\n * @param {Function} transform pre-existing path transformer\n * @param {Number} curDepth level of subdirectories traversed to where symlink is\n * @returns {Promise<void>}\n */\nasync _handleFsEventsSymlink(linkPath, fullPath, transform, curDepth) {\n  // don't follow the same symlink more than once\n  if (this.fsw.closed || this.fsw._symlinkPaths.has(fullPath)) return;\n\n  this.fsw._symlinkPaths.set(fullPath, true);\n  this.fsw._incrReadyCount();\n\n  try {\n    const linkTarget = await realpath(linkPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(linkTarget)) {\n      return this.fsw._emitReady();\n    }\n\n    this.fsw._incrReadyCount();\n\n    // add the linkTarget for watching with a wrapper for transform\n    // that causes emitted paths to incorporate the link's path\n    this._addToFsEvents(linkTarget || linkPath, (path) => {\n      let aliasedPath = linkPath;\n      if (linkTarget && linkTarget !== DOT_SLASH) {\n        aliasedPath = path.replace(linkTarget, linkPath);\n      } else if (path !== DOT_SLASH) {\n        aliasedPath = sysPath.join(linkPath, path);\n      }\n      return transform(aliasedPath);\n    }, false, curDepth);\n  } catch(error) {\n    if (this.fsw._handleError(error)) {\n      return this.fsw._emitReady();\n    }\n  }\n}\n\n/**\n *\n * @param {Path} newPath\n * @param {fs.Stats} stats\n */\nemitAdd(newPath, stats, processPath, opts, forceAdd) {\n  const pp = processPath(newPath);\n  const isDir = stats.isDirectory();\n  const dirObj = this.fsw._getWatchedDir(sysPath.dirname(pp));\n  const base = sysPath.basename(pp);\n\n  // ensure empty dirs get tracked\n  if (isDir) this.fsw._getWatchedDir(pp);\n  if (dirObj.has(base)) return;\n  dirObj.add(base);\n\n  if (!opts.ignoreInitial || forceAdd === true) {\n    this.fsw._emit(isDir ? EV_ADD_DIR : EV_ADD, pp, stats);\n  }\n}\n\ninitWatch(realPath, path, wh, processPath) {\n  if (this.fsw.closed) return;\n  const closer = this._watchWithFsEvents(\n    wh.watchPath,\n    sysPath.resolve(realPath || wh.watchPath),\n    processPath,\n    wh.globFilter\n  );\n  this.fsw._addPathCloser(path, closer);\n}\n\n/**\n * Handle added path with fsevents\n * @param {String} path file/dir path or glob pattern\n * @param {Function|Boolean=} transform converts working path to what the user expects\n * @param {Boolean=} forceAdd ensure add is emitted\n * @param {Number=} priorDepth Level of subdirectories already traversed.\n * @returns {Promise<void>}\n */\nasync _addToFsEvents(path, transform, forceAdd, priorDepth) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const opts = this.fsw.options;\n  const processPath = typeof transform === FUNCTION_TYPE ? transform : IDENTITY_FN;\n\n  const wh = this.fsw._getWatchHelpers(path);\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      throw null;\n    }\n    if (stats.isDirectory()) {\n      // emit addDir unless this is a glob parent\n      if (!wh.globFilter) this.emitAdd(processPath(path), stats, processPath, opts, forceAdd);\n\n      // don't recurse further if it would exceed depth setting\n      if (priorDepth && priorDepth > opts.depth) return;\n\n      // scan the contents of the dir\n      this.fsw._readdirp(wh.watchPath, {\n        fileFilter: entry => wh.filterPath(entry),\n        directoryFilter: entry => wh.filterDir(entry),\n        ...Depth(opts.depth - (priorDepth || 0))\n      }).on(STR_DATA, (entry) => {\n        // need to check filterPath on dirs b/c filterDir is less restrictive\n        if (this.fsw.closed) {\n          return;\n        }\n        if (entry.stats.isDirectory() && !wh.filterPath(entry)) return;\n\n        const joinedPath = sysPath.join(wh.watchPath, entry.path);\n        const {fullPath} = entry;\n\n        if (wh.followSymlinks && entry.stats.isSymbolicLink()) {\n          // preserve the current depth here since it can't be derived from\n          // real paths past the symlink\n          const curDepth = opts.depth === undefined ?\n            undefined : calcDepth(joinedPath, sysPath.resolve(wh.watchPath)) + 1;\n\n          this._handleFsEventsSymlink(joinedPath, fullPath, processPath, curDepth);\n        } else {\n          this.emitAdd(joinedPath, entry.stats, processPath, opts, forceAdd);\n        }\n      }).on(EV_ERROR, EMPTY_FN).on(STR_END, () => {\n        this.fsw._emitReady();\n      });\n    } else {\n      this.emitAdd(wh.watchPath, stats, processPath, opts, forceAdd);\n      this.fsw._emitReady();\n    }\n  } catch (error) {\n    if (!error || this.fsw._handleError(error)) {\n      // TODO: Strange thing: \"should not choke on an ignored watch path\" will be failed without 2 ready calls -__-\n      this.fsw._emitReady();\n      this.fsw._emitReady();\n    }\n  }\n\n  if (opts.persistent && forceAdd !== true) {\n    if (typeof transform === FUNCTION_TYPE) {\n      // realpath has already been resolved\n      this.initWatch(undefined, path, wh, processPath);\n    } else {\n      let realPath;\n      try {\n        realPath = await realpath(wh.watchPath);\n      } catch (e) {}\n      this.initWatch(realPath, path, wh, processPath);\n    }\n  }\n}\n\n}\n\nmodule.exports = FsEventsHandler;\nmodule.exports.canUse = canUse;\n","'use strict';\n\nconst { EventEmitter } = require('events');\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst readdirp = require('readdirp');\nconst anymatch = require('anymatch').default;\nconst globParent = require('glob-parent');\nconst isGlob = require('is-glob');\nconst braces = require('braces');\nconst normalizePath = require('normalize-path');\n\nconst NodeFsHandler = require('./lib/nodefs-handler');\nconst FsEventsHandler = require('./lib/fsevents-handler');\nconst {\n  EV_ALL,\n  EV_READY,\n  EV_ADD,\n  EV_CHANGE,\n  EV_UNLINK,\n  EV_ADD_DIR,\n  EV_UNLINK_DIR,\n  EV_RAW,\n  EV_ERROR,\n\n  STR_CLOSE,\n  STR_END,\n\n  BACK_SLASH_RE,\n  DOUBLE_SLASH_RE,\n  SLASH_OR_BACK_SLASH_RE,\n  DOT_RE,\n  REPLACER_RE,\n\n  SLASH,\n  SLASH_SLASH,\n  BRACE_START,\n  BANG,\n  ONE_DOT,\n  TWO_DOTS,\n  GLOBSTAR,\n  SLASH_GLOBSTAR,\n  ANYMATCH_OPTS,\n  STRING_TYPE,\n  FUNCTION_TYPE,\n  EMPTY_STR,\n  EMPTY_FN,\n\n  isWindows,\n  isMacos,\n  isIBMi\n} = require('./lib/constants');\n\nconst stat = promisify(fs.stat);\nconst readdir = promisify(fs.readdir);\n\n/**\n * @typedef {String} Path\n * @typedef {'all'|'add'|'addDir'|'change'|'unlink'|'unlinkDir'|'raw'|'error'|'ready'} EventName\n * @typedef {'readdir'|'watch'|'add'|'remove'|'change'} ThrottleType\n */\n\n/**\n *\n * @typedef {Object} WatchHelpers\n * @property {Boolean} followSymlinks\n * @property {'stat'|'lstat'} statMethod\n * @property {Path} path\n * @property {Path} watchPath\n * @property {Function} entryPath\n * @property {Boolean} hasGlob\n * @property {Object} globFilter\n * @property {Function} filterPath\n * @property {Function} filterDir\n */\n\nconst arrify = (value = []) => Array.isArray(value) ? value : [value];\nconst flatten = (list, result = []) => {\n  list.forEach(item => {\n    if (Array.isArray(item)) {\n      flatten(item, result);\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nconst unifyPaths = (paths_) => {\n  /**\n   * @type {Array<String>}\n   */\n  const paths = flatten(arrify(paths_));\n  if (!paths.every(p => typeof p === STRING_TYPE)) {\n    throw new TypeError(`Non-string provided as watch path: ${paths}`);\n  }\n  return paths.map(normalizePathToUnix);\n};\n\n// If SLASH_SLASH occurs at the beginning of path, it is not replaced\n//     because \"//StoragePC/DrivePool/Movies\" is a valid network path\nconst toUnix = (string) => {\n  let str = string.replace(BACK_SLASH_RE, SLASH);\n  let prepend = false;\n  if (str.startsWith(SLASH_SLASH)) {\n    prepend = true;\n  }\n  while (str.match(DOUBLE_SLASH_RE)) {\n    str = str.replace(DOUBLE_SLASH_RE, SLASH);\n  }\n  if (prepend) {\n    str = SLASH + str;\n  }\n  return str;\n};\n\n// Our version of upath.normalize\n// TODO: this is not equal to path-normalize module - investigate why\nconst normalizePathToUnix = (path) => toUnix(sysPath.normalize(toUnix(path)));\n\nconst normalizeIgnored = (cwd = EMPTY_STR) => (path) => {\n  if (typeof path !== STRING_TYPE) return path;\n  return normalizePathToUnix(sysPath.isAbsolute(path) ? path : sysPath.join(cwd, path));\n};\n\nconst getAbsolutePath = (path, cwd) => {\n  if (sysPath.isAbsolute(path)) {\n    return path;\n  }\n  if (path.startsWith(BANG)) {\n    return BANG + sysPath.join(cwd, path.slice(1));\n  }\n  return sysPath.join(cwd, path);\n};\n\nconst undef = (opts, key) => opts[key] === undefined;\n\n/**\n * Directory entry.\n * @property {Path} path\n * @property {Set<Path>} items\n */\nclass DirEntry {\n  /**\n   * @param {Path} dir\n   * @param {Function} removeWatcher\n   */\n  constructor(dir, removeWatcher) {\n    this.path = dir;\n    this._removeWatcher = removeWatcher;\n    /** @type {Set<Path>} */\n    this.items = new Set();\n  }\n\n  add(item) {\n    const {items} = this;\n    if (!items) return;\n    if (item !== ONE_DOT && item !== TWO_DOTS) items.add(item);\n  }\n\n  async remove(item) {\n    const {items} = this;\n    if (!items) return;\n    items.delete(item);\n    if (items.size > 0) return;\n\n    const dir = this.path;\n    try {\n      await readdir(dir);\n    } catch (err) {\n      if (this._removeWatcher) {\n        this._removeWatcher(sysPath.dirname(dir), sysPath.basename(dir));\n      }\n    }\n  }\n\n  has(item) {\n    const {items} = this;\n    if (!items) return;\n    return items.has(item);\n  }\n\n  /**\n   * @returns {Array<String>}\n   */\n  getChildren() {\n    const {items} = this;\n    if (!items) return;\n    return [...items.values()];\n  }\n\n  dispose() {\n    this.items.clear();\n    delete this.path;\n    delete this._removeWatcher;\n    delete this.items;\n    Object.freeze(this);\n  }\n}\n\nconst STAT_METHOD_F = 'stat';\nconst STAT_METHOD_L = 'lstat';\nclass WatchHelper {\n  constructor(path, watchPath, follow, fsw) {\n    this.fsw = fsw;\n    this.path = path = path.replace(REPLACER_RE, EMPTY_STR);\n    this.watchPath = watchPath;\n    this.fullWatchPath = sysPath.resolve(watchPath);\n    this.hasGlob = watchPath !== path;\n    /** @type {object|boolean} */\n    if (path === EMPTY_STR) this.hasGlob = false;\n    this.globSymlink = this.hasGlob && follow ? undefined : false;\n    this.globFilter = this.hasGlob ? anymatch(path, undefined, ANYMATCH_OPTS) : false;\n    this.dirParts = this.getDirParts(path);\n    this.dirParts.forEach((parts) => {\n      if (parts.length > 1) parts.pop();\n    });\n    this.followSymlinks = follow;\n    this.statMethod = follow ? STAT_METHOD_F : STAT_METHOD_L;\n  }\n\n  checkGlobSymlink(entry) {\n    // only need to resolve once\n    // first entry should always have entry.parentDir === EMPTY_STR\n    if (this.globSymlink === undefined) {\n      this.globSymlink = entry.fullParentDir === this.fullWatchPath ?\n        false : {realPath: entry.fullParentDir, linkPath: this.fullWatchPath};\n    }\n\n    if (this.globSymlink) {\n      return entry.fullPath.replace(this.globSymlink.realPath, this.globSymlink.linkPath);\n    }\n\n    return entry.fullPath;\n  }\n\n  entryPath(entry) {\n    return sysPath.join(this.watchPath,\n      sysPath.relative(this.watchPath, this.checkGlobSymlink(entry))\n    );\n  }\n\n  filterPath(entry) {\n    const {stats} = entry;\n    if (stats && stats.isSymbolicLink()) return this.filterDir(entry);\n    const resolvedPath = this.entryPath(entry);\n    const matchesGlob = this.hasGlob && typeof this.globFilter === FUNCTION_TYPE ?\n      this.globFilter(resolvedPath) : true;\n    return matchesGlob &&\n      this.fsw._isntIgnored(resolvedPath, stats) &&\n      this.fsw._hasReadPermissions(stats);\n  }\n\n  getDirParts(path) {\n    if (!this.hasGlob) return [];\n    const parts = [];\n    const expandedPath = path.includes(BRACE_START) ? braces.expand(path) : [path];\n    expandedPath.forEach((path) => {\n      parts.push(sysPath.relative(this.watchPath, path).split(SLASH_OR_BACK_SLASH_RE));\n    });\n    return parts;\n  }\n\n  filterDir(entry) {\n    if (this.hasGlob) {\n      const entryParts = this.getDirParts(this.checkGlobSymlink(entry));\n      let globstar = false;\n      this.unmatchedGlob = !this.dirParts.some((parts) => {\n        return parts.every((part, i) => {\n          if (part === GLOBSTAR) globstar = true;\n          return globstar || !entryParts[0][i] || anymatch(part, entryParts[0][i], ANYMATCH_OPTS);\n        });\n      });\n    }\n    return !this.unmatchedGlob && this.fsw._isntIgnored(this.entryPath(entry), entry.stats);\n  }\n}\n\n/**\n * Watches files & directories for changes. Emitted events:\n * `add`, `addDir`, `change`, `unlink`, `unlinkDir`, `all`, `error`\n *\n *     new FSWatcher()\n *       .add(directories)\n *       .on('add', path => log('File', path, 'was added'))\n */\nclass FSWatcher extends EventEmitter {\n// Not indenting methods for history sake; for now.\nconstructor(_opts) {\n  super();\n\n  const opts = {};\n  if (_opts) Object.assign(opts, _opts); // for frozen objects\n\n  /** @type {Map<String, DirEntry>} */\n  this._watched = new Map();\n  /** @type {Map<String, Array>} */\n  this._closers = new Map();\n  /** @type {Set<String>} */\n  this._ignoredPaths = new Set();\n\n  /** @type {Map<ThrottleType, Map>} */\n  this._throttled = new Map();\n\n  /** @type {Map<Path, String|Boolean>} */\n  this._symlinkPaths = new Map();\n\n  this._streams = new Set();\n  this.closed = false;\n\n  // Set up default options.\n  if (undef(opts, 'persistent')) opts.persistent = true;\n  if (undef(opts, 'ignoreInitial')) opts.ignoreInitial = false;\n  if (undef(opts, 'ignorePermissionErrors')) opts.ignorePermissionErrors = false;\n  if (undef(opts, 'interval')) opts.interval = 100;\n  if (undef(opts, 'binaryInterval')) opts.binaryInterval = 300;\n  if (undef(opts, 'disableGlobbing')) opts.disableGlobbing = false;\n  opts.enableBinaryInterval = opts.binaryInterval !== opts.interval;\n\n  // Enable fsevents on OS X when polling isn't explicitly enabled.\n  if (undef(opts, 'useFsEvents')) opts.useFsEvents = !opts.usePolling;\n\n  // If we can't use fsevents, ensure the options reflect it's disabled.\n  const canUseFsEvents = FsEventsHandler.canUse();\n  if (!canUseFsEvents) opts.useFsEvents = false;\n\n  // Use polling on Mac if not using fsevents.\n  // Other platforms use non-polling fs_watch.\n  if (undef(opts, 'usePolling') && !opts.useFsEvents) {\n    opts.usePolling = isMacos;\n  }\n\n  // Always default to polling on IBM i because fs.watch() is not available on IBM i.\n  if(isIBMi) {\n    opts.usePolling = true;\n  }\n\n  // Global override (useful for end-developers that need to force polling for all\n  // instances of chokidar, regardless of usage/dependency depth)\n  const envPoll = process.env.CHOKIDAR_USEPOLLING;\n  if (envPoll !== undefined) {\n    const envLower = envPoll.toLowerCase();\n\n    if (envLower === 'false' || envLower === '0') {\n      opts.usePolling = false;\n    } else if (envLower === 'true' || envLower === '1') {\n      opts.usePolling = true;\n    } else {\n      opts.usePolling = !!envLower;\n    }\n  }\n  const envInterval = process.env.CHOKIDAR_INTERVAL;\n  if (envInterval) {\n    opts.interval = Number.parseInt(envInterval, 10);\n  }\n\n  // Editor atomic write normalization enabled by default with fs.watch\n  if (undef(opts, 'atomic')) opts.atomic = !opts.usePolling && !opts.useFsEvents;\n  if (opts.atomic) this._pendingUnlinks = new Map();\n\n  if (undef(opts, 'followSymlinks')) opts.followSymlinks = true;\n\n  if (undef(opts, 'awaitWriteFinish')) opts.awaitWriteFinish = false;\n  if (opts.awaitWriteFinish === true) opts.awaitWriteFinish = {};\n  const awf = opts.awaitWriteFinish;\n  if (awf) {\n    if (!awf.stabilityThreshold) awf.stabilityThreshold = 2000;\n    if (!awf.pollInterval) awf.pollInterval = 100;\n    this._pendingWrites = new Map();\n  }\n  if (opts.ignored) opts.ignored = arrify(opts.ignored);\n\n  let readyCalls = 0;\n  this._emitReady = () => {\n    readyCalls++;\n    if (readyCalls >= this._readyCount) {\n      this._emitReady = EMPTY_FN;\n      this._readyEmitted = true;\n      // use process.nextTick to allow time for listener to be bound\n      process.nextTick(() => this.emit(EV_READY));\n    }\n  };\n  this._emitRaw = (...args) => this.emit(EV_RAW, ...args);\n  this._readyEmitted = false;\n  this.options = opts;\n\n  // Initialize with proper watcher.\n  if (opts.useFsEvents) {\n    this._fsEventsHandler = new FsEventsHandler(this);\n  } else {\n    this._nodeFsHandler = new NodeFsHandler(this);\n  }\n\n  // You’re frozen when your heart’s not open.\n  Object.freeze(opts);\n}\n\n// Public methods\n\n/**\n * Adds paths to be watched on an existing FSWatcher instance\n * @param {Path|Array<Path>} paths_\n * @param {String=} _origAdd private; for handling non-existent paths to be watched\n * @param {Boolean=} _internal private; indicates a non-user add\n * @returns {FSWatcher} for chaining\n */\nadd(paths_, _origAdd, _internal) {\n  const {cwd, disableGlobbing} = this.options;\n  this.closed = false;\n  let paths = unifyPaths(paths_);\n  if (cwd) {\n    paths = paths.map((path) => {\n      const absPath = getAbsolutePath(path, cwd);\n\n      // Check `path` instead of `absPath` because the cwd portion can't be a glob\n      if (disableGlobbing || !isGlob(path)) {\n        return absPath;\n      }\n      return normalizePath(absPath);\n    });\n  }\n\n  // set aside negated glob strings\n  paths = paths.filter((path) => {\n    if (path.startsWith(BANG)) {\n      this._ignoredPaths.add(path.slice(1));\n      return false;\n    }\n\n    // if a path is being added that was previously ignored, stop ignoring it\n    this._ignoredPaths.delete(path);\n    this._ignoredPaths.delete(path + SLASH_GLOBSTAR);\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n\n    return true;\n  });\n\n  if (this.options.useFsEvents && this._fsEventsHandler) {\n    if (!this._readyCount) this._readyCount = paths.length;\n    if (this.options.persistent) this._readyCount += paths.length;\n    paths.forEach((path) => this._fsEventsHandler._addToFsEvents(path));\n  } else {\n    if (!this._readyCount) this._readyCount = 0;\n    this._readyCount += paths.length;\n    Promise.all(\n      paths.map(async path => {\n        const res = await this._nodeFsHandler._addToNodeFs(path, !_internal, 0, 0, _origAdd);\n        if (res) this._emitReady();\n        return res;\n      })\n    ).then(results => {\n      if (this.closed) return;\n      results.filter(item => item).forEach(item => {\n        this.add(sysPath.dirname(item), sysPath.basename(_origAdd || item));\n      });\n    });\n  }\n\n  return this;\n}\n\n/**\n * Close watchers or start ignoring events from specified paths.\n * @param {Path|Array<Path>} paths_ - string or array of strings, file/directory paths and/or globs\n * @returns {FSWatcher} for chaining\n*/\nunwatch(paths_) {\n  if (this.closed) return this;\n  const paths = unifyPaths(paths_);\n  const {cwd} = this.options;\n\n  paths.forEach((path) => {\n    // convert to absolute path unless relative path already matches\n    if (!sysPath.isAbsolute(path) && !this._closers.has(path)) {\n      if (cwd) path = sysPath.join(cwd, path);\n      path = sysPath.resolve(path);\n    }\n\n    this._closePath(path);\n\n    this._ignoredPaths.add(path);\n    if (this._watched.has(path)) {\n      this._ignoredPaths.add(path + SLASH_GLOBSTAR);\n    }\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n  });\n\n  return this;\n}\n\n/**\n * Close watchers and remove all listeners from watched paths.\n * @returns {Promise<void>}.\n*/\nclose() {\n  if (this.closed) return this._closePromise;\n  this.closed = true;\n\n  // Memory management.\n  this.removeAllListeners();\n  const closers = [];\n  this._closers.forEach(closerList => closerList.forEach(closer => {\n    const promise = closer();\n    if (promise instanceof Promise) closers.push(promise);\n  }));\n  this._streams.forEach(stream => stream.destroy());\n  this._userIgnored = undefined;\n  this._readyCount = 0;\n  this._readyEmitted = false;\n  this._watched.forEach(dirent => dirent.dispose());\n  ['closers', 'watched', 'streams', 'symlinkPaths', 'throttled'].forEach(key => {\n    this[`_${key}`].clear();\n  });\n\n  this._closePromise = closers.length ? Promise.all(closers).then(() => undefined) : Promise.resolve();\n  return this._closePromise;\n}\n\n/**\n * Expose list of watched paths\n * @returns {Object} for chaining\n*/\ngetWatched() {\n  const watchList = {};\n  this._watched.forEach((entry, dir) => {\n    const key = this.options.cwd ? sysPath.relative(this.options.cwd, dir) : dir;\n    watchList[key || ONE_DOT] = entry.getChildren().sort();\n  });\n  return watchList;\n}\n\nemitWithAll(event, args) {\n  this.emit(...args);\n  if (event !== EV_ERROR) this.emit(EV_ALL, ...args);\n}\n\n// Common helpers\n// --------------\n\n/**\n * Normalize and emit events.\n * Calling _emit DOES NOT MEAN emit() would be called!\n * @param {EventName} event Type of event\n * @param {Path} path File or directory path\n * @param {*=} val1 arguments to be passed with event\n * @param {*=} val2\n * @param {*=} val3\n * @returns the error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\nasync _emit(event, path, val1, val2, val3) {\n  if (this.closed) return;\n\n  const opts = this.options;\n  if (isWindows) path = sysPath.normalize(path);\n  if (opts.cwd) path = sysPath.relative(opts.cwd, path);\n  /** @type Array<any> */\n  const args = [event, path];\n  if (val3 !== undefined) args.push(val1, val2, val3);\n  else if (val2 !== undefined) args.push(val1, val2);\n  else if (val1 !== undefined) args.push(val1);\n\n  const awf = opts.awaitWriteFinish;\n  let pw;\n  if (awf && (pw = this._pendingWrites.get(path))) {\n    pw.lastChange = new Date();\n    return this;\n  }\n\n  if (opts.atomic) {\n    if (event === EV_UNLINK) {\n      this._pendingUnlinks.set(path, args);\n      setTimeout(() => {\n        this._pendingUnlinks.forEach((entry, path) => {\n          this.emit(...entry);\n          this.emit(EV_ALL, ...entry);\n          this._pendingUnlinks.delete(path);\n        });\n      }, typeof opts.atomic === 'number' ? opts.atomic : 100);\n      return this;\n    }\n    if (event === EV_ADD && this._pendingUnlinks.has(path)) {\n      event = args[0] = EV_CHANGE;\n      this._pendingUnlinks.delete(path);\n    }\n  }\n\n  if (awf && (event === EV_ADD || event === EV_CHANGE) && this._readyEmitted) {\n    const awfEmit = (err, stats) => {\n      if (err) {\n        event = args[0] = EV_ERROR;\n        args[1] = err;\n        this.emitWithAll(event, args);\n      } else if (stats) {\n        // if stats doesn't exist the file must have been deleted\n        if (args.length > 2) {\n          args[2] = stats;\n        } else {\n          args.push(stats);\n        }\n        this.emitWithAll(event, args);\n      }\n    };\n\n    this._awaitWriteFinish(path, awf.stabilityThreshold, event, awfEmit);\n    return this;\n  }\n\n  if (event === EV_CHANGE) {\n    const isThrottled = !this._throttle(EV_CHANGE, path, 50);\n    if (isThrottled) return this;\n  }\n\n  if (opts.alwaysStat && val1 === undefined &&\n    (event === EV_ADD || event === EV_ADD_DIR || event === EV_CHANGE)\n  ) {\n    const fullPath = opts.cwd ? sysPath.join(opts.cwd, path) : path;\n    let stats;\n    try {\n      stats = await stat(fullPath);\n    } catch (err) {}\n    // Suppress event when fs_stat fails, to avoid sending undefined 'stat'\n    if (!stats || this.closed) return;\n    args.push(stats);\n  }\n  this.emitWithAll(event, args);\n\n  return this;\n}\n\n/**\n * Common handler for errors\n * @param {Error} error\n * @returns {Error|Boolean} The error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\n_handleError(error) {\n  const code = error && error.code;\n  if (error && code !== 'ENOENT' && code !== 'ENOTDIR' &&\n    (!this.options.ignorePermissionErrors || (code !== 'EPERM' && code !== 'EACCES'))\n  ) {\n    this.emit(EV_ERROR, error);\n  }\n  return error || this.closed;\n}\n\n/**\n * Helper utility for throttling\n * @param {ThrottleType} actionType type being throttled\n * @param {Path} path being acted upon\n * @param {Number} timeout duration of time to suppress duplicate actions\n * @returns {Object|false} tracking object or false if action should be suppressed\n */\n_throttle(actionType, path, timeout) {\n  if (!this._throttled.has(actionType)) {\n    this._throttled.set(actionType, new Map());\n  }\n\n  /** @type {Map<Path, Object>} */\n  const action = this._throttled.get(actionType);\n  /** @type {Object} */\n  const actionPath = action.get(path);\n\n  if (actionPath) {\n    actionPath.count++;\n    return false;\n  }\n\n  let timeoutObject;\n  const clear = () => {\n    const item = action.get(path);\n    const count = item ? item.count : 0;\n    action.delete(path);\n    clearTimeout(timeoutObject);\n    if (item) clearTimeout(item.timeoutObject);\n    return count;\n  };\n  timeoutObject = setTimeout(clear, timeout);\n  const thr = {timeoutObject, clear, count: 0};\n  action.set(path, thr);\n  return thr;\n}\n\n_incrReadyCount() {\n  return this._readyCount++;\n}\n\n/**\n * Awaits write operation to finish.\n * Polls a newly created file for size variations. When files size does not change for 'threshold' milliseconds calls callback.\n * @param {Path} path being acted upon\n * @param {Number} threshold Time in milliseconds a file size must be fixed before acknowledging write OP is finished\n * @param {EventName} event\n * @param {Function} awfEmit Callback to be called when ready for event to be emitted.\n */\n_awaitWriteFinish(path, threshold, event, awfEmit) {\n  let timeoutHandler;\n\n  let fullPath = path;\n  if (this.options.cwd && !sysPath.isAbsolute(path)) {\n    fullPath = sysPath.join(this.options.cwd, path);\n  }\n\n  const now = new Date();\n\n  const awaitWriteFinish = (prevStat) => {\n    fs.stat(fullPath, (err, curStat) => {\n      if (err || !this._pendingWrites.has(path)) {\n        if (err && err.code !== 'ENOENT') awfEmit(err);\n        return;\n      }\n\n      const now = Number(new Date());\n\n      if (prevStat && curStat.size !== prevStat.size) {\n        this._pendingWrites.get(path).lastChange = now;\n      }\n      const pw = this._pendingWrites.get(path);\n      const df = now - pw.lastChange;\n\n      if (df >= threshold) {\n        this._pendingWrites.delete(path);\n        awfEmit(undefined, curStat);\n      } else {\n        timeoutHandler = setTimeout(\n          awaitWriteFinish,\n          this.options.awaitWriteFinish.pollInterval,\n          curStat\n        );\n      }\n    });\n  };\n\n  if (!this._pendingWrites.has(path)) {\n    this._pendingWrites.set(path, {\n      lastChange: now,\n      cancelWait: () => {\n        this._pendingWrites.delete(path);\n        clearTimeout(timeoutHandler);\n        return event;\n      }\n    });\n    timeoutHandler = setTimeout(\n      awaitWriteFinish,\n      this.options.awaitWriteFinish.pollInterval\n    );\n  }\n}\n\n_getGlobIgnored() {\n  return [...this._ignoredPaths.values()];\n}\n\n/**\n * Determines whether user has asked to ignore this path.\n * @param {Path} path filepath or dir\n * @param {fs.Stats=} stats result of fs.stat\n * @returns {Boolean}\n */\n_isIgnored(path, stats) {\n  if (this.options.atomic && DOT_RE.test(path)) return true;\n  if (!this._userIgnored) {\n    const {cwd} = this.options;\n    const ign = this.options.ignored;\n\n    const ignored = ign && ign.map(normalizeIgnored(cwd));\n    const paths = arrify(ignored)\n      .filter((path) => typeof path === STRING_TYPE && !isGlob(path))\n      .map((path) => path + SLASH_GLOBSTAR);\n    const list = this._getGlobIgnored().map(normalizeIgnored(cwd)).concat(ignored, paths);\n    this._userIgnored = anymatch(list, undefined, ANYMATCH_OPTS);\n  }\n\n  return this._userIgnored([path, stats]);\n}\n\n_isntIgnored(path, stat) {\n  return !this._isIgnored(path, stat);\n}\n\n/**\n * Provides a set of common helpers and properties relating to symlink and glob handling.\n * @param {Path} path file, directory, or glob pattern being watched\n * @param {Number=} depth at any depth > 0, this isn't a glob\n * @returns {WatchHelper} object containing helpers for this path\n */\n_getWatchHelpers(path, depth) {\n  const watchPath = depth || this.options.disableGlobbing || !isGlob(path) ? path : globParent(path);\n  const follow = this.options.followSymlinks;\n\n  return new WatchHelper(path, watchPath, follow, this);\n}\n\n// Directory helpers\n// -----------------\n\n/**\n * Provides directory tracking objects\n * @param {String} directory path of the directory\n * @returns {DirEntry} the directory's tracking object\n */\n_getWatchedDir(directory) {\n  if (!this._boundRemove) this._boundRemove = this._remove.bind(this);\n  const dir = sysPath.resolve(directory);\n  if (!this._watched.has(dir)) this._watched.set(dir, new DirEntry(dir, this._boundRemove));\n  return this._watched.get(dir);\n}\n\n// File helpers\n// ------------\n\n/**\n * Check for read permissions.\n * Based on this answer on SO: https://stackoverflow.com/a/11781404/1358405\n * @param {fs.Stats} stats - object, result of fs_stat\n * @returns {Boolean} indicates whether the file can be read\n*/\n_hasReadPermissions(stats) {\n  if (this.options.ignorePermissionErrors) return true;\n\n  // stats.mode may be bigint\n  const md = stats && Number.parseInt(stats.mode, 10);\n  const st = md & 0o777;\n  const it = Number.parseInt(st.toString(8)[0], 10);\n  return Boolean(4 & it);\n}\n\n/**\n * Handles emitting unlink events for\n * files and directories, and via recursion, for\n * files and directories within directories that are unlinked\n * @param {String} directory within which the following item is located\n * @param {String} item      base path of item/directory\n * @returns {void}\n*/\n_remove(directory, item, isDirectory) {\n  // if what is being deleted is a directory, get that directory's paths\n  // for recursive deleting and cleaning of watched object\n  // if it is not a directory, nestedDirectoryChildren will be empty array\n  const path = sysPath.join(directory, item);\n  const fullPath = sysPath.resolve(path);\n  isDirectory = isDirectory != null\n    ? isDirectory\n    : this._watched.has(path) || this._watched.has(fullPath);\n\n  // prevent duplicate handling in case of arriving here nearly simultaneously\n  // via multiple paths (such as _handleFile and _handleDir)\n  if (!this._throttle('remove', path, 100)) return;\n\n  // if the only watched file is removed, watch for its return\n  if (!isDirectory && !this.options.useFsEvents && this._watched.size === 1) {\n    this.add(directory, item, true);\n  }\n\n  // This will create a new entry in the watched object in either case\n  // so we got to do the directory check beforehand\n  const wp = this._getWatchedDir(path);\n  const nestedDirectoryChildren = wp.getChildren();\n\n  // Recursively remove children directories / files.\n  nestedDirectoryChildren.forEach(nested => this._remove(path, nested));\n\n  // Check if item was on the watched list and remove it\n  const parent = this._getWatchedDir(directory);\n  const wasTracked = parent.has(item);\n  parent.remove(item);\n\n  // Fixes issue #1042 -> Relative paths were detected and added as symlinks\n  // (https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L612),\n  // but never removed from the map in case the path was deleted.\n  // This leads to an incorrect state if the path was recreated:\n  // https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L553\n  if (this._symlinkPaths.has(fullPath)) {\n    this._symlinkPaths.delete(fullPath);\n  }\n\n  // If we wait for this file to be fully written, cancel the wait.\n  let relPath = path;\n  if (this.options.cwd) relPath = sysPath.relative(this.options.cwd, path);\n  if (this.options.awaitWriteFinish && this._pendingWrites.has(relPath)) {\n    const event = this._pendingWrites.get(relPath).cancelWait();\n    if (event === EV_ADD) return;\n  }\n\n  // The Entry will either be a directory that just got removed\n  // or a bogus entry to a file, in either case we have to remove it\n  this._watched.delete(path);\n  this._watched.delete(fullPath);\n  const eventName = isDirectory ? EV_UNLINK_DIR : EV_UNLINK;\n  if (wasTracked && !this._isIgnored(path)) this._emit(eventName, path);\n\n  // Avoid conflicts if we later create another file with the same name\n  if (!this.options.useFsEvents) {\n    this._closePath(path);\n  }\n}\n\n/**\n * Closes all watchers for a path\n * @param {Path} path\n */\n_closePath(path) {\n  this._closeFile(path)\n  const dir = sysPath.dirname(path);\n  this._getWatchedDir(dir).remove(sysPath.basename(path));\n}\n\n/**\n * Closes only file-specific watchers\n * @param {Path} path\n */\n_closeFile(path) {\n  const closers = this._closers.get(path);\n  if (!closers) return;\n  closers.forEach(closer => closer());\n  this._closers.delete(path);\n}\n\n/**\n *\n * @param {Path} path\n * @param {Function} closer\n */\n_addPathCloser(path, closer) {\n  if (!closer) return;\n  let list = this._closers.get(path);\n  if (!list) {\n    list = [];\n    this._closers.set(path, list);\n  }\n  list.push(closer);\n}\n\n_readdirp(root, opts) {\n  if (this.closed) return;\n  const options = {type: EV_ALL, alwaysStat: true, lstat: true, ...opts};\n  let stream = readdirp(root, options);\n  this._streams.add(stream);\n  stream.once(STR_CLOSE, () => {\n    stream = undefined;\n  });\n  stream.once(STR_END, () => {\n    if (stream) {\n      this._streams.delete(stream);\n      stream = undefined;\n    }\n  });\n  return stream;\n}\n\n}\n\n// Export FSWatcher class\nexports.FSWatcher = FSWatcher;\n\n/**\n * Instantiates watcher with paths to be tracked.\n * @param {String|Array<String>} paths file/directory paths and/or globs\n * @param {Object=} options chokidar opts\n * @returns an instance of FSWatcher for chaining.\n */\nconst watch = (paths, options) => {\n  const watcher = new FSWatcher(options);\n  watcher.add(paths);\n  return watcher;\n};\n\nexports.watch = watch;\n","/**\n * 配置文件加载器\n */\n\nimport path from 'path'\nimport createJiti from 'jiti'\nimport { CONFIG_FILE_NAMES } from '../../constants/defaults'\nimport { exists, readFile } from '../file-system'\nimport type { BuilderConfig, ConfigFileInfo, ConfigFileType } from '../../types/config'\nimport { ErrorCode } from '../../constants/errors'\nimport { BuilderError } from '../error-handler'\n\n/**\n * 配置文件加载器类\n */\nexport class ConfigLoader {\n  /**\n   * 查找配置文件\n   */\n  async findConfigFile(startDir: string = process.cwd()): Promise<string | null> {\n    for (const fileName of CONFIG_FILE_NAMES) {\n      const configPath = path.resolve(startDir, fileName)\n      if (await exists(configPath)) {\n        return configPath\n      }\n    }\n    return null\n  }\n\n  /**\n   * 获取配置文件信息\n   */\n  async getConfigFileInfo(configPath: string): Promise<ConfigFileInfo> {\n    const fileExists = await exists(configPath)\n    const ext = path.extname(configPath)\n\n    let type: ConfigFileType\n    switch (ext) {\n      case '.ts':\n        type = 'ts'\n        break\n      case '.js':\n      case '.mjs':\n        type = 'js'\n        break\n      case '.json':\n        type = 'json'\n        break\n      default:\n        type = 'js'\n    }\n\n    const info: ConfigFileInfo = {\n      path: configPath,\n      type,\n      exists: fileExists\n    }\n\n    if (fileExists) {\n      try {\n        const stats = await import('fs').then(fs => fs.promises.stat(configPath))\n        info.mtime = stats.mtime\n        info.size = stats.size\n      } catch {\n        // 忽略获取文件信息失败的错误\n      }\n    }\n\n    return info\n  }\n\n  /**\n   * 加载配置文件\n   */\n  async loadConfigFile(configPath: string): Promise<BuilderConfig> {\n    const info = await this.getConfigFileInfo(configPath)\n\n    if (!info.exists) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_NOT_FOUND,\n        `配置文件不存在: ${configPath}`\n      )\n    }\n\n    try {\n      switch (info.type) {\n        case 'ts':\n        case 'js':\n          return this.loadJSConfig(configPath)\n        case 'json':\n          return this.loadJSONConfig(configPath)\n        default:\n          throw new BuilderError(\n            ErrorCode.CONFIG_PARSE_ERROR,\n            `不支持的配置文件格式: ${info.type}`\n          )\n      }\n    } catch (error) {\n      if (error instanceof BuilderError) {\n        throw error\n      }\n\n      throw new BuilderError(\n        ErrorCode.CONFIG_PARSE_ERROR,\n        `加载配置文件失败: ${configPath}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 加载 JavaScript/TypeScript 配置\n   */\n  private async loadJSConfig(configPath: string): Promise<BuilderConfig> {\n    try {\n      // 使用 jiti 动态导入，支持 TypeScript\n      const jiti = createJiti(import.meta.url, {\n        interopDefault: true,\n        esmResolve: true,\n        cache: false // 禁用缓存以支持配置热重载\n      })\n\n      const configModule = await jiti(configPath)\n\n      // 处理不同的导出格式\n      let config: BuilderConfig\n      if (typeof configModule === 'function') {\n        // 函数式配置\n        config = await configModule({\n          mode: process.env.NODE_ENV || 'production',\n          bundler: process.env.BUILDER_BUNDLER || 'rollup'\n        })\n      } else if (configModule && typeof configModule === 'object') {\n        // 对象配置\n        config = configModule\n      } else {\n        throw new Error('配置文件必须导出对象或函数')\n      }\n\n      return config\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_PARSE_ERROR,\n        `解析 JavaScript/TypeScript 配置文件失败: ${configPath}`,\n        {\n          cause: error as Error,\n          suggestion: '请检查配置文件语法是否正确'\n        }\n      )\n    }\n  }\n\n  /**\n   * 加载 JSON 配置\n   */\n  private async loadJSONConfig(configPath: string): Promise<BuilderConfig> {\n    try {\n      const content = await readFile(configPath, 'utf-8')\n\n      // 特殊处理 package.json\n      if (path.basename(configPath) === 'package.json') {\n        const pkg = JSON.parse(content)\n        return pkg.builder || {}\n      }\n\n      return JSON.parse(content)\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_PARSE_ERROR,\n        `解析 JSON 配置文件失败: ${configPath}`,\n        {\n          cause: error as Error,\n          suggestion: '请检查 JSON 格式是否正确'\n        }\n      )\n    }\n  }\n\n  /**\n   * 加载多个配置文件并合并\n   */\n  async loadMultipleConfigs(configPaths: string[]): Promise<BuilderConfig> {\n    const configs: BuilderConfig[] = []\n\n    for (const configPath of configPaths) {\n      try {\n        const config = await this.loadConfigFile(configPath)\n        configs.push(config)\n      } catch (error) {\n        // 如果是文件不存在，跳过；其他错误抛出\n        if (error instanceof BuilderError && error.code === ErrorCode.CONFIG_NOT_FOUND) {\n          continue\n        }\n        throw error\n      }\n    }\n\n    if (configs.length === 0) {\n      return { input: 'src/index.ts' }\n    }\n\n    // 合并配置（后面的配置覆盖前面的）\n    return configs.reduce((merged, config) => ({\n      ...merged,\n      ...config\n    }), { input: 'src/index.ts' })\n  }\n\n  /**\n   * 监听配置文件变化\n   */\n  async watchConfigFile(\n    configPath: string,\n    callback: (config: BuilderConfig) => void\n  ): Promise<() => void> {\n    const chokidar = await import('chokidar')\n\n    const watcher = chokidar.watch(configPath, {\n      ignoreInitial: true,\n      persistent: true\n    })\n\n    const handleChange = async () => {\n      try {\n        const config = await this.loadConfigFile(configPath)\n        callback(config)\n      } catch (error) {\n        console.error('重新加载配置文件失败:', error)\n      }\n    }\n\n    watcher.on('change', handleChange)\n    watcher.on('add', handleChange)\n\n    // 返回清理函数\n    return () => {\n      watcher.close()\n    }\n  }\n\n  /**\n   * 获取所有可能的配置文件路径\n   */\n  getAllConfigPaths(baseDir: string = process.cwd()): string[] {\n    return CONFIG_FILE_NAMES.map(name => path.resolve(baseDir, name))\n  }\n\n  /**\n   * 检查配置文件是否存在\n   */\n  async hasConfigFile(baseDir: string = process.cwd()): Promise<boolean> {\n    const configPath = await this.findConfigFile(baseDir)\n    return configPath !== null\n  }\n\n  /**\n   * 获取配置文件的优先级\n   */\n  getConfigFilePriority(configPath: string): number {\n    const fileName = path.basename(configPath)\n    const index = CONFIG_FILE_NAMES.indexOf(fileName as any)\n    return index >= 0 ? index : CONFIG_FILE_NAMES.length\n  }\n\n  /**\n   * 选择最高优先级的配置文件\n   */\n  async selectBestConfigFile(baseDir: string = process.cwd()): Promise<string | null> {\n    const allPaths = this.getAllConfigPaths(baseDir)\n    const existingPaths: Array<{ path: string; priority: number }> = []\n\n    for (const configPath of allPaths) {\n      if (await exists(configPath)) {\n        existingPaths.push({\n          path: configPath,\n          priority: this.getConfigFilePriority(configPath)\n        })\n      }\n    }\n\n    if (existingPaths.length === 0) {\n      return null\n    }\n\n    // 按优先级排序，返回优先级最高的\n    existingPaths.sort((a, b) => a.priority - b.priority)\n    return existingPaths[0].path\n  }\n}\n\n/**\n * 默认配置加载器实例\n */\nexport const configLoader = new ConfigLoader()\n\n/**\n * 便捷函数：查找配置文件\n */\nexport function findConfigFile(startDir?: string): Promise<string | null> {\n  return configLoader.findConfigFile(startDir)\n}\n\n/**\n * 便捷函数：加载配置文件\n */\nexport function loadConfigFile(configPath: string): Promise<BuilderConfig> {\n  return configLoader.loadConfigFile(configPath)\n}\n\n/**\n * 便捷函数：定义配置\n */\nexport function defineConfig(config: BuilderConfig | ((context: any) => BuilderConfig)): BuilderConfig | ((context: any) => BuilderConfig) {\n  return config\n}\n","/**\n * 日志系统工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport chalk from 'chalk'\nimport type { LogLevel } from '../types/common'\n\n/**\n * 日志级别枚举\n */\nexport enum LogLevelEnum {\n  SILENT = 0,\n  ERROR = 1,\n  WARN = 2,\n  INFO = 3,\n  DEBUG = 4,\n  VERBOSE = 5\n}\n\n/**\n * 日志级别映射\n */\nconst LOG_LEVEL_MAP: Record<LogLevel, LogLevelEnum> = {\n  silent: LogLevelEnum.SILENT,\n  error: LogLevelEnum.ERROR,\n  warn: LogLevelEnum.WARN,\n  info: LogLevelEnum.INFO,\n  debug: LogLevelEnum.DEBUG,\n  verbose: LogLevelEnum.VERBOSE\n}\n\n/**\n * 日志选项\n */\nexport interface LoggerOptions {\n  /** 日志级别 */\n  level?: LogLevel\n  /** 是否启用颜色 */\n  colors?: boolean\n  /** 是否显示时间戳 */\n  timestamp?: boolean\n  /** 日志前缀 */\n  prefix?: string\n  /** 是否静默模式 */\n  silent?: boolean\n}\n\n/**\n * 日志记录器类\n */\nexport class Logger {\n  private level: LogLevelEnum\n  private colors: boolean\n  private timestamp: boolean\n  private prefix: string\n  private silent: boolean\n\n  constructor(options: LoggerOptions = {}) {\n    this.level = LOG_LEVEL_MAP[options.level || 'info']\n    this.colors = options.colors ?? true\n    this.timestamp = options.timestamp ?? false\n    this.prefix = options.prefix || '@ldesign/builder'\n    this.silent = options.silent ?? false\n  }\n\n  /**\n   * 设置日志级别\n   */\n  setLevel(level: LogLevel): void {\n    this.level = LOG_LEVEL_MAP[level]\n  }\n\n  /**\n   * 获取当前日志级别\n   */\n  getLevel(): LogLevel {\n    const entries = Object.entries(LOG_LEVEL_MAP)\n    const entry = entries.find(([, value]) => value === this.level)\n    return (entry?.[0] as LogLevel) || 'info'\n  }\n\n  /**\n   * 设置静默模式\n   */\n  setSilent(silent: boolean): void {\n    this.silent = silent\n  }\n\n  /**\n   * 错误日志\n   */\n  error(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.ERROR)) {\n      this.log('ERROR', message, chalk.red, ...args)\n    }\n  }\n\n  /**\n   * 警告日志\n   */\n  warn(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.WARN)) {\n      this.log('WARN', message, chalk.yellow, ...args)\n    }\n  }\n\n  /**\n   * 信息日志\n   */\n  info(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('INFO', message, chalk.blue, ...args)\n    }\n  }\n\n  /**\n   * 调试日志\n   */\n  debug(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.DEBUG)) {\n      this.log('DEBUG', message, chalk.gray, ...args)\n    }\n  }\n\n  /**\n   * 详细日志\n   */\n  verbose(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.VERBOSE)) {\n      this.log('VERBOSE', message, chalk.gray, ...args)\n    }\n  }\n\n  /**\n   * 成功日志\n   */\n  success(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('SUCCESS', message, chalk.green, ...args)\n    }\n  }\n\n  /**\n   * 开始日志（带缩进）\n   */\n  start(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('START', `▶ ${message}`, chalk.cyan, ...args)\n    }\n  }\n\n  /**\n   * 完成日志（带缩进）\n   */\n  complete(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('COMPLETE', `✓ ${message}`, chalk.green, ...args)\n    }\n  }\n\n  /**\n   * 失败日志（带缩进）\n   */\n  fail(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.ERROR)) {\n      this.log('FAIL', `✗ ${message}`, chalk.red, ...args)\n    }\n  }\n\n  /**\n   * 进度日志\n   */\n  progress(current: number, total: number, message?: string): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      const percent = Math.round((current / total) * 100)\n      const progressBar = this.createProgressBar(percent)\n      const progressMessage = message ? ` ${message}` : ''\n      this.log('PROGRESS', `${progressBar} ${percent}%${progressMessage}`, chalk.cyan)\n    }\n  }\n\n  /**\n   * 表格日志\n   */\n  table(data: Record<string, any>[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO) && data.length > 0) {\n      console.table(data)\n    }\n  }\n\n  /**\n   * 分组开始\n   */\n  group(label: string): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.group(this.formatMessage('GROUP', label, chalk.cyan))\n    }\n  }\n\n  /**\n   * 分组结束\n   */\n  groupEnd(): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.groupEnd()\n    }\n  }\n\n  /**\n   * 清屏\n   */\n  clear(): void {\n    if (!this.silent) {\n      console.clear()\n    }\n  }\n\n  /**\n   * 换行\n   */\n  newLine(): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.log()\n    }\n  }\n\n  /**\n   * 分隔线\n   */\n  divider(char: string = '-', length: number = 50): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.log(chalk.gray(char.repeat(length)))\n    }\n  }\n\n  /**\n   * 创建子日志记录器\n   */\n  child(prefix: string, options: Partial<LoggerOptions> = {}): Logger {\n    return new Logger({\n      level: this.getLevel(),\n      colors: this.colors,\n      timestamp: this.timestamp,\n      prefix: `${this.prefix}:${prefix}`,\n      silent: this.silent,\n      ...options\n    })\n  }\n\n  /**\n   * 判断是否应该记录日志\n   */\n  private shouldLog(level: LogLevelEnum): boolean {\n    return !this.silent && this.level >= level\n  }\n\n  /**\n   * 记录日志\n   */\n  private log(type: string, message: string, colorFn: (str: string) => string, ...args: any[]): void {\n    const formattedMessage = this.formatMessage(type, message, colorFn)\n    console.log(formattedMessage, ...args)\n  }\n\n  /**\n   * 格式化消息\n   */\n  private formatMessage(type: string, message: string, colorFn: (str: string) => string): string {\n    let formatted = ''\n\n    // 添加时间戳\n    if (this.timestamp) {\n      const timestamp = new Date().toISOString()\n      formatted += chalk.gray(`[${timestamp}] `)\n    }\n\n    // 添加前缀\n    if (this.prefix) {\n      formatted += chalk.gray(`[${this.prefix}] `)\n    }\n\n    // 添加类型\n    if (this.colors) {\n      formatted += colorFn(`[${type}] `)\n    } else {\n      formatted += `[${type}] `\n    }\n\n    // 添加消息\n    if (this.colors) {\n      formatted += colorFn(message)\n    } else {\n      formatted += message\n    }\n\n    return formatted\n  }\n\n  /**\n   * 创建进度条\n   */\n  private createProgressBar(percent: number, width: number = 20): string {\n    const filled = Math.round((percent / 100) * width)\n    const empty = width - filled\n    const bar = '█'.repeat(filled) + '░'.repeat(empty)\n    return this.colors ? chalk.cyan(bar) : bar\n  }\n}\n\n/**\n * 默认日志记录器实例\n */\nexport const logger = new Logger()\n\n/**\n * 创建日志记录器\n */\nexport function createLogger(options: LoggerOptions = {}): Logger {\n  return new Logger(options)\n}\n\n/**\n * 设置全局日志级别\n */\nexport function setLogLevel(level: LogLevel): void {\n  logger.setLevel(level)\n}\n\n/**\n * 设置全局静默模式\n */\nexport function setSilent(silent: boolean): void {\n  logger.setSilent(silent)\n}\n","/**\n * 配置管理器\n * \n * 负责配置文件的加载、验证、合并和监听\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport type {\n  BuilderConfig,\n  ConfigManagerOptions,\n  ConfigLoadOptions,\n  ConfigMergeOptions,\n  ConfigValidationOptions\n} from '../types/config'\nimport type { ValidationResult } from '../types/common'\nimport { configLoader } from '../utils/config/config-loader'\nimport { DEFAULT_BUILDER_CONFIG } from '../constants/defaults'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler, BuilderError } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 配置管理器类\n * \n * 提供配置文件的完整生命周期管理\n */\nexport class ConfigManager extends EventEmitter {\n  private logger: Logger\n  private errorHandler: ErrorHandler\n  private options: ConfigManagerOptions\n  private currentConfig?: BuilderConfig\n  private configWatcher?: () => void\n\n  constructor(options: ConfigManagerOptions = {}) {\n    super()\n\n    this.options = {\n      validateOnLoad: true,\n      freezeConfig: false,\n      ...options\n    }\n\n    this.logger = options.logger || new Logger()\n    this.errorHandler = new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 加载配置文件\n   */\n  async loadConfig(options: ConfigLoadOptions = {}): Promise<BuilderConfig> {\n    try {\n      const configPath = options.configFile || await this.findConfigFile()\n\n      let config: Partial<BuilderConfig> = {}\n\n      if (configPath) {\n        this.logger.info(`加载配置文件: ${configPath}`)\n        config = await configLoader.loadConfigFile(configPath)\n      } else {\n        this.logger.info('未找到配置文件，使用默认配置')\n        config = {}\n      }\n\n      // 合并默认配置\n      const mergedConfig = this.mergeConfigs(DEFAULT_BUILDER_CONFIG, config as BuilderConfig)\n\n      // 应用环境特定配置\n      if (options.applyEnvConfig && mergedConfig.env) {\n        const envConfig = this.getEnvConfig(mergedConfig)\n        if (envConfig) {\n          Object.assign(mergedConfig, envConfig)\n        }\n      }\n\n      // 验证配置\n      if (options.validate !== false && this.options.validateOnLoad) {\n        const validation = this.validateConfig(mergedConfig)\n        if (!validation.valid) {\n          throw new BuilderError(\n            ErrorCode.CONFIG_VALIDATION_ERROR,\n            `配置验证失败: ${validation.errors.join(', ')}`\n          )\n        }\n      }\n\n      // 冻结配置（如果启用）\n      if (this.options.freezeConfig) {\n        Object.freeze(mergedConfig)\n      }\n\n      this.currentConfig = mergedConfig\n\n      // 启动配置文件监听\n      if (this.options.watch && configPath) {\n        await this.startWatching(configPath)\n      }\n\n      this.emit('config:loaded', mergedConfig, configPath)\n\n      return mergedConfig\n\n    } catch (error) {\n      this.errorHandler.handle(error as Error, 'loadConfig')\n      throw error\n    }\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig, _options: ConfigValidationOptions = {}): ValidationResult {\n    const result: ValidationResult = {\n      valid: true,\n      errors: [],\n      warnings: []\n    }\n\n    try {\n      // 基础验证\n      if (!config.input) {\n        result.errors.push('缺少入口文件配置 (input)')\n      }\n\n      // 输出配置验证\n      if (config.output) {\n        if (!config.output.dir && !config.output.file) {\n          result.errors.push('输出配置必须指定 dir 或 file')\n        }\n      }\n\n      // 打包器验证\n      if (config.bundler && !['rollup', 'rolldown'].includes(config.bundler)) {\n        result.errors.push(`不支持的打包器: ${config.bundler}`)\n      }\n\n      // 格式验证\n      if (config.output?.format) {\n        const formats = Array.isArray(config.output.format)\n          ? config.output.format\n          : [config.output.format]\n\n        const validFormats = ['esm', 'cjs', 'umd', 'iife', 'css']\n        for (const format of formats) {\n          if (!validFormats.includes(format)) {\n            result.errors.push(`不支持的输出格式: ${format}`)\n          }\n        }\n      }\n\n      // 设置验证结果\n      result.valid = result.errors.length === 0\n\n    } catch (error) {\n      result.valid = false\n      result.errors.push(`配置验证异常: ${(error as Error).message}`)\n    }\n\n    return result\n  }\n\n  /**\n   * 合并配置\n   */\n  mergeConfigs(base: BuilderConfig, override: BuilderConfig, options: ConfigMergeOptions = {}): BuilderConfig {\n    const { deep = true, arrayMergeStrategy = 'replace' } = options\n\n    if (!deep) {\n      return { ...base, ...override }\n    }\n\n    const result = { ...base }\n\n    for (const [key, value] of Object.entries(override)) {\n      if (value === undefined) {\n        continue\n      }\n\n      if (!(key in result)) {\n        (result as any)[key] = value\n        continue\n      }\n\n      const baseValue = (result as any)[key]\n\n      if (Array.isArray(value) && Array.isArray(baseValue)) {\n        switch (arrayMergeStrategy) {\n          case 'concat':\n            (result as any)[key] = [...baseValue, ...value]\n            break\n          case 'unique':\n            (result as any)[key] = [...new Set([...baseValue, ...value])]\n            break\n          case 'replace':\n          default:\n            (result as any)[key] = value\n            break\n        }\n      } else if (\n        typeof value === 'object' &&\n        value !== null &&\n        typeof baseValue === 'object' &&\n        baseValue !== null\n      ) {\n        (result as any)[key] = this.mergeConfigs(baseValue, value, options)\n      } else {\n        (result as any)[key] = value\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * 获取当前配置\n   */\n  getCurrentConfig(): BuilderConfig | undefined {\n    return this.currentConfig\n  }\n\n  /**\n   * 查找配置文件\n   */\n  private async findConfigFile(): Promise<string | null> {\n    return configLoader.findConfigFile()\n  }\n\n  /**\n   * 获取环境特定配置\n   */\n  private getEnvConfig(config: BuilderConfig): Partial<BuilderConfig> | undefined {\n    const env = process.env.NODE_ENV || config.mode || 'production'\n    return config.env?.[env]\n  }\n\n  /**\n   * 启动配置文件监听\n   */\n  private async startWatching(configPath: string): Promise<void> {\n    if (this.configWatcher) {\n      this.configWatcher()\n    }\n\n    this.configWatcher = await configLoader.watchConfigFile(configPath, (newConfig) => {\n      this.logger.info('配置文件已更改，重新加载...')\n\n      try {\n        const mergedConfig = this.mergeConfigs(DEFAULT_BUILDER_CONFIG, newConfig)\n        this.currentConfig = mergedConfig\n\n        this.emit('config:change', mergedConfig, configPath)\n        this.logger.success('配置重新加载完成')\n      } catch (error) {\n        this.logger.error('配置重新加载失败:', error)\n        this.emit('config:error', error)\n      }\n    })\n  }\n\n  /**\n   * 停止监听\n   */\n  async dispose(): Promise<void> {\n    if (this.configWatcher) {\n      this.configWatcher()\n      this.configWatcher = undefined\n    }\n\n    this.removeAllListeners()\n  }\n}\n","/**\n * TypeScript 策略\n *\n * 为 TypeScript 库提供完整的构建策略，包括：\n * - TypeScript 编译和类型检查\n * - 声明文件生成\n * - 多格式输出支持\n * - Tree Shaking 优化\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\n/**\n * TypeScript 库构建策略\n */\nexport class TypeScriptStrategy implements ILibraryStrategy {\n  readonly name = 'typescript'\n  readonly supportedTypes: LibraryType[] = [LibraryType.TYPESCRIPT]\n  readonly priority = 10\n\n  /**\n   * 应用 TypeScript 策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    const outputConfig = this.buildOutputConfig(config)\n\n    // 计算入口：若用户未指定，则默认将 src 目录下的所有源码文件作为多入口\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: outputConfig,\n      plugins: this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.TYPESCRIPT\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.TYPESCRIPT,\n      output: {\n        format: ['esm', 'cjs', 'umd'],\n        sourcemap: true\n      },\n      typescript: {\n        declaration: true,\n        // declarationDir 将由 RollupAdapter 动态设置\n        target: 'ES2020',\n        module: 'ESNext',\n        strict: true,\n        skipLibCheck: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      }\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // TypeScript 插件\n    plugins.push({\n      name: '@rollup/plugin-typescript',\n      options: this.getTypeScriptOptions(config)\n    })\n\n    // Node 解析插件（优先浏览器分支，避免引入 Node 内置依赖）\n    plugins.push({\n      name: '@rollup/plugin-node-resolve',\n      options: {\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: '@rollup/plugin-commonjs',\n      options: {}\n    })\n\n    // JSON 插件（允许导入 JSON 文件）\n    plugins.push({\n      name: '@rollup/plugin-json',\n      options: {}\n    })\n\n    // 代码压缩插件（生产模式）\n    if (config.mode === 'production' && config.performance?.minify !== false) {\n      plugins.push({\n        name: '@rollup/plugin-terser',\n        options: {\n          compress: {\n            drop_console: true,\n            drop_debugger: true\n          },\n          format: {\n            comments: false\n          }\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      errors.push('TypeScript 策略需要指定入口文件')\n    } else if (typeof config.input === 'string') {\n      if (!config.input.endsWith('.ts') && !config.input.endsWith('.tsx')) {\n        warnings.push('入口文件不是 TypeScript 文件，建议使用 .ts 或 .tsx 扩展名')\n      }\n    }\n\n    // 检查输出配置\n    if (!config.output?.format) {\n      suggestions.push('建议指定输出格式，如 [\"esm\", \"cjs\"]')\n    }\n\n    // 检查 TypeScript 配置\n    if (!config.typescript?.declaration) {\n      suggestions.push('建议启用类型声明文件生成 (declaration: true)')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format) ? outputConfig.format : ['esm', 'cjs', 'umd']\n\n    // \u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\n    // \u0000d\u0000e\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\n    return {\n\n      format: formats, // \u0000d\u0000e\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\n      sourcemap: outputConfig.sourcemap !== false,\n      exports: 'auto',\n      name: outputConfig.name,\n      globals: outputConfig.globals || {}\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private buildPlugins(config: BuilderConfig): any[] {\n    const plugins: any[] = []\n\n    // TypeScript 插件\n    plugins.push({\n      name: 'typescript',\n      plugin: async () => {\n        const typescript = await import('@rollup/plugin-typescript')\n        return typescript.default({\n          ...this.getTypeScriptOptions(config)\n        })\n      }\n    })\n\n    // Node 解析插件（优先浏览器分支）\n    plugins.push({\n      name: 'node-resolve',\n      plugin: async () => {\n        const nodeResolve = await import('@rollup/plugin-node-resolve')\n        return nodeResolve.nodeResolve({\n          preferBuiltins: false,\n          browser: true,\n          extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n        })\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: 'commonjs',\n      plugin: async () => {\n        const commonjs = await import('@rollup/plugin-commonjs')\n        return commonjs.default()\n      }\n    })\n\n    // JSON 插件\n    plugins.push({\n      name: 'json',\n      plugin: async () => {\n        const json = await import('@rollup/plugin-json')\n        return json.default()\n      }\n    })\n\n    // 代码压缩插件（生产模式）\n    if (config.mode === 'production' && config.performance?.minify !== false) {\n      plugins.push({\n        name: 'terser',\n        plugin: async () => {\n          const terser = await import('@rollup/plugin-terser')\n          return terser.default({\n            compress: {\n              drop_console: true,\n              drop_debugger: true\n            },\n            format: {\n              comments: false\n            }\n          })\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 获取 TypeScript 选项\n   */\n  private getTypeScriptOptions(config: BuilderConfig): any {\n    const tsConfig = config.typescript || {}\n    const options: any = {\n      target: tsConfig.target || 'ES2020',\n      module: tsConfig.module || 'ESNext',\n      strict: tsConfig.strict !== false,\n      skipLibCheck: tsConfig.skipLibCheck !== false,\n      esModuleInterop: true,\n      allowSyntheticDefaultImports: true,\n      moduleResolution: 'node',\n      resolveJsonModule: true,\n      isolatedModules: true,\n      noEmitOnError: false,\n      // 显式覆盖，避免上游 tsconfig 开启导致 TS5096\n      allowImportingTsExtensions: false,\n      exclude: ['**/*.test.ts', '**/*.spec.ts', 'node_modules/**']\n    }\n\n    // 只有在明确启用声明文件时才添加相关选项\n    if (tsConfig.declaration === true) {\n      options.declaration = true\n      // declarationDir 将由 RollupAdapter 动态设置，这里不设置固定值\n      if (tsConfig.declarationDir) {\n        options.declarationDir = tsConfig.declarationDir\n      }\n      if (tsConfig.declarationMap === true) {\n        options.declarationMap = true\n      }\n    }\n\n    return options\n  }\n\n\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n}\n","/**\n * 样式库构建策略\n *\n * 为样式库提供完整的构建策略，包括：\n * - Less/Sass 预处理器支持\n * - CSS 压缩和优化\n * - 自动添加浏览器前缀\n * - CSS 变量和主题支持\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\n/**\n * 样式库构建策略\n */\nexport class StyleStrategy implements ILibraryStrategy {\n  readonly name = 'style'\n  readonly supportedTypes: LibraryType[] = [LibraryType.STYLE]\n  readonly priority = 8\n\n  /**\n   * 应用样式策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: false, // CSS 不需要 Tree Shaking\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.STYLE\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.STYLE,\n      output: {\n        format: ['esm'], // 使用 ESM 格式，PostCSS 插件会提取 CSS\n        sourcemap: true\n      },\n      style: {\n        extract: true,\n        minimize: true,\n        autoprefixer: true,\n        modules: false,\n        preprocessor: {\n          less: {\n            enabled: true,\n            options: {\n              javascriptEnabled: true\n            }\n          },\n          sass: {\n            enabled: false\n          }\n        },\n        browserslist: [\n          '> 1%',\n          'last 2 versions',\n          'not dead'\n        ]\n      },\n      performance: {\n        treeshaking: false,\n        minify: true\n      }\n    }\n  }\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // PostCSS 插件\n    plugins.push({\n      name: 'postcss',\n      options: this.getPostCSSOptions(config)\n    })\n\n    // Less 插件\n    if (this.shouldUseLess(config)) {\n      plugins.push({\n        name: 'less',\n        options: this.getLessOptions(config)\n      })\n    }\n\n    // Sass 插件\n    if (this.shouldUseSass(config)) {\n      plugins.push({\n        name: 'sass',\n        options: this.getSassOptions(config)\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      errors.push('样式策略需要指定入口文件')\n    } else if (typeof config.input === 'string') {\n      const supportedExtensions = ['.css', '.less', '.scss', '.sass', '.styl']\n      const hasValidExtension = supportedExtensions.some(ext =>\n        config.input.toString().endsWith(ext)\n      )\n\n      if (!hasValidExtension) {\n        warnings.push('入口文件不是样式文件，建议使用 .css, .less, .scss 等扩展名')\n      }\n    }\n\n    // 检查输出配置\n    if (config.output?.format && !config.output.format.includes('css')) {\n      suggestions.push('样式库建议输出 CSS 格式')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      assetFileNames: '[name][extname]' // 确保 CSS 文件使用正确的名称\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private buildPlugins(config: BuilderConfig): any[] {\n    const plugins: any[] = []\n\n    // PostCSS 插件（用于处理 CSS）\n    plugins.push({\n      name: 'postcss',\n      plugin: async () => {\n        const postcss = await import('rollup-plugin-postcss')\n        const postCSSPlugins = await this.getPostCSSPlugins(config)\n        return postcss.default({\n          extract: true,\n          minimize: config.performance?.minify !== false,\n          sourceMap: config.output?.sourcemap !== false,\n          plugins: postCSSPlugins\n        })\n      }\n    })\n\n    return plugins\n  }\n\n  /**\n   * 获取 PostCSS 插件\n   */\n  private async getPostCSSPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    // Autoprefixer\n    if (config.style?.autoprefixer !== false) {\n      try {\n        const autoprefixer = await import('autoprefixer')\n        plugins.push(autoprefixer.default({\n          overrideBrowserslist: config.style?.browserslist || [\n            '> 1%',\n            'last 2 versions',\n            'not dead'\n          ]\n        }))\n      } catch (error) {\n        console.warn('Autoprefixer 未安装，跳过自动前缀功能')\n      }\n    }\n\n    return plugins\n  }\n\n  /**\n   * 获取 PostCSS 选项\n   */\n  private async getPostCSSOptions(config: BuilderConfig): Promise<any> {\n    return {\n      extract: config.style?.extract !== false,\n      minimize: config.style?.minimize !== false,\n      sourceMap: config.output?.sourcemap !== false,\n      modules: config.style?.modules || false,\n      plugins: await this.getPostCSSPlugins(config)\n    }\n  }\n\n  /**\n   * 获取 Less 选项\n   */\n  private getLessOptions(config: BuilderConfig): any {\n    const preprocessor = config.style?.preprocessor\n    const lessConfig = typeof preprocessor === 'object' ? preprocessor.less : undefined\n\n    return {\n      javascriptEnabled: lessConfig?.options?.javascriptEnabled !== false,\n      modifyVars: lessConfig?.options?.modifyVars || {},\n      ...lessConfig?.options\n    }\n  }\n\n  /**\n   * 获取 Sass 选项\n   */\n  private getSassOptions(config: BuilderConfig): any {\n    const preprocessor = config.style?.preprocessor\n    const sassConfig = typeof preprocessor === 'object' ? preprocessor.sass : undefined\n\n    return {\n      includePaths: ['node_modules'],\n      ...sassConfig?.options\n    }\n  }\n\n  /**\n   * 检查是否应该使用 Less\n   */\n  private shouldUseLess(config: BuilderConfig): boolean {\n    const preprocessor = config.style?.preprocessor\n\n    if (typeof preprocessor === 'object' && preprocessor.less?.enabled === false) {\n      return false\n    }\n\n    // 如果入口文件是 .less，自动启用\n    if (typeof config.input === 'string' && config.input.endsWith('.less')) {\n      return true\n    }\n\n    return typeof preprocessor === 'object' && preprocessor.less?.enabled === true\n  }\n\n  /**\n   * 检查是否应该使用 Sass\n   */\n  private shouldUseSass(config: BuilderConfig): boolean {\n    const preprocessor = config.style?.preprocessor\n\n    if (typeof preprocessor === 'object' && preprocessor.sass?.enabled === false) {\n      return false\n    }\n\n    // 如果入口文件是 .scss 或 .sass，自动启用\n    if (typeof config.input === 'string') {\n      if (config.input.endsWith('.scss') || config.input.endsWith('.sass')) {\n        return true\n      }\n    }\n\n    return typeof preprocessor === 'object' && preprocessor.sass?.enabled === true\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'EMPTY_BUNDLE') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有样式文件作为入口\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{css,less,scss,sass,styl}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.less'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n}\n","/**\n * Vue 3 组件库构建策略\n *\n * 为 Vue 3 组件库提供完整的构建策略，包括：\n * - Vue SFC 单文件组件编译\n * - TypeScript 支持\n * - 样式提取和处理\n * - 组件类型定义生成\n * - 插件式安装支持\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\n/**\n * Vue 3 组件库构建策略\n */\nexport class Vue3Strategy implements ILibraryStrategy {\n  readonly name = 'vue3'\n  readonly supportedTypes: LibraryType[] = [LibraryType.VUE3]\n  readonly priority = 10\n\n  /**\n   * 应用 Vue 3 策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: await this.buildPlugins(config),\n      external: this.buildExternals(config),\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.VUE3\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.VUE3,\n      output: {\n        format: ['esm', 'cjs'],\n        sourcemap: true\n      },\n      vue: {\n        version: 3,\n        jsx: {\n          enabled: true\n        },\n        template: {\n          precompile: true\n        }\n      },\n      typescript: {\n        declaration: true,\n        declarationDir: 'dist',\n        target: 'ES2020',\n        module: 'ESNext',\n        strict: true\n      },\n      style: {\n        extract: true,\n        minimize: true,\n        autoprefixer: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      },\n      external: ['vue']\n    }\n  }\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // Vue SFC 插件\n    plugins.push({\n      name: 'rollup-plugin-vue',\n      options: this.getVueOptions(config)\n    })\n\n    // TypeScript 插件\n    plugins.push({\n      name: '@rollup/plugin-typescript',\n      options: this.getTypeScriptOptions(config)\n    })\n\n    // Node 解析插件\n    plugins.push({\n      name: '@rollup/plugin-node-resolve',\n      options: {\n        preferBuiltins: false,\n        browser: true\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: '@rollup/plugin-commonjs',\n      options: {}\n    })\n\n    // 样式处理插件\n    if (config.style?.extract !== false) {\n      plugins.push({\n        name: 'rollup-plugin-postcss',\n        options: this.getPostCSSOptions(config)\n      })\n    }\n\n    // 代码压缩插件（生产模式）\n    if (config.mode === 'production' && config.performance?.minify !== false) {\n      plugins.push({\n        name: '@rollup/plugin-terser',\n        options: {\n          compress: {\n            drop_console: true,\n            drop_debugger: true\n          },\n          format: {\n            comments: false\n          }\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      errors.push('Vue 3 策略需要指定入口文件')\n    }\n\n    // 检查 Vue 版本\n    if (config.vue?.version && config.vue.version !== 3) {\n      warnings.push('当前策略针对 Vue 3 优化，建议使用 Vue 3')\n    }\n\n    // 检查外部依赖\n    if (Array.isArray(config.external) && !config.external.includes('vue')) {\n      suggestions.push('建议将 Vue 添加到外部依赖中以减少包体积')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      exports: 'named',\n      globals: {\n        vue: 'Vue',\n        ...outputConfig.globals\n      }\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    try {\n      // Node 解析插件（第一个）\n      const nodeResolve = await import('@rollup/plugin-node-resolve')\n      plugins.push(nodeResolve.default({\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx', '.vue']\n      }))\n\n      // Vue SFC 插件（使用 unplugin-vue，兼容 Rollup）\n      const { default: VuePlugin } = await import('unplugin-vue/rollup')\n      plugins.push(VuePlugin(this.getVueOptions(config)))\n\n      // 先用 TypeScript 插件处理纯 .ts 入口与模块（排除 Vue 虚拟模块）\n      const { default: tsPlugin } = await import('@rollup/plugin-typescript')\n      plugins.push({\n        name: 'typescript',\n        plugin: async () => tsPlugin({\n          ...this.getTypeScriptOptions(config),\n          include: ['src/**/*.ts', 'src/**/*.tsx'],\n          exclude: ['**/*.vue', '**/*.vue?*', 'node_modules/**'],\n          // 避免 @rollup/plugin-typescript 在缺失 rollup 顶层 sourcemap 时报错\n          sourceMap: config.output?.sourcemap !== false\n        } as any)\n      })\n\n      // 再用 Babel 去掉 TS 注解（特别是 Vue 虚拟模块）\n      const { default: babel } = await import('@rollup/plugin-babel')\n      plugins.push(babel({\n        babelrc: false,\n        configFile: false,\n        babelHelpers: 'bundled',\n        extensions: ['.ts', '.tsx', '.js', '.jsx'],\n        presets: [\n          ['@babel/preset-typescript', { allowDeclareFields: true }]\n        ],\n        // 仅处理脚本相关文件与 vue 的 script 虚拟模块\n        include: [\n          /\\.(ts|tsx|js|jsx)$/,\n          /\\?vue&type=script/,\n        ],\n        exclude: [\n          /\\?vue&type=style/,\n          /\\?vue&type=template/,\n          /\\.(css|less|scss|sass)$/\n        ]\n      }))\n\n      // 再用 esbuild 做转译与最小化（兼容 Vue 虚拟模块）\n      const { default: esbuild } = await import('rollup-plugin-esbuild')\n      plugins.push(esbuild({\n        include: /\\.(ts|tsx|js|jsx)(\\?|$)/,\n        exclude: [/node_modules/],\n        target: 'es2020',\n        jsx: 'preserve',\n        tsconfig: 'tsconfig.json',\n        minify: config.performance?.minify !== false,\n        sourceMap: config.output?.sourcemap !== false\n      }))\n\n      // CommonJS 插件\n      const commonjs = await import('@rollup/plugin-commonjs')\n      plugins.push(commonjs.default())\n\n      // 样式处理插件（接收 vue SFC 的 style 虚拟模块）\n      const postcss = await import('rollup-plugin-postcss')\n      plugins.push(postcss.default({\n        ...this.getPostCSSOptions(config),\n        include: [\n          /\\.(css|less|scss|sass)$/,\n          /\\?vue&type=style/\n        ]\n      }))\n    } catch (error) {\n      console.error('插件加载失败:', error)\n    }\n\n    return plugins\n  }\n\n  /**\n   * 构建外部依赖配置\n   */\n  private buildExternals(config: BuilderConfig): string[] {\n    let externals: string[] = []\n\n    if (Array.isArray(config.external)) {\n      externals = [...config.external]\n    } else if (typeof config.external === 'function') {\n      // 如果是函数，我们只能添加 Vue 作为默认外部依赖\n      externals = ['vue']\n    } else {\n      externals = []\n    }\n\n    // 确保 Vue 是外部依赖\n    if (!externals.includes('vue')) {\n      externals.push('vue')\n    }\n\n    return externals\n  }\n\n  /**\n   * 获取 Vue 选项\n   */\n  private getVueOptions(config: BuilderConfig): any {\n    const vueConfig = config.vue || {}\n\n    return {\n      include: /\\.vue$/,\n      template: {\n        compilerOptions: {\n          isCustomElement: (tag: string) => tag.startsWith('ld-')\n        },\n        ...vueConfig.template\n      },\n      ...vueConfig\n    }\n  }\n\n  /**\n   * 获取 TypeScript 选项\n   */\n  private getTypeScriptOptions(config: BuilderConfig): any {\n    const tsConfig = config.typescript || {}\n\n    return {\n      target: tsConfig.target || 'ES2020',\n      module: tsConfig.module || 'ESNext',\n      declaration: tsConfig.declaration !== false,\n      // declarationDir 将由 RollupAdapter 动态设置\n      strict: tsConfig.strict !== false,\n      esModuleInterop: true,\n      allowSyntheticDefaultImports: true,\n      skipLibCheck: true,\n      moduleResolution: 'node',\n      resolveJsonModule: true,\n      jsx: 'preserve',\n      ...tsConfig\n    }\n  }\n\n  /**\n   * 获取 PostCSS 选项\n   */\n  private getPostCSSOptions(config: BuilderConfig): any {\n    return {\n      extract: config.style?.extract !== false,\n      minimize: config.style?.minimize !== false,\n      sourceMap: config.output?.sourcemap !== false,\n      modules: config.style?.modules || false\n    }\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx,vue}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n}\n","/**\n * React 策略\n * 使用 esbuild 处理 TS/TSX，postcss 处理样式，rollup 输出 ESM/CJS\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\nexport class ReactStrategy implements ILibraryStrategy {\n  readonly name = 'react'\n  readonly supportedTypes = [LibraryType.REACT]\n  readonly priority = 10\n\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    return {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: await this.buildPlugins(config),\n      external: [...(config.external || []), 'react', 'react-dom'],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n  }\n\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.REACT\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.REACT,\n      output: { format: ['esm', 'cjs'], sourcemap: true },\n      performance: { treeshaking: true, minify: true }\n    }\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] { return [] }\n  validateConfig(_config: BuilderConfig): any { return { valid: true, errors: [], warnings: [], suggestions: [] } }\n\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    // Node resolve\n    const nodeResolve = await import('@rollup/plugin-node-resolve')\n    plugins.push(nodeResolve.default({ browser: true, extensions: ['.mjs', '.js', '.json', '.ts', '.tsx'] }))\n\n    // CommonJS\n    const commonjs = await import('@rollup/plugin-commonjs')\n    plugins.push(commonjs.default())\n\n    // TypeScript for DTS only\n    const ts = await import('@rollup/plugin-typescript')\n    plugins.push({\n      name: 'typescript',\n      plugin: async () => ts.default({\n        tsconfig: 'tsconfig.json',\n        declaration: true,\n        emitDeclarationOnly: true,\n        // declarationDir 将由 RollupAdapter 动态设置\n        jsx: 'react-jsx'\n      } as any)\n    })\n\n    // PostCSS (optional)\n    if (config.style?.extract !== false) {\n      const postcss = await import('rollup-plugin-postcss')\n      plugins.push(postcss.default({ extract: true, minimize: config.performance?.minify !== false }))\n    }\n\n    // esbuild for TS/TSX/JSX\n    const esbuild = await import('rollup-plugin-esbuild')\n    plugins.push(esbuild.default({\n      include: /\\.(tsx?|jsx?)$/, exclude: [/node_modules/], target: 'es2020',\n      jsx: 'automatic', jsxImportSource: 'react', tsconfig: 'tsconfig.json',\n      sourceMap: config.output?.sourcemap !== false, minify: config.performance?.minify !== false\n    }))\n\n    return plugins\n  }\n\n  private buildOutputConfig(config: BuilderConfig): any {\n    const out = config.output || {}\n    const formats = Array.isArray(out.format) ? out.format : ['esm', 'cjs']\n    return { dir: out.dir || 'dist', format: formats, sourcemap: out.sourcemap !== false, exports: 'auto' }\n  }\n\n  private createWarningHandler() {\n    return (warning: any) => { if (warning.code === 'THIS_IS_UNDEFINED' || warning.code === 'CIRCULAR_DEPENDENCY') return; console.warn(`Warning: ${warning.message}`) }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n}\n\n","/**\n * 混合策略\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\nexport class MixedStrategy implements ILibraryStrategy {\n  readonly name = 'mixed'\n  readonly supportedTypes: LibraryType[] = [LibraryType.MIXED]\n  readonly priority = 5\n\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: await this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.MIXED\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.MIXED,\n      output: {\n        format: ['esm', 'cjs'],\n        sourcemap: true\n      },\n      typescript: {\n        declaration: true\n      },\n      style: {\n        extract: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      }\n    }\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] {\n    return []\n  }\n\n  validateConfig(_config: BuilderConfig): any {\n    return {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: []\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx,vue,css,less,scss,sass}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      exports: 'named'\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    try {\n      // Node resolve\n      const nodeResolve = await import('@rollup/plugin-node-resolve')\n      plugins.push(nodeResolve.default({\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx', '.vue', '.css', '.less', '.scss']\n      }))\n\n      // CommonJS\n      const commonjs = await import('@rollup/plugin-commonjs')\n      plugins.push(commonjs.default())\n\n      // TypeScript\n      const ts = await import('@rollup/plugin-typescript')\n      plugins.push({\n        name: 'typescript',\n        plugin: async () => ts.default({\n          tsconfig: 'tsconfig.json',\n          declaration: config.typescript?.declaration !== false,\n          // declarationDir 将由 RollupAdapter 动态设置\n          target: config.typescript?.target || 'ES2020',\n          module: config.typescript?.module || 'ESNext',\n          strict: config.typescript?.strict !== false,\n          skipLibCheck: true,\n          sourceMap: config.output?.sourcemap !== false\n        } as any)\n      })\n\n      // PostCSS for styles\n      if (config.style?.extract !== false) {\n        const postcss = await import('rollup-plugin-postcss')\n        plugins.push(postcss.default({\n          extract: true,\n          minimize: config.performance?.minify !== false,\n          sourceMap: config.output?.sourcemap !== false,\n          modules: config.style?.modules || false\n        }))\n      }\n\n    } catch (error) {\n      console.error('插件加载失败:', error)\n    }\n\n    return plugins\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n}\n","/**\n * 策略管理器\n * \n * 负责管理不同库类型的构建策略\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type {\n  ILibraryStrategy,\n  StrategyManagerOptions,\n  StrategyDetectionResult,\n  StrategyApplicationResult\n} from '../types/strategy'\nimport { LibraryType } from '../types/library'\nimport type { BuilderConfig } from '../types/config'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler, BuilderError } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n// 导入具体策略实现\nimport { TypeScriptStrategy } from '../strategies/typescript/TypeScriptStrategy'\nimport { StyleStrategy } from '../strategies/style/StyleStrategy'\nimport { Vue3Strategy } from '../strategies/vue3/Vue3Strategy'\nimport { ReactStrategy } from '../strategies/react/ReactStrategy'\nimport { MixedStrategy } from '../strategies/mixed/MixedStrategy'\n\n/**\n * 基础策略实现（临时）\n */\nclass BaseStrategy implements ILibraryStrategy {\n  readonly name: string\n  readonly supportedTypes: LibraryType[]\n  readonly priority: number\n\n  constructor(name: string, supportedTypes: LibraryType[], priority: number = 1) {\n    this.name = name\n    this.supportedTypes = supportedTypes\n    this.priority = priority\n  }\n\n  async applyStrategy(config: BuilderConfig): Promise<any> {\n    // 基础实现，返回原配置\n    return config\n  }\n\n  isApplicable(_config: BuilderConfig): boolean {\n    return this.supportedTypes.includes(_config.libraryType as LibraryType)\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {}\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] {\n    return []\n  }\n\n  validateConfig(_config: BuilderConfig): any {\n    return {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: []\n    }\n  }\n}\n\n/**\n * 策略管理器类\n */\nexport class StrategyManager {\n  private logger: Logger\n  private errorHandler: ErrorHandler\n  private strategies: Map<LibraryType, ILibraryStrategy> = new Map()\n\n  constructor(_options: StrategyManagerOptions = {}) {\n    this.logger = (_options as any).logger || new Logger()\n    this.errorHandler = new ErrorHandler({ logger: this.logger })\n\n    // 注册默认策略\n    this.registerDefaultStrategies()\n  }\n\n  /**\n   * 注册策略\n   */\n  registerStrategy(strategy: ILibraryStrategy): void {\n    for (const type of strategy.supportedTypes) {\n      this.strategies.set(type, strategy)\n    }\n\n    this.logger.debug(`注册策略: ${strategy.name}`)\n  }\n\n  /**\n   * 获取策略\n   */\n  getStrategy(libraryType: LibraryType): ILibraryStrategy {\n    const strategy = this.strategies.get(libraryType)\n\n    if (!strategy) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_VALIDATION_ERROR,\n        `未找到库类型 ${libraryType} 的策略`\n      )\n    }\n\n    return strategy\n  }\n\n  /**\n   * 检测最佳策略\n   */\n  async detectStrategy(_projectPath: string): Promise<StrategyDetectionResult> {\n    // TODO: 实现策略检测逻辑\n    // 这里先返回一个默认结果\n    return {\n      strategy: LibraryType.TYPESCRIPT,\n      confidence: 0.8,\n      evidence: [],\n      alternatives: []\n    }\n  }\n\n  /**\n   * 应用策略\n   */\n  async applyStrategy(\n    libraryType: LibraryType,\n    config: BuilderConfig\n  ): Promise<StrategyApplicationResult> {\n    const startTime = Date.now()\n\n    try {\n      const strategy = this.getStrategy(libraryType)\n\n      // 验证策略是否适用\n      if (!strategy.isApplicable(config)) {\n        throw new BuilderError(\n          ErrorCode.CONFIG_VALIDATION_ERROR,\n          `策略 ${strategy.name} 不适用于当前配置`\n        )\n      }\n\n      // 应用策略\n      const transformedConfig = await strategy.applyStrategy(config)\n      const plugins = strategy.getRecommendedPlugins(config)\n\n      const duration = Date.now() - startTime\n\n      return {\n        strategy,\n        config: transformedConfig,\n        plugins,\n        duration,\n        warnings: [],\n        optimizations: []\n      }\n\n    } catch (error) {\n      this.errorHandler.handle(error as Error, 'applyStrategy')\n      throw error\n    }\n  }\n\n  /**\n   * 获取所有已注册的策略\n   */\n  getAllStrategies(): ILibraryStrategy[] {\n    return Array.from(this.strategies.values())\n  }\n\n  /**\n   * 获取支持的库类型\n   */\n  getSupportedTypes(): LibraryType[] {\n    return Array.from(this.strategies.keys())\n  }\n\n  /**\n   * 注册默认策略\n   */\n  private registerDefaultStrategies(): void {\n    // TypeScript 策略\n    this.registerStrategy(new TypeScriptStrategy())\n\n    // Vue3 策略\n    this.registerStrategy(new Vue3Strategy())\n\n    // Vue2 策略\n    this.registerStrategy(new BaseStrategy(\n      'vue2',\n      [LibraryType.VUE2],\n      10\n    ))\n\n    // 样式策略\n    this.registerStrategy(new StyleStrategy())\n\n    // React 策略\n    this.registerStrategy(new ReactStrategy())\n\n    // 混合策略\n    this.registerStrategy(new MixedStrategy())\n  }\n}\n","/**\n * 插件管理器\n * \n * 负责插件的加载、管理和执行\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport type {\n  UnifiedPlugin,\n  PluginManagerOptions,\n  PluginLoadResult,\n  PluginPerformanceStats\n} from '../types/plugin'\nimport { Logger } from '../utils/logger'\nimport { BuilderError } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 插件管理器类\n */\nexport class PluginManager extends EventEmitter {\n  private logger: Logger\n  private options: PluginManagerOptions\n  private plugins: Map<string, UnifiedPlugin> = new Map()\n  private performanceStats: Map<string, PluginPerformanceStats> = new Map()\n\n  constructor(options: PluginManagerOptions = {}) {\n    super()\n\n    this.options = {\n      cache: true,\n      hotReload: false,\n      timeout: 30000,\n      maxPlugins: 100,\n      whitelist: [],\n      blacklist: [],\n      ...options\n    }\n\n    this.logger = (options as any).logger || new Logger()\n  }\n\n  /**\n   * 加载插件\n   */\n  async loadPlugin(plugin: UnifiedPlugin): Promise<PluginLoadResult> {\n    const startTime = Date.now()\n\n    try {\n      // 检查插件是否已加载\n      if (this.plugins.has(plugin.name)) {\n        this.logger.warn(`插件 ${plugin.name} 已存在，将被覆盖`)\n      }\n\n      // 检查黑名单\n      if (this.options.blacklist?.includes(plugin.name)) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `插件 ${plugin.name} 在黑名单中`\n        )\n      }\n\n      // 检查白名单\n      if (this.options.whitelist?.length && !this.options.whitelist.includes(plugin.name)) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `插件 ${plugin.name} 不在白名单中`\n        )\n      }\n\n      // 检查插件数量限制\n      if (this.plugins.size >= (this.options.maxPlugins || 100)) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `插件数量超过限制 (${this.options.maxPlugins})`\n        )\n      }\n\n      // 验证插件\n      this.validatePlugin(plugin)\n\n      // 初始化插件\n      if (plugin.onInit) {\n        await plugin.onInit({\n          buildId: 'init',\n          pluginName: plugin.name,\n          cwd: process.cwd(),\n          mode: 'production',\n          platform: 'browser',\n          env: process.env as any,\n          config: {},\n          cacheDir: '',\n          tempDir: '',\n          logger: this.logger,\n          performanceMonitor: null as any\n        })\n      }\n\n      // 注册插件\n      this.plugins.set(plugin.name, plugin)\n\n      const loadTime = Date.now() - startTime\n\n      // 初始化性能统计\n      this.performanceStats.set(plugin.name, {\n        name: plugin.name,\n        totalTime: 0,\n        callCount: 0,\n        averageTime: 0,\n        maxTime: 0,\n        hookPerformance: {}\n      })\n\n      this.logger.success(`插件 ${plugin.name} 加载成功 (${loadTime}ms)`)\n\n      return {\n        plugin,\n        loadTime,\n        success: true\n      }\n\n    } catch (error) {\n      const loadTime = Date.now() - startTime\n\n      this.logger.error(`插件 ${plugin.name} 加载失败:`, error)\n\n      return {\n        plugin,\n        loadTime,\n        success: false,\n        error: error as Error\n      }\n    }\n  }\n\n  /**\n   * 批量加载插件\n   */\n  async loadPlugins(plugins: UnifiedPlugin[]): Promise<PluginLoadResult[]> {\n    const results: PluginLoadResult[] = []\n\n    for (const plugin of plugins) {\n      const result = await this.loadPlugin(plugin)\n      results.push(result)\n\n      // 如果加载失败且不是可选插件，抛出错误\n      if (!result.success && !plugin.enabled) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `必需插件 ${plugin.name} 加载失败`,\n          { cause: result.error }\n        )\n      }\n    }\n\n    return results\n  }\n\n  /**\n   * 获取插件\n   */\n  getPlugin(name: string): UnifiedPlugin | undefined {\n    return this.plugins.get(name)\n  }\n\n  /**\n   * 获取所有插件\n   */\n  getAllPlugins(): UnifiedPlugin[] {\n    return Array.from(this.plugins.values())\n  }\n\n  /**\n   * 移除插件\n   */\n  async removePlugin(name: string): Promise<boolean> {\n    const plugin = this.plugins.get(name)\n\n    if (!plugin) {\n      return false\n    }\n\n    try {\n      // 调用插件销毁钩子\n      if (plugin.onDestroy) {\n        await plugin.onDestroy({\n          buildId: 'destroy',\n          pluginName: plugin.name,\n          cwd: process.cwd(),\n          mode: 'production',\n          platform: 'browser',\n          env: process.env as any,\n          config: {},\n          cacheDir: '',\n          tempDir: '',\n          logger: this.logger,\n          performanceMonitor: null as any\n        })\n      }\n\n      this.plugins.delete(name)\n      this.performanceStats.delete(name)\n\n      this.logger.info(`插件 ${name} 已移除`)\n      return true\n\n    } catch (error) {\n      this.logger.error(`移除插件 ${name} 失败:`, error)\n      return false\n    }\n  }\n\n  /**\n   * 清空所有插件\n   */\n  async clear(): Promise<void> {\n    const pluginNames = Array.from(this.plugins.keys())\n\n    for (const name of pluginNames) {\n      await this.removePlugin(name)\n    }\n  }\n\n  /**\n   * 获取插件性能统计\n   */\n  getPerformanceStats(name?: string): PluginPerformanceStats | PluginPerformanceStats[] {\n    if (name) {\n      const stats = this.performanceStats.get(name)\n      if (!stats) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_NOT_FOUND,\n          `插件 ${name} 不存在`\n        )\n      }\n      return stats\n    }\n\n    return Array.from(this.performanceStats.values())\n  }\n\n  /**\n   * 验证插件\n   */\n  private validatePlugin(plugin: UnifiedPlugin): void {\n    if (!plugin.name) {\n      throw new BuilderError(\n        ErrorCode.PLUGIN_LOAD_ERROR,\n        '插件必须有名称'\n      )\n    }\n\n    if (typeof plugin.name !== 'string') {\n      throw new BuilderError(\n        ErrorCode.PLUGIN_LOAD_ERROR,\n        '插件名称必须是字符串'\n      )\n    }\n\n    // 检查插件依赖\n    if (plugin.dependencies) {\n      for (const dep of plugin.dependencies) {\n        if (!this.plugins.has(dep)) {\n          throw new BuilderError(\n            ErrorCode.PLUGIN_DEPENDENCY_ERROR,\n            `插件 ${plugin.name} 依赖的插件 ${dep} 未找到`\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 销毁资源\n   */\n  async dispose(): Promise<void> {\n    await this.clear()\n    this.removeAllListeners()\n  }\n}\n","/**\n * 库类型相关常量\n */\n\nimport { LibraryType } from '../types/library'\n\n/**\n * 库类型检测模式\n */\nexport const LIBRARY_TYPE_PATTERNS = {\n  [LibraryType.TYPESCRIPT]: {\n    // TypeScript 库检测模式\n    files: [\n      'src/**/*.ts',\n      'src/**/*.tsx',\n      'lib/**/*.ts',\n      'lib/**/*.tsx',\n      'index.ts',\n      'main.ts'\n    ],\n    dependencies: [\n      'typescript',\n      '@types/node'\n    ],\n    configs: [\n      'tsconfig.json',\n      'tsconfig.build.json'\n    ],\n    packageJsonFields: [\n      'types',\n      'typings'\n    ],\n    weight: 0.8\n  },\n\n  [LibraryType.STYLE]: {\n    // 样式库检测模式\n    files: [\n      'src/**/*.css',\n      'src/**/*.less',\n      'src/**/*.scss',\n      'src/**/*.sass',\n      'src/**/*.styl',\n      'lib/**/*.css',\n      'styles/**/*'\n    ],\n    dependencies: [\n      'less',\n      'sass',\n      'stylus',\n      'postcss'\n    ],\n    configs: [\n      'postcss.config.js',\n      '.stylelintrc'\n    ],\n    packageJsonFields: [\n      'style',\n      'sass',\n      'less'\n    ],\n    weight: 0.9\n  },\n\n  [LibraryType.VUE2]: {\n    // Vue2 组件库检测模式\n    files: [\n      'src/**/*.vue',\n      'lib/**/*.vue',\n      'components/**/*.vue'\n    ],\n    dependencies: [\n      'vue@^2',\n      '@vue/composition-api',\n      'vue-template-compiler'\n    ],\n    devDependencies: [\n      '@vue/cli-service',\n      'vue-loader'\n    ],\n    configs: [\n      'vue.config.js'\n    ],\n    packageJsonFields: [],\n    weight: 0.95\n  },\n\n  [LibraryType.VUE3]: {\n    // Vue3 组件库检测模式\n    files: [\n      'src/**/*.vue',\n      'lib/**/*.vue',\n      'components/**/*.vue'\n    ],\n    dependencies: [\n      'vue@^3',\n      '@vue/runtime-core',\n      '@vue/runtime-dom'\n    ],\n    devDependencies: [\n      '@vitejs/plugin-vue',\n      '@vue/compiler-sfc'\n    ],\n    configs: [\n      'vite.config.ts',\n      'vite.config.js'\n    ],\n    packageJsonFields: [],\n    weight: 0.95\n  },\n\n  [LibraryType.REACT]: {\n    // React 组件库检测模式\n    files: [\n      'src/**/*.tsx',\n      'src/**/*.jsx',\n      'lib/**/*.tsx',\n      'components/**/*.tsx'\n    ],\n    dependencies: [\n      'react',\n      'react-dom'\n    ],\n    devDependencies: [\n      '@vitejs/plugin-react'\n    ],\n    configs: [\n      'vite.config.ts',\n      'vite.config.js'\n    ],\n    packageJsonFields: [],\n    weight: 0.95\n  },\n\n  [LibraryType.MIXED]: {\n    // 混合库检测模式（多种类型混合）\n    files: [\n      'src/**/*.{ts,tsx,vue,css,less,scss}'\n    ],\n    dependencies: [],\n    configs: [],\n    packageJsonFields: [],\n    weight: 0.6 // 较低权重，作为兜底选项\n  }\n} as const\n\n/**\n * 库类型描述\n */\nexport const LIBRARY_TYPE_DESCRIPTIONS = {\n  [LibraryType.TYPESCRIPT]: 'TypeScript 库 - 使用 TypeScript 编写的库，支持类型声明和现代 JavaScript 特性',\n  [LibraryType.STYLE]: '样式库 - 包含 CSS、Less、Sass 等样式文件的库',\n  [LibraryType.VUE2]: 'Vue2 组件库 - 基于 Vue 2.x 的组件库',\n  [LibraryType.VUE3]: 'Vue3 组件库 - 基于 Vue 3.x 的组件库，支持 Composition API',\n  [LibraryType.REACT]: 'React 组件库 - 基于 React 18+ 的组件库，支持 JSX/TSX 与 Hooks',\n  [LibraryType.MIXED]: '混合库 - 包含多种类型文件的复合库'\n} as const\n\n/**\n * 库类型推荐配置\n */\nexport const LIBRARY_TYPE_RECOMMENDED_CONFIG = {\n  [LibraryType.TYPESCRIPT]: {\n    output: {\n      format: ['esm', 'cjs'],\n      sourcemap: true\n    },\n    typescript: {\n      declaration: true,\n      isolatedDeclarations: true\n    },\n    external: [],\n    bundleless: false\n  },\n\n  [LibraryType.STYLE]: {\n    output: {\n      format: ['esm'],\n      sourcemap: false\n    },\n    style: {\n      extract: true,\n      minimize: true,\n      autoprefixer: true\n    },\n    external: [],\n    bundleless: true\n  },\n\n  [LibraryType.VUE2]: {\n    output: {\n      format: ['esm', 'cjs', 'umd'],\n      sourcemap: true\n    },\n    vue: {\n      version: 2,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    bundleless: false\n  },\n\n  [LibraryType.VUE3]: {\n    output: {\n      format: ['esm', 'cjs', 'umd'],\n      sourcemap: true\n    },\n    vue: {\n      version: 3,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    bundleless: false\n  },\n\n  [LibraryType.REACT]: {\n    output: {\n      format: ['esm', 'cjs'],\n      sourcemap: true\n    },\n    external: ['react', 'react-dom'],\n    bundleless: false\n  },\n\n  [LibraryType.MIXED]: {\n    output: {\n      format: ['esm', 'cjs'],\n      sourcemap: true\n    },\n    typescript: {\n      declaration: true\n    },\n    style: {\n      extract: true\n    },\n    external: [],\n    bundleless: false\n  }\n} as const\n\n/**\n * 库类型优先级\n */\nexport const LIBRARY_TYPE_PRIORITY = {\n  [LibraryType.VUE2]: 10,\n  [LibraryType.VUE3]: 10,\n  [LibraryType.REACT]: 10,\n  [LibraryType.STYLE]: 8,\n  [LibraryType.TYPESCRIPT]: 6,\n  [LibraryType.MIXED]: 2\n} as const\n\n/**\n * 库类型兼容性\n */\nexport const LIBRARY_TYPE_COMPATIBILITY = {\n  [LibraryType.TYPESCRIPT]: {\n    rollup: 'excellent',\n    rolldown: 'excellent',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: true\n  },\n\n  [LibraryType.STYLE]: {\n    rollup: 'good',\n    rolldown: 'good',\n    treeshaking: false,\n    codeSplitting: false,\n    bundleless: true\n  },\n\n  [LibraryType.VUE2]: {\n    rollup: 'excellent',\n    rolldown: 'good',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: false\n  },\n\n  [LibraryType.VUE3]: {\n    rollup: 'excellent',\n    rolldown: 'excellent',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: false\n  },\n\n  [LibraryType.MIXED]: {\n    rollup: 'good',\n    rolldown: 'good',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: false\n  }\n} as const\n\n/**\n * 库类型所需插件\n */\nexport const LIBRARY_TYPE_PLUGINS = {\n  [LibraryType.TYPESCRIPT]: [\n    'typescript',\n    'dts'\n  ],\n\n  [LibraryType.STYLE]: [\n    'postcss',\n    'less',\n    'sass',\n    'stylus'\n  ],\n\n  [LibraryType.VUE2]: [\n    'vue2',\n    'vue-jsx',\n    'typescript',\n    'postcss'\n  ],\n\n  [LibraryType.VUE3]: [\n    'vue3',\n    'vue-jsx',\n    'typescript',\n    'postcss'\n  ],\n\n  [LibraryType.MIXED]: [\n    'typescript',\n    'vue3',\n    'postcss',\n    'dts'\n  ]\n} as const\n\n/**\n * 库类型检测权重\n */\nexport const DETECTION_WEIGHTS = {\n  // 文件模式权重\n  files: 0.4,\n\n  // 依赖权重\n  dependencies: 0.3,\n\n  // 配置文件权重\n  configs: 0.2,\n\n  // package.json 字段权重\n  packageJsonFields: 0.1\n} as const\n\n/**\n * 最小置信度阈值\n */\nexport const MIN_CONFIDENCE_THRESHOLD = 0.6\n\n/**\n * 库类型检测缓存配置\n */\nexport const DETECTION_CACHE_CONFIG = {\n  enabled: true,\n  ttl: 5 * 60 * 1000, // 5 minutes\n  maxSize: 100\n} as const\n\n/**\n * 库类型特定的文件扩展名\n */\nexport const LIBRARY_TYPE_EXTENSIONS = {\n  [LibraryType.TYPESCRIPT]: ['.ts', '.tsx', '.d.ts'],\n  [LibraryType.STYLE]: ['.css', '.less', '.scss', '.sass', '.styl'],\n  [LibraryType.VUE2]: ['.vue', '.ts', '.tsx', '.js', '.jsx'],\n  [LibraryType.VUE3]: ['.vue', '.ts', '.tsx', '.js', '.jsx'],\n  [LibraryType.MIXED]: ['.ts', '.tsx', '.vue', '.css', '.less', '.scss', '.sass']\n} as const\n\n/**\n * 库类型排除模式\n */\nexport const LIBRARY_TYPE_EXCLUDE_PATTERNS = {\n  common: [\n    'node_modules/**',\n    'dist/**',\n    'build/**',\n    '**/*.test.*',\n    '**/*.spec.*',\n    '**/*.d.ts'\n  ],\n\n  [LibraryType.TYPESCRIPT]: [\n    '**/*.js',\n    '**/*.jsx'\n  ],\n\n  [LibraryType.STYLE]: [\n    '**/*.ts',\n    '**/*.tsx',\n    '**/*.js',\n    '**/*.jsx',\n    '**/*.vue'\n  ],\n\n  [LibraryType.VUE2]: [],\n\n  [LibraryType.VUE3]: [],\n\n  [LibraryType.MIXED]: []\n} as const\n","/**\n * 库类型检测器\n * \n * 负责自动检测项目的库类型\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport path from 'path'\nimport {\n  LibraryType,\n  LibraryDetectionResult\n} from '../types/library'\nimport type { DetectionEvidence } from '../types/strategy'\nimport { LIBRARY_TYPE_PATTERNS, LIBRARY_TYPE_PRIORITY } from '../constants/library-types'\nimport { findFiles, exists, readFile } from '../utils/file-system'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\n\n/**\n * 库类型检测器选项\n */\nexport interface LibraryDetectorOptions {\n  logger?: Logger\n  confidence?: number\n  cache?: boolean\n}\n\n/**\n * 库类型检测器类\n */\nexport class LibraryDetector {\n  private logger: Logger\n  private errorHandler: ErrorHandler\n  private options: LibraryDetectorOptions\n\n  constructor(options: LibraryDetectorOptions = {}) {\n    this.options = {\n      confidence: 0.6,\n      cache: true,\n      ...options\n    }\n\n    this.logger = options.logger || new Logger()\n    this.errorHandler = new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 检测库类型\n   */\n  async detect(projectPath: string): Promise<LibraryDetectionResult> {\n    try {\n      this.logger.info(`开始检测项目类型: ${projectPath}`)\n\n      const scores: Record<LibraryType, number> = {\n        typescript: 0,\n        style: 0,\n        vue2: 0,\n        vue3: 0,\n        react: 0,\n        mixed: 0\n      }\n\n      const evidence: Record<LibraryType, DetectionEvidence[]> = {\n        typescript: [],\n        style: [],\n        vue2: [],\n        vue3: [],\n        react: [],\n        mixed: []\n      }\n\n      // 检测文件模式\n      await this.detectFilePatterns(projectPath, scores, evidence)\n\n      // 检测依赖\n      await this.detectDependencies(projectPath, scores, evidence)\n\n      // 检测配置文件\n      await this.detectConfigFiles(projectPath, scores, evidence)\n\n      // 检测 package.json 字段\n      await this.detectPackageJsonFields(projectPath, scores, evidence)\n\n      // 计算最终分数\n      const finalScores = this.calculateFinalScores(scores)\n\n      // 找到最高分的类型\n      const detectedType = this.getBestMatch(finalScores)\n      const confidence = finalScores[detectedType]\n\n      const result: LibraryDetectionResult = {\n        type: detectedType,\n        confidence,\n        evidence: evidence[detectedType]\n      }\n\n      this.logger.success(`检测完成: ${detectedType} (置信度: ${(confidence * 100).toFixed(1)}%)`)\n\n      return result\n\n    } catch (error) {\n      this.errorHandler.handle(error as Error, 'detect')\n\n      // 返回默认结果\n      return {\n        type: LibraryType.TYPESCRIPT,\n        confidence: 0.5,\n        evidence: []\n      }\n    }\n  }\n\n  /**\n   * 检测文件模式\n   */\n  private async detectFilePatterns(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n      const libraryType = type as LibraryType\n\n      try {\n        const files = await findFiles([...pattern.files], {\n          cwd: projectPath,\n          ignore: ['node_modules/**', 'dist/**', '**/*.test.*', '**/*.spec.*']\n        })\n\n        if (files.length > 0) {\n          const score = Math.min(files.length * 0.1, 1) * pattern.weight\n          scores[libraryType] += score\n\n          evidence[libraryType].push({\n            type: 'file',\n            description: `找到 ${files.length} 个 ${libraryType} 文件 (模式: ${pattern.files.join(', ')})`,\n            weight: score,\n            source: files.slice(0, 3).join(', ')\n          })\n        }\n      } catch (error) {\n        this.logger.debug(`检测 ${libraryType} 文件模式失败:`, error)\n      }\n    }\n  }\n\n  /**\n   * 检测依赖\n   */\n  private async detectDependencies(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    try {\n      const packageJsonPath = path.join(projectPath, 'package.json')\n\n      if (await exists(packageJsonPath)) {\n        const packageContent = await readFile(packageJsonPath, 'utf-8')\n        const packageJson = JSON.parse(packageContent)\n\n        const allDeps = {\n          ...packageJson.dependencies,\n          ...packageJson.devDependencies,\n          ...packageJson.peerDependencies\n        }\n\n        for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n          const libraryType = type as LibraryType\n          const matchedDeps: string[] = []\n\n          for (const dep of pattern.dependencies) {\n            if (this.matchDependency(dep, allDeps)) {\n              matchedDeps.push(dep)\n            }\n          }\n\n          if (matchedDeps.length > 0) {\n            const score = (matchedDeps.length / pattern.dependencies.length) * pattern.weight * 0.8\n            scores[libraryType] += score\n\n            evidence[libraryType].push({\n              type: 'dependency',\n              description: `找到相关依赖: ${matchedDeps.join(', ')}`,\n              weight: score,\n              source: 'package.json'\n            })\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.debug('检测依赖失败:', error)\n    }\n  }\n\n  /**\n   * 检测配置文件\n   */\n  private async detectConfigFiles(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n      const libraryType = type as LibraryType\n      const foundConfigs: string[] = []\n\n      for (const configFile of pattern.configs) {\n        const configPath = path.join(projectPath, configFile)\n\n        if (await exists(configPath)) {\n          foundConfigs.push(configFile)\n        }\n      }\n\n      if (foundConfigs.length > 0) {\n        const score = (foundConfigs.length / pattern.configs.length) * pattern.weight * 0.6\n        scores[libraryType] += score\n\n        evidence[libraryType].push({\n          type: 'config',\n          description: `找到配置文件: ${foundConfigs.join(', ')}`,\n          weight: score,\n          source: foundConfigs.join(', ')\n        })\n      }\n    }\n  }\n\n  /**\n   * 检测 package.json 字段\n   */\n  private async detectPackageJsonFields(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    try {\n      const packageJsonPath = path.join(projectPath, 'package.json')\n\n      if (await exists(packageJsonPath)) {\n        const packageContent = await readFile(packageJsonPath, 'utf-8')\n        const packageJson = JSON.parse(packageContent)\n\n        for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n          const libraryType = type as LibraryType\n          const foundFields: string[] = []\n\n          for (const field of pattern.packageJsonFields) {\n            if (packageJson[field]) {\n              foundFields.push(field)\n            }\n          }\n\n          if (foundFields.length > 0) {\n            const score = (foundFields.length / pattern.packageJsonFields.length) * pattern.weight * 0.4\n            scores[libraryType] += score\n\n            evidence[libraryType].push({\n              type: 'config',\n              description: `找到 package.json 字段: ${foundFields.join(', ')}`,\n              weight: score,\n              source: 'package.json'\n            })\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.debug('检测 package.json 字段失败:', error)\n    }\n  }\n\n  /**\n   * 计算最终分数\n   */\n  private calculateFinalScores(scores: Record<LibraryType, number>): Record<LibraryType, number> {\n    const finalScores: Record<LibraryType, number> = { ...scores }\n\n    // 应用优先级权重\n    for (const [type, priority] of Object.entries(LIBRARY_TYPE_PRIORITY)) {\n      const libraryType = type as LibraryType\n      finalScores[libraryType] *= (priority / 10)\n    }\n\n    // 归一化分数\n    const maxScore = Math.max(...Object.values(finalScores))\n    if (maxScore > 0) {\n      for (const type of Object.keys(finalScores) as LibraryType[]) {\n        finalScores[type] = Math.min(finalScores[type] / maxScore, 1)\n      }\n    }\n\n    return finalScores\n  }\n\n  /**\n   * 获取最佳匹配\n   */\n  private getBestMatch(scores: Record<LibraryType, number>): LibraryType {\n    let bestType: LibraryType = LibraryType.TYPESCRIPT\n    let bestScore = 0\n\n    for (const [type, score] of Object.entries(scores)) {\n      if (score > bestScore) {\n        bestScore = score\n        bestType = type as LibraryType\n      }\n    }\n\n    // 如果最高分数低于阈值，返回默认类型\n    if (bestScore < this.options.confidence!) {\n      return LibraryType.MIXED\n    }\n\n    return bestType\n  }\n\n  /**\n   * 匹配依赖\n   */\n  private matchDependency(pattern: string, dependencies: Record<string, string>): boolean {\n    // 支持版本范围匹配\n    if (pattern.includes('@')) {\n      const [name, version] = pattern.split('@')\n      return !!(dependencies[name] && dependencies[name].includes(version))\n    }\n\n    return !!dependencies[pattern]\n  }\n}\n","/**\n * 性能监控器\n * \n * 负责监控构建过程的性能指标\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport type {\n  PerformanceMetrics,\n  PerformanceReport,\n  MemoryUsage,\n  CacheStats,\n  FileProcessingStats,\n  SystemResourceUsage\n} from '../types/performance'\nimport { Logger } from '../utils/logger'\n\n/**\n * 性能监控器选项\n */\nexport interface PerformanceMonitorOptions {\n  logger?: Logger\n  enabled?: boolean\n  sampleInterval?: number\n  maxSamples?: number\n}\n\n/**\n * 构建会话\n */\ninterface BuildSession {\n  buildId: string\n  startTime: number\n  endTime?: number\n  memorySnapshots: MemoryUsage[]\n  fileStats: FileProcessingStats\n  errors: Error[]\n}\n\n/**\n * 性能监控器类\n */\nexport class PerformanceMonitor extends EventEmitter {\n  private logger: Logger\n  private options: PerformanceMonitorOptions\n  private sessions: Map<string, BuildSession> = new Map()\n  private globalStats: {\n    totalBuilds: number\n    totalTime: number\n    averageTime: number\n    cacheStats: CacheStats\n  }\n\n  constructor(options: PerformanceMonitorOptions = {}) {\n    super()\n\n    this.options = {\n      enabled: true,\n      sampleInterval: 1000,\n      maxSamples: 100,\n      ...options\n    }\n\n    this.logger = options.logger || new Logger()\n\n    this.globalStats = {\n      totalBuilds: 0,\n      totalTime: 0,\n      averageTime: 0,\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      }\n    }\n  }\n\n  /**\n   * 开始构建监控\n   */\n  startBuild(buildId: string): void {\n    if (!this.options.enabled) return\n\n    const session: BuildSession = {\n      buildId,\n      startTime: Date.now(),\n      memorySnapshots: [],\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      errors: []\n    }\n\n    this.sessions.set(buildId, session)\n\n    // 开始内存监控\n    this.startMemoryMonitoring(buildId)\n\n    this.logger.debug(`开始监控构建: ${buildId}`)\n    this.emit('build:start', { buildId, timestamp: session.startTime })\n  }\n\n  /**\n   * 结束构建监控\n   */\n  endBuild(buildId: string): PerformanceMetrics {\n    if (!this.options.enabled) {\n      return this.createEmptyMetrics()\n    }\n\n    const session = this.sessions.get(buildId)\n    if (!session) {\n      this.logger.warn(`构建会话不存在: ${buildId}`)\n      return this.createEmptyMetrics()\n    }\n\n    session.endTime = Date.now()\n    const buildTime = session.endTime - session.startTime\n\n    // 更新全局统计\n    this.globalStats.totalBuilds++\n    this.globalStats.totalTime += buildTime\n    this.globalStats.averageTime = this.globalStats.totalTime / this.globalStats.totalBuilds\n\n    // 生成性能指标\n    const metrics = this.generateMetrics(session, buildTime)\n\n    this.logger.info(`构建监控完成: ${buildId} (${buildTime}ms)`)\n    this.emit('build:end', { buildId, metrics, timestamp: session.endTime })\n\n    // 清理会话\n    this.sessions.delete(buildId)\n\n    return metrics\n  }\n\n  /**\n   * 记录错误\n   */\n  recordError(buildId: string, error: Error): void {\n    const session = this.sessions.get(buildId)\n    if (session) {\n      session.errors.push(error)\n    }\n  }\n\n  /**\n   * 记录文件处理\n   */\n  recordFileProcessing(buildId: string, filePath: string, processingTime: number): void {\n    const session = this.sessions.get(buildId)\n    if (!session) return\n\n    session.fileStats.totalFiles++\n\n    // 按类型统计\n    const ext = this.getFileExtension(filePath)\n    session.fileStats.filesByType[ext] = (session.fileStats.filesByType[ext] || 0) + 1\n\n    // 记录慢文件\n    if (session.fileStats.slowestFiles.length < 10) {\n      session.fileStats.slowestFiles.push({\n        path: filePath,\n        processingTime,\n        size: 0, // TODO: 获取文件大小\n        phases: []\n      })\n    } else {\n      // 替换最快的文件\n      const slowest = session.fileStats.slowestFiles\n      const minIndex = slowest.findIndex(f => f.processingTime === Math.min(...slowest.map(f => f.processingTime)))\n      if (processingTime > slowest[minIndex].processingTime) {\n        slowest[minIndex] = {\n          path: filePath,\n          processingTime,\n          size: 0,\n          phases: []\n        }\n      }\n    }\n  }\n\n  /**\n   * 记录缓存命中\n   */\n  recordCacheHit(saved: boolean, timeSaved: number = 0): void {\n    if (saved) {\n      this.globalStats.cacheStats.hits++\n      this.globalStats.cacheStats.timeSaved += timeSaved\n    } else {\n      this.globalStats.cacheStats.misses++\n    }\n\n    const total = this.globalStats.cacheStats.hits + this.globalStats.cacheStats.misses\n    this.globalStats.cacheStats.hitRate = this.globalStats.cacheStats.hits / total\n  }\n\n  /**\n   * 获取性能报告\n   */\n  getPerformanceReport(): PerformanceReport {\n    const timestamp = Date.now()\n\n    return {\n      timestamp,\n      buildSummary: {\n        bundler: 'rollup', // TODO: 从配置获取\n        mode: 'production',\n        entryCount: 1,\n        outputCount: 1,\n        totalSize: 0,\n        buildTime: this.globalStats.averageTime\n      },\n      metrics: this.createEmptyMetrics(), // TODO: 实现\n      recommendations: [],\n      analysis: {\n        bottlenecks: [],\n        resourceAnalysis: {\n          cpuEfficiency: 0.8,\n          memoryEfficiency: 0.7,\n          ioEfficiency: 0.9,\n          wastePoints: []\n        },\n        cacheAnalysis: {\n          overallEfficiency: this.globalStats.cacheStats.hitRate,\n          strategyRecommendations: [],\n          configOptimizations: {}\n        },\n        parallelizationOpportunities: []\n      }\n    }\n  }\n\n  /**\n   * 开始内存监控\n   */\n  private startMemoryMonitoring(buildId: string): void {\n    const session = this.sessions.get(buildId)\n    if (!session) return\n\n    const interval = setInterval(() => {\n      if (!this.sessions.has(buildId)) {\n        clearInterval(interval)\n        return\n      }\n\n      const memoryUsage = this.getCurrentMemoryUsage()\n      session.memorySnapshots.push(memoryUsage)\n\n      // 限制快照数量\n      if (session.memorySnapshots.length > (this.options.maxSamples || 100)) {\n        session.memorySnapshots.shift()\n      }\n    }, this.options.sampleInterval)\n  }\n\n  /**\n   * 获取当前内存使用情况\n   */\n  private getCurrentMemoryUsage(): MemoryUsage {\n    const usage = process.memoryUsage()\n\n    return {\n      heapUsed: usage.heapUsed,\n      heapTotal: usage.heapTotal,\n      external: usage.external,\n      rss: usage.rss,\n      peak: Math.max(usage.heapUsed, usage.heapTotal),\n      trend: []\n    }\n  }\n\n  /**\n   * 生成性能指标\n   */\n  private generateMetrics(session: BuildSession, buildTime: number): PerformanceMetrics {\n    const memoryUsage = this.calculateMemoryUsage(session.memorySnapshots)\n\n    return {\n      buildTime,\n      memoryUsage,\n      cacheStats: this.globalStats.cacheStats,\n      fileStats: session.fileStats,\n      pluginPerformance: [], // TODO: 实现插件性能统计\n      systemResources: this.getSystemResources()\n    }\n  }\n\n  /**\n   * 计算内存使用情况\n   */\n  private calculateMemoryUsage(snapshots: MemoryUsage[]): MemoryUsage {\n    if (snapshots.length === 0) {\n      return this.getCurrentMemoryUsage()\n    }\n\n    const latest = snapshots[snapshots.length - 1]\n    const peak = Math.max(...snapshots.map(s => s.heapUsed))\n\n    return {\n      ...latest,\n      peak,\n      trend: snapshots.map((snapshot, index) => ({\n        timestamp: Date.now() - (snapshots.length - index) * (this.options.sampleInterval || 1000),\n        usage: snapshot.heapUsed,\n        phase: 'building'\n      }))\n    }\n  }\n\n  /**\n   * 获取系统资源使用情况\n   */\n  private getSystemResources(): SystemResourceUsage {\n    // TODO: 实现系统资源监控\n    return {\n      cpuUsage: 0,\n      availableMemory: 0,\n      diskUsage: {\n        total: 0,\n        used: 0,\n        available: 0,\n        usagePercent: 0\n      }\n    }\n  }\n\n  /**\n   * 获取文件扩展名\n   */\n  private getFileExtension(filePath: string): string {\n    const ext = filePath.split('.').pop()\n    return ext ? `.${ext}` : 'unknown'\n  }\n\n  /**\n   * 创建空的性能指标\n   */\n  private createEmptyMetrics(): PerformanceMetrics {\n    return {\n      buildTime: 0,\n      memoryUsage: this.getCurrentMemoryUsage(),\n      cacheStats: this.globalStats.cacheStats,\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: this.getSystemResources()\n    }\n  }\n}\n","/**\n * 测试运行器\n * \n * 负责检测测试框架、安装依赖和运行测试用例\n * 支持多种测试框架的自动检测和运行\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport * as path from 'path'\nimport * as fs from 'fs-extra'\nimport { spawn } from 'child_process'\nimport type {\n  ITestRunner,\n  ValidationContext,\n  TestRunResult,\n  TestError,\n  TestPerformanceMetrics\n} from '../types/validation'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 支持的测试框架配置\n */\nconst TEST_FRAMEWORKS = {\n  vitest: {\n    configFiles: ['vitest.config.ts', 'vitest.config.js', 'vite.config.ts', 'vite.config.js'],\n    command: 'vitest',\n    args: ['run', '--reporter=json'],\n    dependencies: ['vitest']\n  },\n  jest: {\n    configFiles: ['jest.config.js', 'jest.config.ts', 'jest.config.json'],\n    command: 'jest',\n    args: ['--json', '--coverage=false'],\n    dependencies: ['jest']\n  },\n  mocha: {\n    configFiles: ['.mocharc.json', '.mocharc.js', '.mocharc.yaml'],\n    command: 'mocha',\n    args: ['--reporter', 'json'],\n    dependencies: ['mocha']\n  }\n}\n\n/**\n * 包管理器配置\n */\nconst PACKAGE_MANAGERS = {\n  npm: {\n    installCommand: 'npm',\n    installArgs: ['install'],\n    runCommand: 'npx'\n  },\n  yarn: {\n    installCommand: 'yarn',\n    installArgs: ['install'],\n    runCommand: 'yarn'\n  },\n  pnpm: {\n    installCommand: 'pnpm',\n    installArgs: ['install'],\n    runCommand: 'pnpm'\n  }\n}\n\n/**\n * 测试运行器实现\n */\nexport class TestRunner implements ITestRunner {\n  /** 日志记录器 */\n  private logger: Logger\n\n  /** 错误处理器 */\n  private errorHandler: ErrorHandler\n\n  /**\n   * 构造函数\n   */\n  constructor(options: {\n    logger?: Logger\n    errorHandler?: ErrorHandler\n  } = {}) {\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'TestRunner' })\n    this.errorHandler = options.errorHandler || new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 运行测试\n   */\n  async runTests(context: ValidationContext): Promise<TestRunResult> {\n    const startTime = Date.now()\n    this.logger.info('开始运行测试...')\n\n    try {\n      // 检测测试框架\n      const framework = await this.detectFramework(context.projectRoot)\n      this.logger.info(`检测到测试框架: ${framework}`)\n\n      // 获取框架配置\n      const frameworkConfig = TEST_FRAMEWORKS[framework as keyof typeof TEST_FRAMEWORKS]\n      if (!frameworkConfig) {\n        throw new Error(`不支持的测试框架: ${framework}`)\n      }\n\n      // 构建测试命令\n      const packageManager = await this.detectPackageManager(context.projectRoot)\n      const runCommand = PACKAGE_MANAGERS[packageManager as keyof typeof PACKAGE_MANAGERS].runCommand\n\n      // 运行测试\n      const testOutput = await this.executeTests(\n        context.tempDir,\n        runCommand,\n        frameworkConfig.command,\n        frameworkConfig.args,\n        context.config.timeout || 60000\n      )\n\n      // 解析测试结果\n      const result = await this.parseTestOutput(testOutput, framework)\n\n      // 计算性能指标\n      const duration = Date.now() - startTime\n      const performance: TestPerformanceMetrics = {\n        setupTime: 0,\n        executionTime: duration,\n        teardownTime: 0,\n        peakMemoryUsage: process.memoryUsage().heapUsed / 1024 / 1024,\n        cpuUsage: 0\n      }\n\n      const testResult: TestRunResult = {\n        success: result.success ?? false,\n        totalTests: result.totalTests ?? 0,\n        passedTests: result.passedTests ?? 0,\n        failedTests: result.failedTests ?? 0,\n        skippedTests: result.skippedTests ?? 0,\n        output: result.output ?? '',\n        errors: result.errors ?? [],\n        duration,\n        performance\n      }\n\n      this.logger.success(`测试运行完成: ${testResult.passedTests}/${testResult.totalTests} 通过`)\n\n      return testResult\n\n    } catch (error) {\n      const testError = this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '测试运行失败',\n        { cause: error as Error }\n      )\n\n      // 返回失败结果\n      return {\n        success: false,\n        totalTests: 0,\n        passedTests: 0,\n        failedTests: 0,\n        skippedTests: 0,\n        duration: Date.now() - startTime,\n        output: error instanceof Error ? error.message : String(error),\n        errors: [{\n          message: testError.message,\n          stack: testError.stack,\n          type: 'runtime'\n        }],\n        performance: {\n          setupTime: 0,\n          executionTime: Date.now() - startTime,\n          teardownTime: 0,\n          peakMemoryUsage: 0,\n          cpuUsage: 0\n        }\n      }\n    }\n  }\n\n  /**\n   * 检测测试框架\n   */\n  async detectFramework(projectRoot: string): Promise<string> {\n    this.logger.info('检测测试框架...')\n\n    // 检查 package.json 中的依赖\n    const packageJsonPath = path.join(projectRoot, 'package.json')\n    if (await fs.pathExists(packageJsonPath)) {\n      const packageJson = await fs.readJson(packageJsonPath)\n      const allDeps = {\n        ...packageJson.dependencies,\n        ...packageJson.devDependencies\n      }\n\n      // 按优先级检测\n      if (allDeps.vitest) return 'vitest'\n      if (allDeps.jest) return 'jest'\n      if (allDeps.mocha) return 'mocha'\n    }\n\n    // 检查配置文件\n    for (const [framework, config] of Object.entries(TEST_FRAMEWORKS)) {\n      for (const configFile of config.configFiles) {\n        if (await fs.pathExists(path.join(projectRoot, configFile))) {\n          return framework\n        }\n      }\n    }\n\n    // 默认返回 vitest\n    this.logger.warn('未检测到测试框架，使用默认的 vitest')\n    return 'vitest'\n  }\n\n  /**\n   * 安装依赖\n   */\n  async installDependencies(context: ValidationContext): Promise<void> {\n    this.logger.info('安装依赖...')\n\n    const packageManager = await this.detectPackageManager(context.projectRoot)\n    const pmConfig = PACKAGE_MANAGERS[packageManager as keyof typeof PACKAGE_MANAGERS]\n\n    try {\n      await this.executeCommand(\n        context.tempDir,\n        pmConfig.installCommand,\n        pmConfig.installArgs,\n        context.config.environment?.installTimeout || 300000\n      )\n\n      this.logger.success('依赖安装完成')\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '依赖安装失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    this.logger.info('TestRunner 资源清理完成')\n  }\n\n  /**\n   * 检测包管理器\n   */\n  private async detectPackageManager(projectRoot: string): Promise<string> {\n    // 检查锁文件\n    if (await fs.pathExists(path.join(projectRoot, 'pnpm-lock.yaml'))) {\n      return 'pnpm'\n    }\n    if (await fs.pathExists(path.join(projectRoot, 'yarn.lock'))) {\n      return 'yarn'\n    }\n    if (await fs.pathExists(path.join(projectRoot, 'package-lock.json'))) {\n      return 'npm'\n    }\n\n    // 默认使用 npm\n    return 'npm'\n  }\n\n  /**\n   * 执行测试命令\n   */\n  private async executeTests(\n    cwd: string,\n    runCommand: string,\n    testCommand: string,\n    args: string[],\n    timeout: number\n  ): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const fullCommand = [testCommand, ...args]\n      const child = spawn(runCommand, fullCommand, {\n        cwd,\n        stdio: 'pipe',\n        shell: true\n      })\n\n      let stdout = ''\n      let stderr = ''\n\n      child.stdout?.on('data', (data) => {\n        stdout += data.toString()\n      })\n\n      child.stderr?.on('data', (data) => {\n        stderr += data.toString()\n      })\n\n      const timer = setTimeout(() => {\n        child.kill('SIGTERM')\n        reject(new Error(`测试超时 (${timeout}ms)`))\n      }, timeout)\n\n      child.on('close', (code) => {\n        clearTimeout(timer)\n        if (code === 0) {\n          resolve(stdout)\n        } else {\n          reject(new Error(`测试失败 (退出码: ${code})\\n${stderr}`))\n        }\n      })\n\n      child.on('error', (error) => {\n        clearTimeout(timer)\n        reject(error)\n      })\n    })\n  }\n\n  /**\n   * 执行命令\n   */\n  private async executeCommand(\n    cwd: string,\n    command: string,\n    args: string[],\n    timeout: number\n  ): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const child = spawn(command, args, {\n        cwd,\n        stdio: 'pipe',\n        shell: true\n      })\n\n      let stdout = ''\n      let stderr = ''\n\n      child.stdout?.on('data', (data) => {\n        stdout += data.toString()\n      })\n\n      child.stderr?.on('data', (data) => {\n        stderr += data.toString()\n      })\n\n      const timer = setTimeout(() => {\n        child.kill('SIGTERM')\n        reject(new Error(`命令超时 (${timeout}ms)`))\n      }, timeout)\n\n      child.on('close', (code) => {\n        clearTimeout(timer)\n        if (code === 0) {\n          resolve(stdout)\n        } else {\n          reject(new Error(`命令失败 (退出码: ${code})\\n${stderr}`))\n        }\n      })\n\n      child.on('error', (error) => {\n        clearTimeout(timer)\n        reject(error)\n      })\n    })\n  }\n\n  /**\n   * 解析测试输出\n   */\n  private async parseTestOutput(output: string, framework: string): Promise<Partial<TestRunResult>> {\n    try {\n      // 尝试解析 JSON 输出\n      const result = JSON.parse(output)\n\n      // 根据不同框架解析结果\n      switch (framework) {\n        case 'vitest':\n          return this.parseVitestOutput(result)\n        case 'jest':\n          return this.parseJestOutput(result)\n        case 'mocha':\n          return this.parseMochaOutput(result)\n        default:\n          return this.parseGenericOutput(result)\n      }\n    } catch (error) {\n      // 如果无法解析 JSON，返回基本结果\n      return {\n        success: output.includes('PASS') || output.includes('✓'),\n        totalTests: 0,\n        passedTests: 0,\n        failedTests: 0,\n        skippedTests: 0,\n        output,\n        errors: []\n      }\n    }\n  }\n\n  /**\n   * 解析 Vitest 输出\n   */\n  private parseVitestOutput(result: any): Partial<TestRunResult> {\n    return {\n      success: result.success || false,\n      totalTests: result.numTotalTests || 0,\n      passedTests: result.numPassedTests || 0,\n      failedTests: result.numFailedTests || 0,\n      skippedTests: result.numPendingTests || 0,\n      output: JSON.stringify(result, null, 2),\n      errors: this.extractVitestErrors(result)\n    }\n  }\n\n  /**\n   * 解析 Jest 输出\n   */\n  private parseJestOutput(result: any): Partial<TestRunResult> {\n    return {\n      success: result.success || false,\n      totalTests: result.numTotalTests || 0,\n      passedTests: result.numPassedTests || 0,\n      failedTests: result.numFailedTests || 0,\n      skippedTests: result.numPendingTests || 0,\n      output: JSON.stringify(result, null, 2),\n      errors: this.extractJestErrors(result)\n    }\n  }\n\n  /**\n   * 解析 Mocha 输出\n   */\n  private parseMochaOutput(result: any): Partial<TestRunResult> {\n    const tests = result.tests || []\n    const passed = tests.filter((t: any) => t.state === 'passed').length\n    const failed = tests.filter((t: any) => t.state === 'failed').length\n    const pending = tests.filter((t: any) => t.pending).length\n\n    return {\n      success: failed === 0,\n      totalTests: tests.length,\n      passedTests: passed,\n      failedTests: failed,\n      skippedTests: pending,\n      output: JSON.stringify(result, null, 2),\n      errors: this.extractMochaErrors(result)\n    }\n  }\n\n  /**\n   * 解析通用输出\n   */\n  private parseGenericOutput(result: any): Partial<TestRunResult> {\n    return {\n      success: result.success || false,\n      totalTests: result.totalTests || 0,\n      passedTests: result.passedTests || 0,\n      failedTests: result.failedTests || 0,\n      skippedTests: result.skippedTests || 0,\n      output: JSON.stringify(result, null, 2),\n      errors: []\n    }\n  }\n\n  /**\n   * 提取 Vitest 错误\n   */\n  private extractVitestErrors(result: any): TestError[] {\n    const errors: TestError[] = []\n    // 简化实现，实际应该解析具体的错误信息\n    if (result.testResults) {\n      result.testResults.forEach((testResult: any) => {\n        if (testResult.assertionResults) {\n          testResult.assertionResults.forEach((assertion: any) => {\n            if (assertion.status === 'failed') {\n              errors.push({\n                message: assertion.failureMessages?.[0] || '测试失败',\n                type: 'assertion',\n                file: testResult.name\n              })\n            }\n          })\n        }\n      })\n    }\n    return errors\n  }\n\n  /**\n   * 提取 Jest 错误\n   */\n  private extractJestErrors(result: any): TestError[] {\n    const errors: TestError[] = []\n    // 简化实现\n    if (result.testResults) {\n      result.testResults.forEach((testResult: any) => {\n        if (testResult.message) {\n          errors.push({\n            message: testResult.message,\n            type: 'assertion',\n            file: testResult.name\n          })\n        }\n      })\n    }\n    return errors\n  }\n\n  /**\n   * 提取 Mocha 错误\n   */\n  private extractMochaErrors(result: any): TestError[] {\n    const errors: TestError[] = []\n    if (result.failures) {\n      result.failures.forEach((failure: any) => {\n        errors.push({\n          message: failure.err?.message || '测试失败',\n          stack: failure.err?.stack,\n          type: 'assertion',\n          file: failure.file\n        })\n      })\n    }\n    return errors\n  }\n}\n","/**\n * 验证报告生成器\n * \n * 负责生成和输出验证报告\n * 支持多种格式的报告输出\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport * as path from 'path'\nimport * as fs from 'fs-extra'\nimport type {\n  IValidationReporter,\n  ValidationReport,\n  ValidationReportingConfig,\n  ValidationResult,\n  ValidationSummary\n} from '../types/validation'\nimport { Logger } from '../utils/logger'\n\n/**\n * 验证报告生成器实现\n */\nexport class ValidationReporter implements IValidationReporter {\n  /** 日志记录器 */\n  private logger: Logger\n\n  /**\n   * 构造函数\n   */\n  constructor(options: {\n    logger?: Logger\n  } = {}) {\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'ValidationReporter' })\n  }\n\n  /**\n   * 生成报告\n   */\n  async generateReport(\n    result: ValidationResult,\n    _config: ValidationReportingConfig\n  ): Promise<ValidationReport> {\n    this.logger.info('生成验证报告...')\n\n    const report: ValidationReport = {\n      title: `构建验证报告 - ${result.validationId}`,\n      summary: this.generateSummary(result),\n      details: {\n        fileResults: [],\n        formatResults: [],\n        typeResults: [],\n        styleResults: []\n      },\n      recommendations: this.generateRecommendations(result),\n      generatedAt: Date.now(),\n      version: '1.0.0'\n    }\n\n    return report\n  }\n\n  /**\n   * 输出报告\n   */\n  async outputReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    this.logger.info(`输出验证报告 (格式: ${config.format})`)\n\n    switch (config.format) {\n      case 'console':\n        await this.outputConsoleReport(report, config)\n        break\n      case 'json':\n        await this.outputJsonReport(report, config)\n        break\n      case 'html':\n        await this.outputHtmlReport(report, config)\n        break\n      case 'markdown':\n        await this.outputMarkdownReport(report, config)\n        break\n      default:\n        await this.outputConsoleReport(report, config)\n    }\n  }\n\n  /**\n   * 生成摘要\n   */\n  private generateSummary(result: ValidationResult): ValidationSummary {\n    return {\n      status: result.success ? 'passed' : 'failed',\n      totalFiles: result.stats.totalFiles,\n      passedFiles: result.success ? result.stats.totalFiles : 0,\n      failedFiles: result.success ? 0 : result.stats.totalFiles,\n      totalTests: result.testResult.totalTests,\n      passedTests: result.testResult.passedTests,\n      failedTests: result.testResult.failedTests,\n      duration: result.duration\n    }\n  }\n\n  /**\n   * 生成建议\n   */\n  private generateRecommendations(result: ValidationResult): any[] {\n    const recommendations: any[] = []\n\n    // 如果验证失败，添加建议\n    if (!result.success) {\n      recommendations.push({\n        type: 'error',\n        title: '验证失败',\n        description: '打包后的代码验证失败，请检查构建配置和测试用例',\n        solution: '检查构建输出和测试日志，修复相关问题',\n        priority: 'high'\n      })\n    }\n\n    // 如果有错误，添加具体建议\n    if (result.errors.length > 0) {\n      recommendations.push({\n        type: 'error',\n        title: '发现错误',\n        description: `发现 ${result.errors.length} 个错误`,\n        solution: '查看详细错误信息并逐一修复',\n        priority: 'high'\n      })\n    }\n\n    // 如果有警告，添加建议\n    if (result.warnings.length > 0) {\n      recommendations.push({\n        type: 'warning',\n        title: '发现警告',\n        description: `发现 ${result.warnings.length} 个警告`,\n        solution: '查看警告信息并考虑优化',\n        priority: 'medium'\n      })\n    }\n\n    // 性能建议\n    if (result.duration > 60000) {\n      recommendations.push({\n        type: 'optimization',\n        title: '验证耗时较长',\n        description: `验证耗时 ${Math.round(result.duration / 1000)}s，建议优化`,\n        solution: '考虑减少测试用例数量或优化测试性能',\n        priority: 'low'\n      })\n    }\n\n    return recommendations\n  }\n\n  /**\n   * 输出控制台报告\n   */\n  private async outputConsoleReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const { summary } = report\n\n    console.log('\\n' + '='.repeat(60))\n    console.log(`📋 ${report.title}`)\n    console.log('='.repeat(60))\n\n    // 状态\n    const statusIcon = summary.status === 'passed' ? '✅' : '❌'\n    const statusText = summary.status === 'passed' ? '通过' : '失败'\n    console.log(`\\n${statusIcon} 验证状态: ${statusText}`)\n\n    // 统计信息\n    console.log('\\n📊 统计信息:')\n    console.log(`   总测试数: ${summary.totalTests}`)\n    console.log(`   通过测试: ${summary.passedTests}`)\n    console.log(`   失败测试: ${summary.failedTests}`)\n    console.log(`   验证耗时: ${Math.round(summary.duration / 1000)}s`)\n\n    // 建议\n    if (report.recommendations.length > 0) {\n      console.log('\\n💡 建议:')\n      report.recommendations.forEach((rec, index) => {\n        const icon = this.getRecommendationIcon(rec.type)\n        console.log(`   ${index + 1}. ${icon} ${rec.title}`)\n        if (config.verbose) {\n          console.log(`      ${rec.description}`)\n          if (rec.solution) {\n            console.log(`      解决方案: ${rec.solution}`)\n          }\n        }\n      })\n    }\n\n    console.log('\\n' + '='.repeat(60) + '\\n')\n  }\n\n  /**\n   * 输出 JSON 报告\n   */\n  private async outputJsonReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const outputPath = config.outputPath || 'validation-report.json'\n    const reportJson = JSON.stringify(report, null, 2)\n\n    await fs.ensureDir(path.dirname(outputPath))\n    await fs.writeFile(outputPath, reportJson, 'utf8')\n\n    this.logger.success(`JSON 报告已保存到: ${outputPath}`)\n  }\n\n  /**\n   * 输出 HTML 报告\n   */\n  private async outputHtmlReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const outputPath = config.outputPath || 'validation-report.html'\n    const html = this.generateHtmlReport(report)\n\n    await fs.ensureDir(path.dirname(outputPath))\n    await fs.writeFile(outputPath, html, 'utf8')\n\n    this.logger.success(`HTML 报告已保存到: ${outputPath}`)\n  }\n\n  /**\n   * 输出 Markdown 报告\n   */\n  private async outputMarkdownReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const outputPath = config.outputPath || 'validation-report.md'\n    const markdown = this.generateMarkdownReport(report)\n\n    await fs.ensureDir(path.dirname(outputPath))\n    await fs.writeFile(outputPath, markdown, 'utf8')\n\n    this.logger.success(`Markdown 报告已保存到: ${outputPath}`)\n  }\n\n  /**\n   * 生成 HTML 报告\n   */\n  private generateHtmlReport(report: ValidationReport): string {\n    const { summary } = report\n    const statusClass = summary.status === 'passed' ? 'success' : 'error'\n\n    return `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>${report.title}</title>\n    <style>\n        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; }\n        .header { border-bottom: 2px solid #eee; padding-bottom: 20px; margin-bottom: 30px; }\n        .status { padding: 10px 20px; border-radius: 5px; margin: 20px 0; }\n        .success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }\n        .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }\n        .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 20px 0; }\n        .stat-card { background: #f8f9fa; padding: 15px; border-radius: 5px; text-align: center; }\n        .stat-number { font-size: 2em; font-weight: bold; color: #007bff; }\n        .recommendations { margin-top: 30px; }\n        .recommendation { margin: 10px 0; padding: 15px; border-left: 4px solid #007bff; background: #f8f9fa; }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>${report.title}</h1>\n        <p>生成时间: ${new Date(report.generatedAt).toLocaleString()}</p>\n    </div>\n\n    <div class=\"status ${statusClass}\">\n        <h2>验证状态: ${summary.status === 'passed' ? '✅ 通过' : '❌ 失败'}</h2>\n    </div>\n\n    <div class=\"stats\">\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${summary.totalTests}</div>\n            <div>总测试数</div>\n        </div>\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${summary.passedTests}</div>\n            <div>通过测试</div>\n        </div>\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${summary.failedTests}</div>\n            <div>失败测试</div>\n        </div>\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${Math.round(summary.duration / 1000)}s</div>\n            <div>验证耗时</div>\n        </div>\n    </div>\n\n    ${report.recommendations.length > 0 ? `\n    <div class=\"recommendations\">\n        <h2>💡 建议</h2>\n        ${report.recommendations.map(rec => `\n        <div class=\"recommendation\">\n            <h3>${this.getRecommendationIcon(rec.type)} ${rec.title}</h3>\n            <p>${rec.description}</p>\n            ${rec.solution ? `<p><strong>解决方案:</strong> ${rec.solution}</p>` : ''}\n        </div>\n        `).join('')}\n    </div>\n    ` : ''}\n</body>\n</html>\n    `.trim()\n  }\n\n  /**\n   * 生成 Markdown 报告\n   */\n  private generateMarkdownReport(report: ValidationReport): string {\n    const { summary } = report\n\n    return `\n# ${report.title}\n\n**生成时间:** ${new Date(report.generatedAt).toLocaleString()}\n\n## 验证状态\n\n${summary.status === 'passed' ? '✅ **通过**' : '❌ **失败**'}\n\n## 统计信息\n\n| 项目 | 数量 |\n|------|------|\n| 总测试数 | ${summary.totalTests} |\n| 通过测试 | ${summary.passedTests} |\n| 失败测试 | ${summary.failedTests} |\n| 验证耗时 | ${Math.round(summary.duration / 1000)}s |\n\n${report.recommendations.length > 0 ? `\n## 💡 建议\n\n${report.recommendations.map((rec, index) => `\n### ${index + 1}. ${this.getRecommendationIcon(rec.type)} ${rec.title}\n\n${rec.description}\n\n${rec.solution ? `**解决方案:** ${rec.solution}` : ''}\n`).join('')}\n` : ''}\n    `.trim()\n  }\n\n  /**\n   * 获取建议图标\n   */\n  private getRecommendationIcon(type: string): string {\n    switch (type) {\n      case 'error': return '❌'\n      case 'warning': return '⚠️'\n      case 'info': return 'ℹ️'\n      case 'optimization': return '⚡'\n      default: return '💡'\n    }\n  }\n}\n","/**\n * 临时环境管理器\n * \n * 负责创建、管理和清理验证过程中的临时环境\n * 包括临时目录创建、文件复制、依赖替换等功能\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport * as path from 'path'\nimport * as fs from 'fs-extra'\nimport * as os from 'os'\nimport { randomUUID } from 'crypto'\nimport type { ValidationContext } from '../types/validation'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 临时环境管理器实现\n */\nexport class TemporaryEnvironment {\n  /** 日志记录器 */\n  private logger: Logger\n\n  /** 错误处理器 */\n  private errorHandler: ErrorHandler\n\n  /** 创建的临时目录列表 */\n  private tempDirs: Set<string> = new Set()\n\n  /**\n   * 构造函数\n   */\n  constructor(options: {\n    logger?: Logger\n    errorHandler?: ErrorHandler\n  } = {}) {\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'TemporaryEnvironment' })\n    this.errorHandler = options.errorHandler || new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 创建临时环境\n   */\n  async create(context: ValidationContext): Promise<void> {\n    this.logger.info('创建临时验证环境...')\n\n    try {\n      // 创建临时目录\n      const tempDir = await this.createTempDirectory(context)\n      context.tempDir = tempDir\n      this.tempDirs.add(tempDir)\n\n      // 复制项目文件到临时目录\n      await this.copyProjectFiles(context)\n\n      // 修改 package.json 以使用构建产物\n      await this.updatePackageJson(context)\n\n      this.logger.success(`临时环境创建完成: ${tempDir}`)\n\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '创建临时环境失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 复制构建产物到临时环境\n   */\n  async copyBuildOutputs(context: ValidationContext): Promise<void> {\n    this.logger.info('复制构建产物到临时环境...')\n\n    try {\n      // 复制构建输出文件\n      for (const output of context.buildResult.outputs) {\n        // 假设输出文件在输出目录中\n        const sourcePath = path.join(context.outputDir, output.fileName)\n        const targetPath = path.join(context.tempDir, output.fileName)\n\n        if (await fs.pathExists(sourcePath)) {\n          await fs.ensureDir(path.dirname(targetPath))\n          await fs.copy(sourcePath, targetPath)\n          this.logger.debug(`复制文件: ${sourcePath} -> ${targetPath}`)\n        }\n      }\n\n      this.logger.success('构建产物复制完成')\n\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '复制构建产物失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 清理临时环境\n   */\n  async cleanup(context: ValidationContext): Promise<void> {\n    this.logger.info('清理临时环境...')\n\n    try {\n      if (context.tempDir && this.tempDirs.has(context.tempDir)) {\n        await fs.remove(context.tempDir)\n        this.tempDirs.delete(context.tempDir)\n        this.logger.success(`临时目录已删除: ${context.tempDir}`)\n      }\n    } catch (error) {\n      this.logger.warn(`清理临时目录失败: ${error}`)\n    }\n  }\n\n  /**\n   * 清理所有临时环境\n   */\n  async dispose(): Promise<void> {\n    this.logger.info('清理所有临时环境...')\n\n    const cleanupPromises = Array.from(this.tempDirs).map(async (tempDir) => {\n      try {\n        await fs.remove(tempDir)\n        this.logger.debug(`临时目录已删除: ${tempDir}`)\n      } catch (error) {\n        this.logger.warn(`清理临时目录失败: ${tempDir}, 错误: ${error}`)\n      }\n    })\n\n    await Promise.all(cleanupPromises)\n    this.tempDirs.clear()\n\n    this.logger.success('所有临时环境清理完成')\n  }\n\n  /**\n   * 创建临时目录\n   */\n  private async createTempDirectory(context: ValidationContext): Promise<string> {\n    const tempDirName = `ldesign-builder-validation-${randomUUID().slice(0, 8)}`\n\n    // 优先使用配置中指定的临时目录\n    const baseTempDir = context.config.environment?.tempDir\n      ? path.resolve(context.projectRoot, context.config.environment.tempDir)\n      : path.join(os.tmpdir(), 'ldesign-builder')\n\n    const tempDir = path.join(baseTempDir, tempDirName)\n\n    await fs.ensureDir(tempDir)\n    this.logger.debug(`创建临时目录: ${tempDir}`)\n\n    return tempDir\n  }\n\n  /**\n   * 复制项目文件到临时目录\n   */\n  private async copyProjectFiles(context: ValidationContext): Promise<void> {\n    this.logger.info('复制项目文件到临时目录...')\n\n    const filesToCopy = [\n      'package.json',\n      'package-lock.json',\n      'yarn.lock',\n      'pnpm-lock.yaml',\n      'tsconfig.json',\n      'vitest.config.ts',\n      'vitest.config.js',\n      'jest.config.js',\n      'jest.config.ts',\n      '.mocharc.json',\n      '.mocharc.js'\n    ]\n\n    // 复制配置文件\n    for (const file of filesToCopy) {\n      const sourcePath = path.join(context.projectRoot, file)\n      if (await fs.pathExists(sourcePath)) {\n        const targetPath = path.join(context.tempDir, file)\n        await fs.copy(sourcePath, targetPath)\n        this.logger.debug(`复制配置文件: ${file}`)\n      }\n    }\n\n    // 复制测试文件\n    await this.copyTestFiles(context)\n\n    // 复制源码文件（如果需要）\n    await this.copySourceFiles(context)\n  }\n\n  /**\n   * 复制测试文件\n   */\n  private async copyTestFiles(context: ValidationContext): Promise<void> {\n    const testPatterns = Array.isArray(context.config.testPattern)\n      ? context.config.testPattern\n      : [context.config.testPattern || '**/*.test.{js,ts}']\n\n    const glob = await import('fast-glob')\n\n    for (const pattern of testPatterns) {\n      const testFiles = await glob.default(pattern, {\n        cwd: context.projectRoot,\n        absolute: false\n      })\n\n      for (const testFile of testFiles) {\n        const sourcePath = path.join(context.projectRoot, testFile)\n        const targetPath = path.join(context.tempDir, testFile)\n\n        await fs.ensureDir(path.dirname(targetPath))\n        await fs.copy(sourcePath, targetPath)\n\n        this.logger.debug(`复制测试文件: ${testFile}`)\n      }\n    }\n  }\n\n  /**\n   * 复制源码文件\n   */\n  private async copySourceFiles(context: ValidationContext): Promise<void> {\n    // 如果测试需要访问源码，复制 src 目录\n    const srcDir = path.join(context.projectRoot, 'src')\n    if (await fs.pathExists(srcDir)) {\n      const targetSrcDir = path.join(context.tempDir, 'src')\n      await fs.copy(srcDir, targetSrcDir)\n      this.logger.debug('复制源码目录: src')\n    }\n  }\n\n  /**\n   * 更新 package.json 以使用构建产物\n   */\n  private async updatePackageJson(context: ValidationContext): Promise<void> {\n    const packageJsonPath = path.join(context.tempDir, 'package.json')\n\n    if (!(await fs.pathExists(packageJsonPath))) {\n      this.logger.warn('临时环境中未找到 package.json')\n      return\n    }\n\n    try {\n      const packageJson = await fs.readJson(packageJsonPath)\n\n      // 更新主入口点指向构建产物\n      const outputs = context.buildResult.outputs\n\n      // 查找主要的输出文件（基于文件名模式）\n      const esmOutput = outputs.find(o => o.fileName.includes('.js') && !o.fileName.includes('.cjs'))\n      const cjsOutput = outputs.find(o => o.fileName.includes('.cjs'))\n      const typesOutput = outputs.find(o => o.fileName.endsWith('.d.ts'))\n\n      // 更新入口点\n      if (esmOutput) {\n        packageJson.module = esmOutput.fileName\n        packageJson.exports = packageJson.exports || {}\n        packageJson.exports['.'] = packageJson.exports['.'] || {}\n        packageJson.exports['.'].import = esmOutput.fileName\n      }\n\n      if (cjsOutput) {\n        packageJson.main = cjsOutput.fileName\n        packageJson.exports = packageJson.exports || {}\n        packageJson.exports['.'] = packageJson.exports['.'] || {}\n        packageJson.exports['.'].require = cjsOutput.fileName\n      }\n\n      if (typesOutput) {\n        packageJson.types = typesOutput.fileName\n        packageJson.typings = typesOutput.fileName\n      }\n\n      // 保存更新后的 package.json\n      await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 })\n\n      this.logger.success('package.json 已更新为使用构建产物')\n\n    } catch (error) {\n      this.logger.warn(`更新 package.json 失败: ${error}`)\n    }\n  }\n\n  /**\n   * 获取临时目录列表\n   */\n  getTempDirectories(): string[] {\n    return Array.from(this.tempDirs)\n  }\n\n  /**\n   * 检查临时目录是否存在\n   */\n  async exists(tempDir: string): Promise<boolean> {\n    return fs.pathExists(tempDir)\n  }\n\n  /**\n   * 获取临时目录大小\n   */\n  async getSize(tempDir: string): Promise<number> {\n    try {\n      const stats = await this.getDirectoryStats(tempDir)\n      return stats.size\n    } catch (error) {\n      return 0\n    }\n  }\n\n  /**\n   * 获取目录统计信息\n   */\n  private async getDirectoryStats(dirPath: string): Promise<{ size: number; files: number }> {\n    let totalSize = 0\n    let totalFiles = 0\n\n    const items = await fs.readdir(dirPath)\n\n    for (const item of items) {\n      const itemPath = path.join(dirPath, item)\n      const stats = await fs.stat(itemPath)\n\n      if (stats.isDirectory()) {\n        const subStats = await this.getDirectoryStats(itemPath)\n        totalSize += subStats.size\n        totalFiles += subStats.files\n      } else {\n        totalSize += stats.size\n        totalFiles += 1\n      }\n    }\n\n    return { size: totalSize, files: totalFiles }\n  }\n}\n","/**\n * 打包后验证器\n * \n * 负责在构建完成后验证打包产物的正确性\n * 通过运行测试用例确保打包前后功能一致性\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport { randomUUID } from 'crypto'\nimport type {\n  IPostBuildValidator,\n  PostBuildValidationConfig,\n  ValidationContext,\n  ValidationResult,\n  ValidationReport,\n  ValidationStats,\n  ValidationSummary,\n  ValidationDetails\n} from '../types/validation'\nimport { TestRunner } from './TestRunner'\nimport { ValidationReporter } from './ValidationReporter'\nimport { TemporaryEnvironment } from './TemporaryEnvironment'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 默认验证配置\n */\nconst DEFAULT_VALIDATION_CONFIG: Required<PostBuildValidationConfig> = {\n  enabled: true,\n  testFramework: 'auto',\n  testPattern: ['**/*.test.{js,ts}', '**/*.spec.{js,ts}'],\n  timeout: 60000,\n  failOnError: true,\n  environment: {\n    tempDir: '.validation-temp',\n    keepTempFiles: false,\n    env: {},\n    nodeVersion: process.version,\n    packageManager: 'auto',\n    installDependencies: true,\n    installTimeout: 300000\n  },\n  reporting: {\n    format: 'console',\n    outputPath: 'validation-report',\n    verbose: false,\n    logLevel: 'info',\n    includePerformance: true,\n    includeCoverage: false\n  },\n  hooks: {},\n  scope: {\n    formats: ['esm', 'cjs'],\n    fileTypes: ['js', 'ts', 'dts'],\n    exclude: ['**/*.d.ts', '**/node_modules/**'],\n    include: ['**/*'],\n    validateTypes: true,\n    validateStyles: false,\n    validateSourceMaps: false\n  }\n}\n\n/**\n * 打包后验证器实现\n */\nexport class PostBuildValidator extends EventEmitter implements IPostBuildValidator {\n  /** 验证配置 */\n  private config: PostBuildValidationConfig\n\n  /** 测试运行器 */\n  private testRunner: TestRunner\n\n  /** 验证报告生成器 */\n  private reporter: ValidationReporter\n\n  /** 临时环境管理器 */\n  private tempEnvironment: TemporaryEnvironment\n\n  /** 日志记录器 */\n  private logger: Logger\n\n  /** 错误处理器 */\n  private errorHandler: ErrorHandler\n\n  /**\n   * 构造函数\n   */\n  constructor(\n    config: PostBuildValidationConfig = {},\n    options: {\n      logger?: Logger\n      errorHandler?: ErrorHandler\n    } = {}\n  ) {\n    super()\n\n    // 合并配置\n    this.config = this.mergeConfig(DEFAULT_VALIDATION_CONFIG, config)\n\n    // 初始化依赖\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'PostBuildValidator' })\n    this.errorHandler = options.errorHandler || new ErrorHandler({ logger: this.logger })\n\n    // 初始化组件\n    this.testRunner = new TestRunner({\n      logger: this.logger,\n      errorHandler: this.errorHandler\n    })\n\n    this.reporter = new ValidationReporter({\n      logger: this.logger\n    })\n\n    this.tempEnvironment = new TemporaryEnvironment({\n      logger: this.logger,\n      errorHandler: this.errorHandler\n    })\n\n    this.logger.info('PostBuildValidator 初始化完成')\n  }\n\n  /**\n   * 执行验证\n   */\n  async validate(context: ValidationContext): Promise<ValidationResult> {\n    const validationId = randomUUID()\n    const startTime = Date.now()\n\n    this.logger.info(`开始打包后验证 (ID: ${validationId})`)\n\n    // 发出验证开始事件\n    this.emit('validation:start', { context, validationId, startTime })\n\n    try {\n      // 执行验证前钩子\n      if (this.config.hooks?.beforeValidation) {\n        await this.config.hooks.beforeValidation(context)\n      }\n\n      // 创建验证统计对象\n      const stats: ValidationStats = {\n        startTime,\n        endTime: 0,\n        totalDuration: 0,\n        setupDuration: 0,\n        testDuration: 0,\n        reportDuration: 0,\n        cleanupDuration: 0,\n        totalFiles: 0,\n        totalTests: 0,\n        peakMemoryUsage: 0\n      }\n\n      // 1. 准备验证环境\n      const setupStartTime = Date.now()\n      await this.setupValidationEnvironment(context)\n      stats.setupDuration = Date.now() - setupStartTime\n\n      // 执行环境准备后钩子\n      if (this.config.hooks?.afterEnvironmentSetup) {\n        await this.config.hooks.afterEnvironmentSetup(context)\n      }\n\n      // 2. 运行测试\n      const testStartTime = Date.now()\n      const testResult = await this.runValidationTests(context)\n      stats.testDuration = Date.now() - testStartTime\n      stats.totalTests = testResult.totalTests\n\n      // 3. 生成验证结果\n      const endTime = Date.now()\n      stats.endTime = endTime\n      stats.totalDuration = endTime - startTime\n\n      const validationResult: ValidationResult = {\n        success: testResult.success,\n        duration: stats.totalDuration,\n        testResult,\n        report: await this.generateValidationReport(context, testResult, stats),\n        errors: [],\n        warnings: [],\n        stats,\n        timestamp: endTime,\n        validationId\n      }\n\n      // 4. 生成报告\n      const reportStartTime = Date.now()\n      await this.outputValidationReport(validationResult)\n      stats.reportDuration = Date.now() - reportStartTime\n\n      // 5. 清理环境\n      const cleanupStartTime = Date.now()\n      await this.cleanupValidationEnvironment(context)\n      stats.cleanupDuration = Date.now() - cleanupStartTime\n\n      // 执行验证完成后钩子\n      if (this.config.hooks?.afterValidation) {\n        await this.config.hooks.afterValidation(context, validationResult)\n      }\n\n      // 发出验证完成事件\n      this.emit('validation:complete', { context, result: validationResult })\n\n      this.logger.success(`验证完成 (ID: ${validationId}), 耗时: ${stats.totalDuration}ms`)\n\n      return validationResult\n\n    } catch (error) {\n      const validationError = this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '验证过程失败',\n        { cause: error as Error }\n      )\n\n      // 执行验证失败钩子\n      if (this.config.hooks?.onValidationError) {\n        await this.config.hooks.onValidationError(context, validationError)\n      }\n\n      // 发出验证失败事件\n      this.emit('validation:error', { context, error: validationError, validationId })\n\n      // 清理环境\n      try {\n        await this.cleanupValidationEnvironment(context)\n      } catch (cleanupError) {\n        this.logger.warn('清理验证环境时出错:', cleanupError)\n      }\n\n      throw validationError\n    }\n  }\n\n  /**\n   * 设置配置\n   */\n  setConfig(config: PostBuildValidationConfig): void {\n    this.config = this.mergeConfig(this.config, config)\n    this.logger.info('验证配置已更新')\n  }\n\n  /**\n   * 获取配置\n   */\n  getConfig(): PostBuildValidationConfig {\n    return { ...this.config }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    this.logger.info('正在清理 PostBuildValidator 资源...')\n\n    // 清理组件\n    await this.testRunner.dispose()\n    await this.tempEnvironment.dispose()\n\n    // 移除所有事件监听器\n    this.removeAllListeners()\n\n    this.logger.info('PostBuildValidator 资源清理完成')\n  }\n\n  /**\n   * 准备验证环境\n   */\n  private async setupValidationEnvironment(context: ValidationContext): Promise<void> {\n    this.logger.info('准备验证环境...')\n\n    // 创建临时目录\n    await this.tempEnvironment.create(context)\n\n    // 复制构建产物到临时环境\n    await this.tempEnvironment.copyBuildOutputs(context)\n\n    // 安装依赖（如果需要）\n    if (this.config.environment?.installDependencies) {\n      await this.testRunner.installDependencies(context)\n    }\n\n    this.logger.success('验证环境准备完成')\n  }\n\n  /**\n   * 运行验证测试\n   */\n  private async runValidationTests(context: ValidationContext): Promise<any> {\n    this.logger.info('运行验证测试...')\n\n    // 执行测试前钩子\n    if (this.config.hooks?.beforeTestRun) {\n      await this.config.hooks.beforeTestRun(context)\n    }\n\n    // 运行测试\n    const testResult = await this.testRunner.runTests(context)\n\n    // 执行测试后钩子\n    if (this.config.hooks?.afterTestRun) {\n      await this.config.hooks.afterTestRun(context, testResult)\n    }\n\n    this.logger.success(`测试运行完成: ${testResult.passedTests}/${testResult.totalTests} 通过`)\n\n    return testResult\n  }\n\n  /**\n   * 生成验证报告\n   */\n  private async generateValidationReport(\n    context: ValidationContext,\n    testResult: any,\n    stats: ValidationStats\n  ): Promise<ValidationReport> {\n    this.logger.info('生成验证报告...')\n\n    const summary: ValidationSummary = {\n      status: testResult.success ? 'passed' : 'failed',\n      totalFiles: stats.totalFiles,\n      passedFiles: stats.totalFiles, // 简化实现\n      failedFiles: 0,\n      totalTests: testResult.totalTests,\n      passedTests: testResult.passedTests,\n      failedTests: testResult.failedTests,\n      duration: stats.totalDuration\n    }\n\n    const details: ValidationDetails = {\n      fileResults: [],\n      formatResults: [],\n      typeResults: [],\n      styleResults: []\n    }\n\n    const report: ValidationReport = {\n      title: `构建验证报告 - ${context.buildContext.buildId}`,\n      summary,\n      details,\n      recommendations: [],\n      generatedAt: Date.now(),\n      version: '1.0.0'\n    }\n\n    return report\n  }\n\n  /**\n   * 输出验证报告\n   */\n  private async outputValidationReport(result: ValidationResult): Promise<void> {\n    if (this.config.reporting) {\n      await this.reporter.outputReport(result.report, this.config.reporting)\n    }\n  }\n\n  /**\n   * 清理验证环境\n   */\n  private async cleanupValidationEnvironment(context: ValidationContext): Promise<void> {\n    this.logger.info('清理验证环境...')\n\n    if (!this.config.environment?.keepTempFiles) {\n      await this.tempEnvironment.cleanup(context)\n    }\n\n    this.logger.success('验证环境清理完成')\n  }\n\n  /**\n   * 合并配置\n   */\n  private mergeConfig(\n    base: PostBuildValidationConfig,\n    override: PostBuildValidationConfig\n  ): PostBuildValidationConfig {\n    return {\n      ...base,\n      ...override,\n      environment: {\n        ...base.environment,\n        ...override.environment\n      },\n      reporting: {\n        ...base.reporting,\n        ...override.reporting\n      },\n      hooks: {\n        ...base.hooks,\n        ...override.hooks\n      },\n      scope: {\n        ...base.scope,\n        ...override.scope\n      }\n    }\n  }\n}\n","/**\n * Rollup 适配器\n *\n * 提供 Rollup 打包器的适配实现\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type {\n  IBundlerAdapter,\n  UnifiedConfig,\n  AdapterOptions,\n  BundlerSpecificConfig,\n  BundlerSpecificPlugin\n} from '../../types/adapter'\nimport type { BuildResult, BuildWatcher } from '../../types/builder'\nimport type { PerformanceMetrics } from '../../types/performance'\nimport { Logger } from '../../utils/logger'\nimport { BuilderError } from '../../utils/error-handler'\nimport { ErrorCode } from '../../constants/errors'\n\n/**\n * Rollup 适配器类\n */\nexport class RollupAdapter implements IBundlerAdapter {\n  readonly name = 'rollup' as const\n  readonly version: string\n  readonly available: boolean\n\n  private logger: Logger\n  private performanceMonitor: any\n  private multiConfigs?: any[]\n\n  constructor(options: Partial<AdapterOptions> = {}) {\n    this.logger = options.logger || new Logger()\n    this.performanceMonitor = options.performanceMonitor\n\n    // 初始化时假设可用，在实际使用时再检查\n    this.version = 'unknown'\n    this.available = true\n\n    this.logger.debug('Rollup 适配器初始化')\n  }\n\n  /**\n   * 执行构建\n   */\n  async build(config: UnifiedConfig): Promise<BuildResult> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rollup 适配器不可用'\n      )\n    }\n\n    try {\n      const rollup = await this.loadRollup()\n      const rollupConfig = await this.transformConfig(config)\n\n      this.logger.info('开始 Rollup 构建...')\n      const startTime = Date.now()\n\n      let results: any[] = []\n\n      // 如果有多个配置，分别构建每个配置\n      if (this.multiConfigs && this.multiConfigs.length > 1) {\n        for (const singleConfig of this.multiConfigs) {\n          // 创建 bundle\n          const bundle = await rollup.rollup(singleConfig)\n\n          // 生成输出\n          const { output } = await bundle.generate(singleConfig.output)\n          results.push(...output)\n\n          // 写入文件\n          await bundle.write(singleConfig.output)\n          await bundle.close()\n        }\n      } else {\n        // 单配置构建\n        const bundle = await rollup.rollup(rollupConfig)\n\n        // 生成输出\n        const outputs = Array.isArray(rollupConfig.output)\n          ? rollupConfig.output\n          : [rollupConfig.output]\n\n        for (const outputConfig of outputs) {\n          const { output } = await bundle.generate(outputConfig)\n          results.push(...output)\n        }\n\n        // 写入文件\n        for (const outputConfig of outputs) {\n          await bundle.write(outputConfig)\n        }\n\n        await bundle.close()\n      }\n\n      const duration = Date.now() - startTime\n\n      // 构建结果\n      const buildResult: BuildResult = {\n        success: true,\n        outputs: results.map(chunk => ({\n          fileName: chunk.fileName,\n          size: chunk.type === 'chunk' ? chunk.code.length : chunk.source.length,\n          source: chunk.type === 'chunk' ? chunk.code : chunk.source,\n          type: chunk.type,\n          format: 'esm', // TODO: 从配置获取\n          gzipSize: 0 // TODO: 计算 gzip 大小\n        })),\n        duration,\n        stats: {\n          buildTime: duration,\n          fileCount: results.length,\n          totalSize: {\n            raw: results.reduce((total, chunk) =>\n              total + (chunk.type === 'chunk' ? chunk.code.length : chunk.source.length), 0\n            ),\n            gzip: 0,\n            brotli: 0,\n            byType: {},\n            byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 },\n            largest: { file: '', size: 0 },\n            fileCount: results.length\n          },\n          byFormat: {\n            esm: {\n              fileCount: results.length,\n              size: {\n                raw: results.reduce((total, chunk) =>\n                  total + (chunk.type === 'chunk' ? chunk.code.length : chunk.source.length), 0\n                ),\n                gzip: 0,\n                brotli: 0,\n                byType: {},\n                byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 },\n                largest: { file: '', size: 0 },\n                fileCount: results.length\n              }\n            },\n            cjs: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n            umd: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n            iife: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n            css: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } }\n          },\n          modules: {\n            total: 0,\n            external: 0,\n            internal: 0,\n            largest: {\n              id: '',\n              size: 0,\n              renderedLength: 0,\n              originalLength: 0,\n              isEntry: false,\n              isExternal: false,\n              importedIds: [],\n              dynamicallyImportedIds: [],\n              importers: [],\n              dynamicImporters: []\n            }\n          },\n          dependencies: {\n            total: 0,\n            external: [],\n            bundled: [],\n            circular: []\n          }\n        },\n        performance: this.getPerformanceMetrics(),\n        warnings: [],\n        errors: [],\n        buildId: `rollup-${Date.now()}`,\n        timestamp: Date.now(),\n        bundler: 'rollup',\n        mode: 'production'\n      }\n\n      this.logger.success(`Rollup 构建完成 (${duration}ms)`)\n      return buildResult\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `Rollup 构建失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 启动监听模式\n   */\n  async watch(config: UnifiedConfig): Promise<BuildWatcher> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rollup 适配器不可用'\n      )\n    }\n\n    try {\n      const rollup = await this.loadRollup()\n      const rollupConfig = await this.transformConfig(config)\n\n      // 添加监听配置\n      const watchOptions = config.watch || {}\n      const watchConfig = {\n        ...rollupConfig,\n        watch: {\n          include: (watchOptions as any).include || ['src/**/*'],\n          exclude: (watchOptions as any).exclude || ['node_modules/**/*'],\n          ...(typeof watchOptions === 'object' ? watchOptions : {})\n        }\n      }\n\n      const watcher = rollup.watch(watchConfig)\n\n      // 创建统一的监听器接口\n      const buildWatcher = {\n        patterns: watchConfig.watch.include,\n        watching: true,\n\n        async close() {\n          await watcher.close()\n        },\n\n        on(event: string, listener: (...args: any[]) => void) {\n          watcher.on(event, listener)\n          return this\n        },\n\n        off(event: string, listener: (...args: any[]) => void) {\n          watcher.off(event, listener)\n          return this\n        },\n\n        emit(_event: string, ..._args: any[]) {\n          return false // Rollup watcher 不支持 emit\n        }\n      } as BuildWatcher\n\n      this.logger.info('Rollup 监听模式已启动')\n      return buildWatcher\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `启动 Rollup 监听模式失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 转换配置\n   */\n  async transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig> {\n    // 转换为 Rollup 配置格式\n    const basePlugins = await this.getBasePlugins(config)\n\n    const rollupConfig: any = {\n      input: config.input,\n      external: config.external\n    }\n\n    // 转换输出配置\n    if (config.output) {\n      const outputConfig = config.output\n\n      // 处理多格式输出\n      if (Array.isArray(outputConfig.format)) {\n        // 检查是否为多入口构建\n        const isMultiEntry = this.isMultiEntryBuild(config.input)\n\n        // 处理 UMD 格式的特殊逻辑\n        let formats = outputConfig.format\n        let umdConfig: any = null\n\n        if (isMultiEntry) {\n          const originalFormats = [...formats]\n\n          // 检查是否有 UMD 配置且强制启用\n          const hasUMD = formats.includes('umd')\n          const forceUMD = (config as any).umd?.forceMultiEntry || false\n          const umdEnabled = (config as any).umd?.enabled\n\n          this.logger.info(`多入口项目UMD检查: hasUMD=${hasUMD}, forceUMD=${forceUMD}, umdEnabled=${umdEnabled}`)\n\n          if (hasUMD && forceUMD) {\n            // 保留 UMD 格式，但使用特殊的入口配置\n            umdConfig = await this.createUMDConfig(config)\n            this.logger.info('多入口项目强制启用 UMD 构建')\n          } else if (hasUMD) {\n            // 正常情况下过滤 UMD 格式\n            formats = formats.filter(format => format !== 'umd' && format !== 'iife')\n\n            // 但如果启用了 UMD 配置，仍然创建 UMD 构建\n            if ((config as any).umd?.enabled !== false) {\n              umdConfig = await this.createUMDConfig(config)\n              this.logger.info('为多入口项目创建独立的 UMD 构建')\n            }\n          } else {\n            // 即使没有在format中指定umd，也检查umd配置\n            if ((config as any).umd?.enabled) {\n              umdConfig = await this.createUMDConfig(config)\n              this.logger.info('根据UMD配置为多入口项目创建 UMD 构建')\n            }\n            formats = formats.filter(format => format !== 'umd' && format !== 'iife')\n          }\n\n          // 如果过滤了格式，记录警告\n          const filteredFormats = originalFormats.filter(format => !formats.includes(format))\n          if (filteredFormats.length > 0 && !umdConfig) {\n            this.logger.warn(`多入口构建不支持 ${filteredFormats.join(', ')} 格式，已自动过滤`)\n          }\n        } else {\n          // 单入口项目，检查是否需要创建 UMD 构建\n          if (formats.includes('umd') || (config as any).umd?.enabled) {\n            umdConfig = await this.createUMDConfig(config)\n          }\n        }\n\n        // 为多格式输出创建多个配置\n        const configs = []\n\n        for (const format of formats) {\n          const mapped = this.mapFormat(format)\n          const isESM = format === 'esm'\n          const isCJS = format === 'cjs'\n\n          const dir = isESM ? 'es' : isCJS ? 'lib' : 'dist'\n          const entryFileNames = isESM\n            ? '[name].js'\n            : isCJS\n              ? '[name].cjs'\n              : '[name].umd.js'\n          const chunkFileNames = entryFileNames\n\n          // 为每个格式创建独立的插件配置\n          const formatPlugins = await this.transformPluginsForFormat(config.plugins || [], dir)\n\n          configs.push({\n            input: config.input,\n            external: config.external,\n            plugins: [...basePlugins, ...formatPlugins],\n            output: {\n              dir,\n              format: mapped,\n              name: outputConfig.name,\n              sourcemap: outputConfig.sourcemap,\n              globals: outputConfig.globals,\n              entryFileNames,\n              chunkFileNames,\n              exports: (outputConfig as any).exports ?? 'auto',\n              preserveModules: isESM || isCJS,\n              preserveModulesRoot: (isESM || isCJS) ? 'src' : undefined\n            },\n            treeshake: config.treeshake\n          })\n        }\n\n        // 如果有 UMD 配置，添加到配置列表中\n        if (umdConfig) {\n          configs.push(umdConfig)\n        }\n\n        // 返回第一个配置，但保存所有配置供后续使用\n        this.multiConfigs = configs\n        return configs[0] as any\n      } else {\n        const format = (outputConfig as any).format\n        const mapped = this.mapFormat(format)\n        const isESM = format === 'esm'\n        const isCJS = format === 'cjs'\n        const dir = isESM ? 'es' : isCJS ? 'lib' : 'dist'\n        const entryFileNames = isESM\n          ? '[name].js'\n          : isCJS\n            ? '[name].cjs'\n            : '[name].umd.js'\n        const chunkFileNames = entryFileNames\n\n        // 为单格式输出创建插件配置\n        const userPlugins = await this.transformPluginsForFormat(config.plugins || [], dir)\n\n        rollupConfig.plugins = [...basePlugins, ...userPlugins]\n        rollupConfig.output = {\n          dir,\n          format: mapped,\n          name: outputConfig.name,\n          sourcemap: outputConfig.sourcemap,\n          globals: outputConfig.globals,\n          entryFileNames,\n          chunkFileNames,\n          exports: (outputConfig as any).exports ?? 'auto',\n          preserveModules: isESM || isCJS,\n          preserveModulesRoot: (isESM || isCJS) ? 'src' : undefined\n        }\n      }\n    }\n\n    // 转换其他选项\n    if (config.treeshake !== undefined) {\n      rollupConfig.treeshake = config.treeshake\n    }\n\n    return rollupConfig\n  }\n\n  /**\n   * 转换插件\n   */\n  async transformPlugins(plugins: any[]): Promise<BundlerSpecificPlugin[]> {\n    const transformedPlugins: BundlerSpecificPlugin[] = []\n\n    for (const plugin of plugins) {\n      try {\n        // 如果插件有 plugin 函数，调用它来获取实际插件\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\n          const actualPlugin = await plugin.plugin()\n          transformedPlugins.push(actualPlugin)\n        }\n        // 如果插件有 rollup 特定配置，使用它\n        else if (plugin.rollup) {\n          transformedPlugins.push({ ...plugin, ...plugin.rollup })\n        }\n        // 直接使用插件\n        else {\n          transformedPlugins.push(plugin)\n        }\n      } catch (error) {\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\n      }\n    }\n\n    return transformedPlugins\n  }\n\n  /**\n   * 为特定格式转换插件，动态设置TypeScript插件的declarationDir\n   */\n  async transformPluginsForFormat(plugins: any[], outputDir: string): Promise<BundlerSpecificPlugin[]> {\n    const transformedPlugins: BundlerSpecificPlugin[] = []\n\n    for (const plugin of plugins) {\n      try {\n        // 如果插件有 plugin 函数，调用它来获取实际插件\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\n          // 如果是TypeScript插件，需要特殊处理\n          if (plugin.name === 'typescript') {\n            // 重新创建TypeScript插件，设置正确的declarationDir\n            const typescript = await import('@rollup/plugin-typescript')\n\n            // 获取原始的TypeScript选项\n            const originalPlugin = await plugin.plugin()\n            let originalOptions = {}\n\n            // 尝试从原始插件中提取选项\n            if (originalPlugin && typeof originalPlugin === 'object') {\n              // 从插件的内部状态中获取选项（这是一个hack，但是必要的）\n              originalOptions = (originalPlugin as any).options || {}\n            }\n\n            // 创建新的TypeScript插件，覆盖declarationDir和outDir\n            const newPlugin = typescript.default({\n              ...originalOptions,\n              declaration: true,\n              declarationDir: outputDir,\n              outDir: outputDir\n            })\n\n            transformedPlugins.push(newPlugin)\n          } else {\n            // 其他插件正常处理\n            const actualPlugin = await plugin.plugin()\n            transformedPlugins.push(actualPlugin)\n          }\n        }\n        // 如果插件有 rollup 特定配置，使用它\n        else if (plugin.rollup) {\n          transformedPlugins.push({ ...plugin, ...plugin.rollup })\n        }\n        // 直接使用插件\n        else {\n          transformedPlugins.push(plugin)\n        }\n      } catch (error) {\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\n      }\n    }\n\n    return transformedPlugins\n  }\n\n  /**\n   * 检查功能支持\n   */\n  supportsFeature(feature: any): boolean {\n    // Rollup 支持的功能\n    const supportedFeatures = [\n      'treeshaking',\n      'code-splitting',\n      'dynamic-import',\n      'sourcemap',\n      'plugin-system',\n      'config-file',\n      'cache-support'\n    ]\n\n    return supportedFeatures.includes(feature)\n  }\n\n  /**\n   * 获取功能支持映射\n   */\n  getFeatureSupport(): any {\n    return {\n      treeshaking: true,\n      'code-splitting': true,\n      'dynamic-import': true,\n      'worker-support': false,\n      'css-bundling': false,\n      'asset-processing': true,\n      sourcemap: true,\n      minification: false,\n      'hot-reload': false,\n      'module-federation': false,\n      'incremental-build': false,\n      'parallel-build': false,\n      'cache-support': true,\n      'plugin-system': true,\n      'config-file': true\n    }\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getPerformanceMetrics(): PerformanceMetrics {\n    if (this.performanceMonitor && typeof this.performanceMonitor.getMetrics === 'function') {\n      return this.performanceMonitor.getMetrics()\n    }\n\n    // 返回默认指标\n    return {\n      buildTime: 0,\n      memoryUsage: {\n        heapUsed: process.memoryUsage().heapUsed,\n        heapTotal: process.memoryUsage().heapTotal,\n        external: process.memoryUsage().external,\n        rss: process.memoryUsage().rss,\n        peak: 0,\n        trend: []\n      },\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      },\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: {\n        cpuUsage: 0,\n        availableMemory: 0,\n        diskUsage: {\n          total: 0,\n          used: 0,\n          available: 0,\n          usagePercent: 0\n        }\n      }\n    }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    // Rollup 适配器没有需要清理的资源\n  }\n\n  /**\n   * 加载 Rollup\n   */\n  private async loadRollup(): Promise<any> {\n    try {\n      // 使用动态 import 加载 Rollup\n      return await import('rollup')\n    } catch (error) {\n      throw new Error('Rollup 未安装，请运行: npm install rollup --save-dev')\n    }\n  }\n\n  /**\n   * 获取基础插件（内置）\n   * - node-resolve: 解决第三方包解析，并优先浏览器分支\n   * - commonjs: 兼容 CommonJS 包\n   * - json: 允许 import JSON（如某些包内的 package.json 或配置 JSON）\n   */\n  private async getBasePlugins(config: UnifiedConfig): Promise<BundlerSpecificPlugin[]> {\n    try {\n      const { nodeResolve } = await import('@rollup/plugin-node-resolve')\n      const commonjs = (await import('@rollup/plugin-commonjs')).default\n      const json = (await import('@rollup/plugin-json')).default\n\n      const resolvePlugin = nodeResolve({\n        browser: true,\n        preferBuiltins: false,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n      })\n\n      const commonjsPlugin = commonjs({\n        include: /node_modules/,\n        ignoreDynamicRequires: false\n      })\n\n      const jsonPlugin = json()\n\n      const plugins = [\n        resolvePlugin as unknown as BundlerSpecificPlugin,\n        commonjsPlugin as unknown as BundlerSpecificPlugin,\n        jsonPlugin as unknown as BundlerSpecificPlugin\n      ]\n\n      // 添加 Babel 插件（如果启用）\n      const babelPlugin = await this.getBabelPlugin(config)\n      if (babelPlugin) {\n        plugins.push(babelPlugin)\n      }\n\n      return plugins\n    } catch (error) {\n      this.logger.warn('基础插件加载失败，将尝试继续构建', (error as Error).message)\n      return []\n    }\n  }\n\n  /**\n   * 获取 Babel 插件\n   */\n  private async getBabelPlugin(config: UnifiedConfig): Promise<BundlerSpecificPlugin | null> {\n    const babelConfig = (config as any).babel\n\n    if (!babelConfig?.enabled) {\n      return null\n    }\n\n    try {\n      const { getBabelOutputPlugin } = await import('@rollup/plugin-babel')\n\n      const babelOptions: any = {\n        babelHelpers: babelConfig.runtime ? 'runtime' : 'bundled',\n        exclude: babelConfig.exclude || /node_modules/,\n        include: babelConfig.include,\n        extensions: ['.js', '.jsx', '.ts', '.tsx'],\n        presets: babelConfig.presets || [],\n        plugins: babelConfig.plugins || []\n      }\n\n      // 添加默认预设（如果没有指定）\n      if (babelOptions.presets.length === 0) {\n        babelOptions.presets = [\n          ['@babel/preset-env', {\n            targets: babelConfig.targets || 'defaults',\n            useBuiltIns: babelConfig.polyfill === 'usage' ? 'usage' : false,\n            corejs: babelConfig.polyfill ? 3 : false\n          }]\n        ]\n      }\n\n      // 添加运行时插件（如果启用）\n      if (babelConfig.runtime && !babelOptions.plugins.some((p: any) =>\n        (Array.isArray(p) ? p[0] : p).includes('@babel/plugin-transform-runtime')\n      )) {\n        babelOptions.plugins.push(['@babel/plugin-transform-runtime', {\n          corejs: false,\n          helpers: true,\n          regenerator: true,\n          useESModules: true\n        }])\n      }\n\n      // 使用配置文件（如果指定）\n      if (babelConfig.configFile !== false) {\n        babelOptions.configFile = babelConfig.configFile\n      }\n\n      if (babelConfig.babelrc !== false) {\n        babelOptions.babelrc = babelConfig.babelrc\n      }\n\n      return getBabelOutputPlugin(babelOptions) as unknown as BundlerSpecificPlugin\n    } catch (error) {\n      this.logger.warn('Babel 插件加载失败，将跳过 Babel 转换', (error as Error).message)\n      return null\n    }\n  }\n\n  /**\n   * 映射输出格式\n   */\n  private mapFormat(format: any): string {\n    if (typeof format === 'string') {\n      const formatMap: Record<string, string> = {\n        esm: 'es',\n        cjs: 'cjs',\n        umd: 'umd',\n        iife: 'iife'\n      }\n      return formatMap[format] || format\n    }\n    return 'es'\n  }\n\n  /**\n   * 检查是否为多入口构建\n   */\n  private isMultiEntryBuild(input: any): boolean {\n    // 如果input是数组，则为多入口\n    if (Array.isArray(input)) {\n      return input.length > 1\n    }\n\n    // 如果input是对象，则为多入口\n    if (typeof input === 'object' && input !== null) {\n      return Object.keys(input).length > 1\n    }\n\n    // 如果input是字符串且包含glob模式，可能为多入口\n    if (typeof input === 'string') {\n      // 检查是否包含glob通配符\n      return input.includes('*') || input.includes('?') || input.includes('[')\n    }\n\n    return false\n  }\n\n  /**\n   * 创建 UMD 配置\n   */\n  private async createUMDConfig(config: UnifiedConfig): Promise<any> {\n    const umdConfig = (config as any).umd || {}\n    const outputConfig = config.output || {}\n\n    // 确定 UMD 入口文件\n    let umdEntry = umdConfig.entry || 'src/index.ts'\n\n    // 如果入口文件不存在，尝试其他常见的入口文件\n    const fs = await import('fs')\n    const path = await import('path')\n\n    const possibleEntries = [\n      umdEntry,\n      'src/index.ts',\n      'src/index.js',\n      'src/main.ts',\n      'src/main.js',\n      'index.ts',\n      'index.js'\n    ]\n\n    for (const entry of possibleEntries) {\n      if (fs.existsSync(path.resolve(process.cwd(), entry))) {\n        umdEntry = entry\n        break\n      }\n    }\n\n    // 确定 UMD 全局变量名\n    let umdName = umdConfig.name || outputConfig.name\n    if (!umdName) {\n      // 尝试从 package.json 推断\n      try {\n        const packageJson = JSON.parse(fs.readFileSync(path.resolve(process.cwd(), 'package.json'), 'utf-8'))\n        umdName = this.generateUMDName(packageJson.name)\n      } catch {\n        umdName = 'MyLibrary'\n      }\n    }\n\n    // 创建 UMD 构建配置\n    const basePlugins = await this.getBasePlugins(config)\n    const userPlugins = await this.transformPluginsForFormat(config.plugins || [], 'dist')\n\n    // 应用 Banner 和 Footer 配置\n    const bannerConfig = (config as any).banner || {}\n    const banner = await this.resolveBanner(bannerConfig)\n    const footer = await this.resolveFooter(bannerConfig)\n\n    this.logger.info(`UMD Banner配置: ${JSON.stringify(bannerConfig)}`)\n    this.logger.info(`解析后的Banner: ${banner}`)\n\n    return {\n      input: umdEntry,\n      external: config.external,\n      plugins: [...basePlugins, ...userPlugins],\n      output: {\n        format: 'umd',\n        name: umdName,\n        file: `dist/${umdConfig.fileName || 'index.umd.js'}`,\n        sourcemap: outputConfig.sourcemap,\n        globals: { ...outputConfig.globals, ...umdConfig.globals },\n        exports: 'auto',\n        banner,\n        footer,\n        intro: await this.resolveIntro(bannerConfig),\n        outro: await this.resolveOutro(bannerConfig)\n      },\n      treeshake: config.treeshake\n    }\n  }\n\n  /**\n   * 生成 UMD 全局变量名\n   */\n  private generateUMDName(packageName: string): string {\n    if (!packageName) return 'MyLibrary'\n\n    // 移除作用域前缀 (@scope/package -> package)\n    const name = packageName.replace(/^@[^/]+\\//, '')\n\n    // 转换为 PascalCase\n    return name\n      .split(/[-_]/)\n      .map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase())\n      .join('')\n  }\n\n  /**\n   * 解析 Banner\n   */\n  private async resolveBanner(bannerConfig: any): Promise<string | undefined> {\n    const banners: string[] = []\n\n    // 自定义 Banner\n    if (typeof bannerConfig.banner === 'function') {\n      const customBanner = await bannerConfig.banner()\n      if (customBanner) banners.push(customBanner)\n    } else if (typeof bannerConfig.banner === 'string' && bannerConfig.banner) {\n      banners.push(bannerConfig.banner)\n    }\n\n    // 自动生成版权信息\n    if (bannerConfig.copyright) {\n      const copyright = this.generateCopyright(bannerConfig.copyright)\n      if (copyright) banners.push(copyright)\n    }\n\n    // 自动生成构建信息\n    if (bannerConfig.buildInfo) {\n      const buildInfo = this.generateBuildInfo(bannerConfig.buildInfo)\n      if (buildInfo) banners.push(buildInfo)\n    }\n\n    return banners.length > 0 ? banners.join('\\n') : undefined\n  }\n\n  /**\n   * 解析 Footer\n   */\n  private async resolveFooter(bannerConfig: any): Promise<string | undefined> {\n    if (typeof bannerConfig.footer === 'function') {\n      return await bannerConfig.footer()\n    }\n    if (typeof bannerConfig.footer === 'string') {\n      return bannerConfig.footer\n    }\n    return undefined\n  }\n\n  /**\n   * 解析 Intro\n   */\n  private async resolveIntro(bannerConfig: any): Promise<string | undefined> {\n    if (typeof bannerConfig.intro === 'function') {\n      return await bannerConfig.intro()\n    }\n    if (typeof bannerConfig.intro === 'string') {\n      return bannerConfig.intro\n    }\n    return undefined\n  }\n\n  /**\n   * 解析 Outro\n   */\n  private async resolveOutro(bannerConfig: any): Promise<string | undefined> {\n    if (typeof bannerConfig.outro === 'function') {\n      return await bannerConfig.outro()\n    }\n    if (typeof bannerConfig.outro === 'string') {\n      return bannerConfig.outro\n    }\n    return undefined\n  }\n\n  /**\n   * 生成版权信息\n   */\n  private generateCopyright(copyrightConfig: any): string {\n    const config = typeof copyrightConfig === 'object' ? copyrightConfig : {}\n    const year = config.year || new Date().getFullYear()\n    const owner = config.owner || 'Unknown'\n    const license = config.license || 'MIT'\n\n    if (config.template) {\n      return config.template\n        .replace(/\\{year\\}/g, year)\n        .replace(/\\{owner\\}/g, owner)\n        .replace(/\\{license\\}/g, license)\n    }\n\n    return `/*!\\n * Copyright (c) ${year} ${owner}\\n * Licensed under ${license}\\n */`\n  }\n\n  /**\n   * 生成构建信息\n   */\n  private generateBuildInfo(buildInfoConfig: any): string {\n    const config = typeof buildInfoConfig === 'object' ? buildInfoConfig : {}\n    const parts: string[] = []\n\n    if (config.version !== false) {\n      try {\n        const fs = require('fs')\n        const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf-8'))\n        parts.push(`Version: ${packageJson.version}`)\n      } catch {\n        // 忽略错误\n      }\n    }\n\n    if (config.buildTime !== false) {\n      parts.push(`Built: ${new Date().toISOString()}`)\n    }\n\n    if (config.environment !== false) {\n      parts.push(`Environment: ${process.env.NODE_ENV || 'development'}`)\n    }\n\n    if (config.git !== false) {\n      try {\n        const { execSync } = require('child_process')\n        const commit = execSync('git rev-parse --short HEAD', { encoding: 'utf-8' }).trim()\n        parts.push(`Commit: ${commit}`)\n      } catch {\n        // 忽略错误\n      }\n    }\n\n    if (config.template) {\n      return config.template\n    }\n\n    return parts.length > 0 ? `/*!\\n * ${parts.join('\\n * ')}\\n */` : ''\n  }\n\n}\n","/**\n * Rolldown 适配器\n * \n * 提供 Rolldown 打包器的适配实现\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type {\n  IBundlerAdapter,\n  UnifiedConfig,\n  AdapterOptions,\n  BundlerSpecificConfig,\n  BundlerSpecificPlugin\n} from '../../types/adapter'\nimport type { BuildResult, BuildWatcher } from '../../types/builder'\nimport type { PerformanceMetrics } from '../../types/performance'\nimport { Logger } from '../../utils/logger'\nimport { BuilderError } from '../../utils/error-handler'\nimport { ErrorCode } from '../../constants/errors'\n\n/**\n * Rolldown 适配器类\n */\nexport class RolldownAdapter implements IBundlerAdapter {\n  readonly name = 'rolldown' as const\n  readonly version: string\n  readonly available: boolean\n\n  private logger: Logger\n  private performanceMonitor: any\n\n  constructor(options: Partial<AdapterOptions> = {}) {\n    this.logger = options.logger || new Logger()\n    this.performanceMonitor = options.performanceMonitor\n\n    // 在 ES 模块环境中，我们无法在构造函数中同步加载 rolldown\n    // 所以我们假设它是可用的，并在实际使用时进行检查\n    try {\n      const rolldown = this.loadRolldown()\n      this.version = rolldown.VERSION || 'unknown'\n      this.available = true\n      this.logger.debug(`Rolldown 适配器初始化成功 (v${this.version})`)\n    } catch (error) {\n      // 同步加载失败，但这在 ES 模块环境中是预期的\n      // 我们将在实际使用时尝试异步加载\n      this.version = 'unknown'\n      this.available = true // 假设可用，在使用时验证\n      this.logger.debug('Rolldown 同步加载失败，将在使用时异步加载')\n    }\n  }\n\n  /**\n   * 执行构建\n   */\n  async build(config: UnifiedConfig): Promise<BuildResult> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rolldown 适配器不可用'\n      )\n    }\n\n    try {\n      // 尝试加载 rolldown，支持异步加载\n      const rolldown = await this.ensureRolldownLoaded()\n      const rolldownConfig = await this.transformConfig(config)\n\n      this.logger.info('开始 Rolldown 构建...')\n      const startTime = Date.now()\n\n      // 执行构建\n      const result = await rolldown.build(rolldownConfig)\n\n      const duration = Date.now() - startTime\n\n      // 构建结果\n      const buildResult: BuildResult = {\n        success: true,\n        outputs: result.outputs || [],\n        duration,\n        stats: result.stats || {\n          totalSize: 0,\n          gzipSize: 0,\n          files: [],\n          chunks: [],\n          assets: [],\n          modules: [],\n          dependencies: [],\n          warnings: [],\n          errors: []\n        },\n        performance: this.getPerformanceMetrics(),\n        warnings: result.warnings || [],\n        errors: [],\n        buildId: `rolldown-${Date.now()}`,\n        timestamp: Date.now(),\n        bundler: 'rolldown',\n        mode: 'production'\n      }\n\n      this.logger.success(`Rolldown 构建完成 (${duration}ms)`)\n      return buildResult\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `Rolldown 构建失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 启动监听模式\n   */\n  async watch(config: UnifiedConfig): Promise<BuildWatcher> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rolldown 适配器不可用'\n      )\n    }\n\n    try {\n      const rolldown = await this.ensureRolldownLoaded()\n      const rolldownConfig = await this.transformConfig(config)\n\n      // 启动监听\n      const watcher = await rolldown.watch(rolldownConfig)\n\n      // 创建统一的监听器接口\n      const watchOptions = config.watch || {}\n      const buildWatcher = {\n        patterns: (typeof watchOptions === 'object' && (watchOptions as any).include) || ['src/**/*'],\n        watching: true,\n\n        async close() {\n          if (watcher && typeof watcher.close === 'function') {\n            await watcher.close()\n          }\n        },\n\n        on(event: string, listener: (...args: any[]) => void) {\n          if (watcher && typeof watcher.on === 'function') {\n            watcher.on(event, listener)\n          }\n          return this\n        },\n\n        off(event: string, listener: (...args: any[]) => void) {\n          if (watcher && typeof watcher.off === 'function') {\n            watcher.off(event, listener)\n          }\n          return this\n        },\n\n        emit(event: string, ...args: any[]) {\n          if (watcher && typeof watcher.emit === 'function') {\n            return watcher.emit(event, ...args)\n          }\n          return false\n        }\n      } as BuildWatcher\n\n      this.logger.info('Rolldown 监听模式已启动')\n      return buildWatcher\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `启动 Rolldown 监听模式失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 转换配置\n   */\n  async transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig> {\n    // 转换为 Rolldown 配置格式\n    const rolldownConfig: any = {\n      input: config.input,\n      external: config.external,\n      plugins: [] // 暂时禁用所有插件来测试基本功能\n    }\n\n    // 转换输出配置\n    if (config.output) {\n      rolldownConfig.output = {\n        dir: config.output.dir,\n        file: config.output.file,\n        // Rolldown 不支持数组格式，只取第一个格式\n        format: Array.isArray(config.output.format) ? config.output.format[0] : config.output.format,\n        name: config.output.name,\n        sourcemap: config.output.sourcemap,\n        globals: config.output.globals\n      }\n    }\n\n    // Rolldown 特有配置\n    if (config.platform) {\n      rolldownConfig.platform = config.platform\n    }\n\n    // 转换其他选项\n    if (config.treeshake !== undefined) {\n      rolldownConfig.treeshake = config.treeshake\n    }\n\n    return rolldownConfig\n  }\n\n  /**\n   * 转换插件\n   */\n  async transformPlugins(plugins: any[]): Promise<BundlerSpecificPlugin[]> {\n    const transformedPlugins: BundlerSpecificPlugin[] = []\n\n    for (const plugin of plugins) {\n      try {\n        // 如果插件有 plugin 函数，调用它来获取实际插件\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\n          const actualPlugin = await plugin.plugin()\n          transformedPlugins.push(actualPlugin)\n        }\n        // 如果插件有 rolldown 特定配置，使用它\n        else if (plugin.rolldown) {\n          transformedPlugins.push({ ...plugin, ...plugin.rolldown })\n        }\n        // 如果插件有 setup 方法，保持原样\n        else if (plugin.setup) {\n          transformedPlugins.push(plugin)\n        }\n        // 尝试转换 Rollup 插件为 Rolldown 格式\n        else {\n          transformedPlugins.push(this.convertRollupPlugin(plugin))\n        }\n      } catch (error) {\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\n      }\n    }\n\n    return transformedPlugins\n  }\n\n  /**\n   * 检查功能支持\n   */\n  supportsFeature(feature: any): boolean {\n    // Rolldown 支持的功能\n    const supportedFeatures = [\n      'treeshaking',\n      'code-splitting',\n      'dynamic-import',\n      'sourcemap',\n      'minification',\n      'plugin-system',\n      'config-file',\n      'cache-support',\n      'parallel-build',\n      'incremental-build'\n    ]\n\n    return supportedFeatures.includes(feature)\n  }\n\n  /**\n   * 获取功能支持映射\n   */\n  getFeatureSupport(): any {\n    return {\n      treeshaking: true,\n      'code-splitting': true,\n      'dynamic-import': true,\n      'worker-support': true,\n      'css-bundling': true,\n      'asset-processing': true,\n      sourcemap: true,\n      minification: true,\n      'hot-reload': false,\n      'module-federation': false,\n      'incremental-build': true,\n      'parallel-build': true,\n      'cache-support': true,\n      'plugin-system': true,\n      'config-file': true\n    }\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getPerformanceMetrics(): PerformanceMetrics {\n    if (this.performanceMonitor) {\n      return this.performanceMonitor.getPerformanceMetrics()\n    }\n\n    // 返回默认指标\n    return {\n      buildTime: 0,\n      memoryUsage: {\n        heapUsed: process.memoryUsage().heapUsed,\n        heapTotal: process.memoryUsage().heapTotal,\n        external: process.memoryUsage().external,\n        rss: process.memoryUsage().rss,\n        peak: 0,\n        trend: []\n      },\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      },\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: {\n        cpuUsage: 0,\n        availableMemory: 0,\n        diskUsage: {\n          total: 0,\n          used: 0,\n          available: 0,\n          usagePercent: 0\n        }\n      }\n    }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    // Rolldown 适配器没有需要清理的资源\n  }\n\n  /**\n   * 确保 Rolldown 已加载（支持异步）\n   */\n  private async ensureRolldownLoaded(): Promise<any> {\n    try {\n      // 首先尝试同步加载\n      return this.loadRolldown()\n    } catch (error) {\n      // 同步加载失败，尝试异步加载\n      try {\n        this.logger.debug('尝试异步加载 rolldown...')\n        const rolldown = await import('rolldown')\n        if (rolldown && (rolldown.VERSION || typeof rolldown.build === 'function')) {\n          this.logger.debug(`Rolldown 异步加载成功: ${rolldown.VERSION || 'unknown'}`)\n          return rolldown\n        }\n        throw new Error('Rolldown 模块无效')\n      } catch (asyncError) {\n        throw new BuilderError(\n          ErrorCode.ADAPTER_NOT_AVAILABLE,\n          'Rolldown 未安装或无法加载，请运行: npm install rolldown --save-dev',\n          { cause: asyncError as Error }\n        )\n      }\n    }\n  }\n\n  /**\n   * 加载 Rolldown（同步方式）\n   */\n  private loadRolldown(): any {\n    try {\n      // 方式1: 在 CommonJS 环境中直接使用 require\n      if (typeof require !== 'undefined') {\n        return require('rolldown')\n      }\n\n      // 方式2: 在 ES 模块环境中，尝试使用 createRequire\n      // 由于这是一个同步方法，我们不能使用 async import\n      // 但我们可以尝试访问全局的 require 函数\n\n      // 检查是否在 Node.js 环境中\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // 尝试通过 globalThis 访问 require\n        const globalRequire = (globalThis as any).require\n        if (globalRequire) {\n          return globalRequire('rolldown')\n        }\n\n        // 尝试通过 global 访问 require\n        const nodeGlobal = (global as any)\n        if (nodeGlobal && nodeGlobal.require) {\n          return nodeGlobal.require('rolldown')\n        }\n      }\n\n      throw new Error('无法在当前环境中加载 rolldown 模块')\n    } catch (error) {\n      throw new Error('Rolldown 未安装，请运行: npm install rolldown --save-dev')\n    }\n  }\n\n  /**\n   * 转换 Rollup 插件为 Rolldown 格式\n   */\n  private convertRollupPlugin(plugin: any): any {\n    // 如果插件已经是 Rolldown 格式，直接返回\n    if (plugin.setup) {\n      return plugin\n    }\n\n    // 尝试转换 Rollup 插件\n    return {\n      name: plugin.name || 'unknown',\n      setup(build: any) {\n        // 转换 Rollup 钩子为 Rolldown 钩子\n        if (plugin.resolveId) {\n          build.onResolve({ filter: /.*/ }, plugin.resolveId)\n        }\n\n        if (plugin.load) {\n          build.onLoad({ filter: /.*/ }, plugin.load)\n        }\n\n        if (plugin.transform) {\n          build.onTransform({ filter: /.*/ }, plugin.transform)\n        }\n      }\n    }\n  }\n}\n","/**\n * 适配器工厂\n * \n * 负责创建和管理不同的打包器适配器\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { IBundlerAdapter, AdapterOptions } from '../../types/adapter'\nimport type { BundlerType } from '../../types/bundler'\nimport { ErrorCode } from '../../constants/errors'\nimport { BuilderError } from '../../utils/error-handler'\n\n/**\n * 基础适配器实现（临时）\n */\nclass BaseAdapter implements IBundlerAdapter {\n  readonly name: BundlerType\n  readonly version: string = '1.0.0'\n  readonly available: boolean = true\n\n  constructor(name: BundlerType) {\n    this.name = name\n  }\n\n  async build(_config: any): Promise<any> {\n    // 临时实现，返回模拟结果\n    return {\n      success: true,\n      outputs: [],\n      duration: 1000,\n      stats: {\n        totalSize: 0,\n        gzipSize: 0,\n        files: [],\n        chunks: [],\n        assets: [],\n        modules: [],\n        dependencies: [],\n        warnings: [],\n        errors: []\n      },\n      warnings: [],\n      errors: []\n    }\n  }\n\n  async watch(_config: any): Promise<any> {\n    // 临时实现\n    const mockWatcher = {\n      patterns: ['src/**/*'],\n      watching: true,\n      close: async () => { },\n      on: () => { },\n      off: () => { },\n      emit: () => { }\n    }\n\n    return mockWatcher\n  }\n\n  async transformConfig(config: any): Promise<any> {\n    return config\n  }\n\n  async transformPlugins(plugins: any[]): Promise<any[]> {\n    return plugins\n  }\n\n  supportsFeature(_feature: any): boolean {\n    return true\n  }\n\n  getFeatureSupport(): any {\n    return {}\n  }\n\n  getPerformanceMetrics(): any {\n    return {\n      buildTime: 0,\n      memoryUsage: {\n        heapUsed: 0,\n        heapTotal: 0,\n        external: 0,\n        rss: 0,\n        peak: 0,\n        trend: []\n      },\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      },\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: {\n        cpuUsage: 0,\n        availableMemory: 0,\n        diskUsage: {\n          total: 0,\n          used: 0,\n          available: 0,\n          usagePercent: 0\n        }\n      }\n    }\n  }\n\n  async dispose(): Promise<void> {\n    // 清理资源\n  }\n}\n\n/**\n * 适配器工厂类\n */\nexport class BundlerAdapterFactory {\n  private static adapters: Map<BundlerType, new (options: AdapterOptions) => IBundlerAdapter> = new Map()\n  private static instances: Map<string, IBundlerAdapter> = new Map()\n\n  /**\n   * 注册适配器\n   */\n  static register(\n    bundler: BundlerType,\n    adapterClass: new (options: AdapterOptions) => IBundlerAdapter\n  ): void {\n    this.adapters.set(bundler, adapterClass)\n  }\n\n  /**\n   * 创建适配器实例\n   */\n  static create(bundler: BundlerType, options: Partial<AdapterOptions> = {}): IBundlerAdapter {\n    // 检查是否已有实例\n    const instanceKey = `${bundler}-${JSON.stringify(options)}`\n    const existingInstance = this.instances.get(instanceKey)\n    if (existingInstance) {\n      return existingInstance\n    }\n\n    // 获取适配器类\n    const AdapterClass = this.adapters.get(bundler)\n\n    if (!AdapterClass) {\n      // 如果没有注册的适配器，使用基础适配器\n      const adapter = new BaseAdapter(bundler)\n      this.instances.set(instanceKey, adapter)\n      return adapter\n    }\n\n    try {\n      // 创建新实例\n      const adapter = new AdapterClass(options as AdapterOptions)\n\n      // 检查适配器是否可用\n      if (!adapter.available) {\n        throw new BuilderError(\n          ErrorCode.ADAPTER_NOT_AVAILABLE,\n          `适配器 ${bundler} 不可用`\n        )\n      }\n\n      this.instances.set(instanceKey, adapter)\n      return adapter\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_INIT_ERROR,\n        `创建适配器 ${bundler} 失败`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 获取可用的适配器列表\n   */\n  static getAvailableAdapters(): BundlerType[] {\n    const available: BundlerType[] = []\n\n    for (const bundler of ['rollup', 'rolldown'] as BundlerType[]) {\n      try {\n        const adapter = this.create(bundler)\n        if (adapter.available) {\n          available.push(bundler)\n        }\n      } catch {\n        // 忽略不可用的适配器\n      }\n    }\n\n    return available\n  }\n\n  /**\n   * 检查适配器是否可用\n   */\n  static isAvailable(bundler: BundlerType): boolean {\n    try {\n      const adapter = this.create(bundler)\n      return adapter.available\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 清理所有实例\n   */\n  static async dispose(): Promise<void> {\n    const disposePromises = Array.from(this.instances.values()).map(adapter =>\n      adapter.dispose()\n    )\n\n    await Promise.all(disposePromises)\n    this.instances.clear()\n  }\n\n  /**\n   * 获取适配器信息\n   */\n  static getAdapterInfo(bundler: BundlerType): {\n    name: BundlerType\n    version: string\n    available: boolean\n  } {\n    try {\n      const adapter = this.create(bundler)\n      return {\n        name: adapter.name,\n        version: adapter.version,\n        available: adapter.available\n      }\n    } catch {\n      return {\n        name: bundler,\n        version: 'unknown',\n        available: false\n      }\n    }\n  }\n}\n\n// 导入真实的适配器\nimport { RollupAdapter } from '../rollup/RollupAdapter'\nimport { RolldownAdapter } from '../rolldown/RolldownAdapter'\n\n// 注册真实的适配器\nBundlerAdapterFactory.register('rollup', RollupAdapter)\nBundlerAdapterFactory.register('rolldown', RolldownAdapter)\n","/**\n * 库构建器主控制器类\n * \n * 这是 @ldesign/builder 的核心类，负责协调各个组件完成库的构建工作\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport {\n  ILibraryBuilder,\n  BuilderOptions,\n  BuilderStatus,\n  BuildResult,\n  BuildWatcher\n} from '../types/builder'\nimport type { BuilderConfig } from '../types/config'\nimport type { ValidationResult } from '../types/common'\nimport type { LibraryType } from '../types/library'\nimport type {\n  ValidationResult as PostBuildValidationResult,\n  ValidationContext\n} from '../types/validation'\nimport { ConfigManager } from './ConfigManager'\nimport { StrategyManager } from './StrategyManager'\nimport { PluginManager } from './PluginManager'\nimport { LibraryDetector } from './LibraryDetector'\nimport { PerformanceMonitor } from './PerformanceMonitor'\nimport { PostBuildValidator } from './PostBuildValidator'\nimport { BundlerAdapterFactory } from '../adapters/base/AdapterFactory'\nimport type { IBundlerAdapter } from '../types/adapter'\nimport { Logger, createLogger } from '../utils/logger'\nimport { ErrorHandler, createErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\nimport { DEFAULT_BUILDER_CONFIG } from '../constants/defaults'\n\n/**\n * 库构建器主控制器类\n * \n * 采用依赖注入模式，统一管理各种服务组件\n * 继承 EventEmitter，支持事件驱动的构建流程\n */\nexport class LibraryBuilder extends EventEmitter implements ILibraryBuilder {\n  /** 当前状态 */\n  private status: BuilderStatus = BuilderStatus.IDLE\n\n  /** 当前配置 */\n  private config: BuilderConfig\n\n  /** 打包核心适配器 */\n  private bundlerAdapter!: IBundlerAdapter\n\n  /** 策略管理器 */\n  private strategyManager!: StrategyManager\n\n  /** 配置管理器 */\n  private configManager!: ConfigManager\n\n  /** 插件管理器 */\n  private pluginManager!: PluginManager\n\n  /** 日志记录器 */\n  private logger!: Logger\n\n  /** 错误处理器 */\n  private errorHandler!: ErrorHandler\n\n  /** 性能监控器 */\n  private performanceMonitor!: PerformanceMonitor\n\n  /** 库类型检测器 */\n  private libraryDetector!: LibraryDetector\n\n  /** 打包后验证器 */\n  private postBuildValidator!: PostBuildValidator\n\n  /** 当前构建统计 */\n  private currentStats: any = null\n\n  /** 当前性能指标 */\n  private currentMetrics: any = null\n\n  constructor(options: BuilderOptions = {}) {\n    super()\n\n    // 初始化各种服务\n    this.initializeServices(options)\n\n    // 设置事件监听器\n    this.setupEventListeners()\n\n    // 设置错误处理\n    this.setupErrorHandling()\n\n    // 初始化配置\n    this.config = { ...DEFAULT_BUILDER_CONFIG, ...options.config }\n  }\n\n  /**\n   * 执行库构建\n   * \n   * @param config 可选的配置覆盖\n   * @returns 构建结果\n   */\n  async build(config?: BuilderConfig): Promise<BuildResult> {\n    const buildId = this.generateBuildId()\n\n    try {\n      // 设置构建状态\n      this.setStatus(BuilderStatus.BUILDING)\n\n      // 合并配置\n      const mergedConfig = config ? this.mergeConfig(this.config, config) : this.config\n\n      // 发出构建开始事件\n      this.emit('build:start', {\n        config: mergedConfig,\n        timestamp: Date.now(),\n        buildId\n      })\n\n      // 开始性能监控\n      this.performanceMonitor.startBuild(buildId)\n\n      // 获取库类型（优先使用配置中指定的类型）\n      let libraryType = mergedConfig.libraryType || await this.detectLibraryType(mergedConfig.input as string)\n\n      // 确保 libraryType 是正确的枚举值\n      if (typeof libraryType === 'string') {\n        libraryType = libraryType as LibraryType\n      }\n\n      // 获取构建策略\n      const strategy = this.strategyManager.getStrategy(libraryType)\n\n      // 应用策略配置\n      const strategyConfig = await strategy.applyStrategy(mergedConfig)\n\n      // 执行构建\n      const result = await this.bundlerAdapter.build(strategyConfig)\n\n      // 执行打包后验证（如果启用）\n      let validationResult: PostBuildValidationResult | undefined\n      if (mergedConfig.postBuildValidation?.enabled) {\n        validationResult = await this.runPostBuildValidation(mergedConfig, result, buildId)\n      }\n\n      // 结束性能监控\n      const metrics = this.performanceMonitor.endBuild(buildId)\n\n      // 构建成功\n      const buildResult: BuildResult = {\n        success: true,\n        outputs: result.outputs,\n        duration: metrics.buildTime,\n        stats: result.stats,\n        performance: metrics,\n        warnings: result.warnings || [],\n        errors: [],\n        buildId,\n        timestamp: Date.now(),\n        bundler: this.bundlerAdapter.name,\n        mode: mergedConfig.mode || 'production',\n        libraryType,\n        validation: validationResult\n      }\n\n      // 保存统计信息\n      this.currentStats = buildResult.stats\n      this.currentMetrics = buildResult.performance\n\n      // 发出构建结束事件\n      this.emit('build:end', {\n        result: buildResult,\n        duration: buildResult.duration,\n        timestamp: Date.now()\n      })\n\n      // 重置状态\n      this.setStatus(BuilderStatus.IDLE)\n\n      return buildResult\n\n    } catch (error) {\n      // 处理构建错误\n      const buildError = this.handleBuildError(error as Error, buildId)\n\n      // 发出错误事件\n      this.emit('build:error', {\n        error: buildError,\n        phase: 'build',\n        timestamp: Date.now()\n      })\n\n      // 重置状态\n      this.setStatus(BuilderStatus.ERROR)\n\n      throw buildError\n    }\n  }\n\n  /**\n   * 启动监听构建模式\n   * \n   * @param config 可选的配置覆盖\n   * @returns 构建监听器\n   */\n  async buildWatch(config?: BuilderConfig): Promise<BuildWatcher> {\n    try {\n      // 设置监听状态\n      this.setStatus(BuilderStatus.WATCHING)\n\n      // 合并配置\n      const mergedConfig = config ? this.mergeConfig(this.config, config) : this.config\n\n      // 获取库类型（优先使用配置中指定的类型）\n      let libraryType = mergedConfig.libraryType || await this.detectLibraryType(mergedConfig.input as string)\n\n      // 确保 libraryType 是正确的枚举值\n      if (typeof libraryType === 'string') {\n        libraryType = libraryType as LibraryType\n      }\n\n      // 获取构建策略\n      const strategy = this.strategyManager.getStrategy(libraryType)\n\n      // 应用策略配置\n      const strategyConfig = await strategy.applyStrategy(mergedConfig)\n\n      // 启动监听\n      const watcher = await this.bundlerAdapter.watch(strategyConfig)\n\n      // 发出监听开始事件\n      this.emit('watch:start', {\n        patterns: watcher.patterns,\n        timestamp: Date.now()\n      })\n\n      return watcher\n\n    } catch (error) {\n      this.setStatus(BuilderStatus.ERROR)\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '启动监听模式失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 合并配置\n   */\n  mergeConfig(base: BuilderConfig, override: BuilderConfig): BuilderConfig {\n    return this.configManager.mergeConfigs(base, override)\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): ValidationResult {\n    return this.configManager.validateConfig(config)\n  }\n\n  /**\n   * 加载配置文件\n   */\n  async loadConfig(configPath?: string): Promise<BuilderConfig> {\n    const config = await this.configManager.loadConfig(configPath ? { configFile: configPath } : {})\n    this.config = config\n    return config\n  }\n\n  /**\n   * 切换打包核心\n   */\n  setBundler(bundler: 'rollup' | 'rolldown'): void {\n    try {\n      this.bundlerAdapter = BundlerAdapterFactory.create(bundler, {\n        logger: this.logger,\n        performanceMonitor: this.performanceMonitor\n      })\n\n      this.logger.info(`已切换到 ${bundler} 打包核心`)\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        `切换到 ${bundler} 失败`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 获取当前打包核心\n   */\n  getBundler(): 'rollup' | 'rolldown' {\n    return this.bundlerAdapter.name\n  }\n\n  /**\n   * 设置库类型\n   */\n  setLibraryType(type: LibraryType): void {\n    this.config.libraryType = type\n    this.logger.info(`已设置库类型为: ${type}`)\n  }\n\n  /**\n   * 检测库类型\n   */\n  async detectLibraryType(projectPath: string): Promise<LibraryType> {\n    const result = await this.libraryDetector.detect(projectPath)\n    return result.type\n  }\n\n  /**\n   * 获取当前状态\n   */\n  getStatus(): BuilderStatus {\n    return this.status\n  }\n\n  /**\n   * 是否正在构建\n   */\n  isBuilding(): boolean {\n    return this.status === 'building'\n  }\n\n  /**\n   * 是否正在监听\n   */\n  isWatching(): boolean {\n    return this.status === 'watching'\n  }\n\n  /**\n   * 初始化\n   */\n  async initialize(): Promise<void> {\n    this.setStatus(BuilderStatus.INITIALIZING)\n\n    try {\n      // 加载配置\n      await this.loadConfig()\n\n      // 初始化适配器\n      this.setBundler(this.config.bundler || 'rollup')\n\n      this.setStatus(BuilderStatus.IDLE)\n      this.logger.success('LibraryBuilder 初始化完成')\n    } catch (error) {\n      this.setStatus(BuilderStatus.ERROR)\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '初始化失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 销毁资源\n   */\n  async dispose(): Promise<void> {\n    this.setStatus(BuilderStatus.DISPOSED)\n\n    // 清理适配器\n    if (this.bundlerAdapter) {\n      await this.bundlerAdapter.dispose()\n    }\n\n    // 清理插件管理器\n    if (this.pluginManager) {\n      await this.pluginManager.dispose()\n    }\n\n    // 清理验证器\n    if (this.postBuildValidator) {\n      await this.postBuildValidator.dispose()\n    }\n\n    // 移除所有事件监听器\n    this.removeAllListeners()\n\n    this.logger.info('LibraryBuilder 已销毁')\n  }\n\n  /**\n   * 获取构建统计信息\n   */\n  getStats(): any {\n    return this.currentStats\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getPerformanceMetrics(): any {\n    return this.currentMetrics\n  }\n\n  /**\n   * 初始化各种服务\n   */\n  private initializeServices(options: BuilderOptions): void {\n    // 初始化日志记录器\n    this.logger = options.logger || createLogger({\n      level: 'info',\n      prefix: '@ldesign/builder'\n    })\n\n    // 初始化错误处理器\n    this.errorHandler = createErrorHandler({\n      logger: this.logger,\n      showSuggestions: true\n    })\n\n    // 初始化性能监控器\n    this.performanceMonitor = new PerformanceMonitor({\n      logger: this.logger\n    })\n\n    // 初始化配置管理器\n    this.configManager = new ConfigManager({\n      logger: this.logger\n    })\n\n    // 初始化策略管理器\n    this.strategyManager = new StrategyManager({\n      autoDetection: true,\n      cache: true\n    } as any)\n\n    // 初始化插件管理器\n    this.pluginManager = new PluginManager({\n      cache: true,\n      hotReload: false\n    } as any)\n\n    // 初始化库类型检测器\n    this.libraryDetector = new LibraryDetector({\n      logger: this.logger\n    })\n\n    // 初始化打包后验证器\n    this.postBuildValidator = new PostBuildValidator({}, {\n      logger: this.logger,\n      errorHandler: this.errorHandler\n    })\n\n    // 初始化默认适配器\n    this.bundlerAdapter = BundlerAdapterFactory.create('rollup', {\n      logger: this.logger,\n      performanceMonitor: this.performanceMonitor\n    })\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  private setupEventListeners(): void {\n    // 监听配置变化\n    this.configManager.on('config:change', (config: BuilderConfig) => {\n      this.config = config\n      this.emit('config:change', {\n        config,\n        oldConfig: this.config,\n        timestamp: Date.now()\n      })\n    })\n  }\n\n  /**\n   * 设置错误处理\n   */\n  private setupErrorHandling(): void {\n    // 处理未捕获的错误\n    this.on('error', (error) => {\n      this.errorHandler.handle(error, 'LibraryBuilder')\n    })\n  }\n\n  /**\n   * 设置状态\n   */\n  private setStatus(status: BuilderStatus): void {\n    const oldStatus = this.status\n    this.status = status\n\n    this.emit('status:change', {\n      status,\n      oldStatus,\n      timestamp: Date.now()\n    })\n  }\n\n  /**\n   * 生成构建 ID\n   */\n  private generateBuildId(): string {\n    return `build-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`\n  }\n\n\n\n\n\n  /**\n   * 处理构建错误\n   */\n  private handleBuildError(error: Error, buildId: string): Error {\n    this.performanceMonitor.recordError(buildId, error)\n\n    if (error instanceof Error) {\n      return this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        `构建失败: ${error.message}`,\n        { cause: error }\n      )\n    }\n\n    return this.errorHandler.createError(\n      ErrorCode.BUILD_FAILED,\n      '构建失败: 未知错误'\n    )\n  }\n\n  /**\n   * 运行打包后验证\n   */\n  private async runPostBuildValidation(\n    config: BuilderConfig,\n    buildResult: any,\n    buildId: string\n  ): Promise<PostBuildValidationResult> {\n    this.logger.info('开始打包后验证...')\n\n    try {\n      // 创建验证上下文\n      const validationContext: ValidationContext = {\n        buildContext: {\n          buildId,\n          startTime: Date.now(),\n          config,\n          cwd: process.cwd(),\n          cacheDir: '.cache',\n          tempDir: '.temp',\n          watch: false,\n          env: process.env as Record<string, string>,\n          logger: this.logger,\n          performanceMonitor: this.performanceMonitor\n        },\n        buildResult: {\n          success: true,\n          outputs: buildResult.outputs,\n          duration: 0,\n          stats: buildResult.stats,\n          performance: this.currentMetrics || {} as any,\n          warnings: buildResult.warnings || [],\n          errors: [],\n          buildId,\n          timestamp: Date.now(),\n          bundler: this.bundlerAdapter.name,\n          mode: config.mode || 'production',\n          libraryType: config.libraryType\n        },\n        config: config.postBuildValidation || {},\n        tempDir: '',\n        startTime: Date.now(),\n        validationId: `validation-${buildId}`,\n        projectRoot: process.cwd(),\n        outputDir: config.output?.dir || 'dist'\n      }\n\n      // 更新验证器配置\n      if (config.postBuildValidation) {\n        this.postBuildValidator.setConfig(config.postBuildValidation)\n      }\n\n      // 执行验证\n      const validationResult = await this.postBuildValidator.validate(validationContext)\n\n      // 如果验证失败且配置为失败时停止构建\n      if (!validationResult.success && config.postBuildValidation?.failOnError) {\n        throw this.errorHandler.createError(\n          ErrorCode.BUILD_FAILED,\n          '打包后验证失败',\n          {\n            cause: new Error(`验证失败: ${validationResult.errors.length} 个错误`)\n          }\n        )\n      }\n\n      this.logger.success('打包后验证完成')\n      return validationResult\n\n    } catch (error) {\n      this.logger.error('打包后验证失败:', error)\n      throw error\n    }\n  }\n}\n","/**\n * Vue2 策略\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\n\nexport class Vue2Strategy implements ILibraryStrategy {\n  readonly name = 'vue2'\n  readonly supportedTypes: LibraryType[] = [LibraryType.VUE2]\n  readonly priority = 10\n\n  async applyStrategy(config: BuilderConfig): Promise<any> {\n    return config\n  }\n\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.VUE2\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {}\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] {\n    return []\n  }\n\n  validateConfig(_config: BuilderConfig): any {\n    return {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: []\n    }\n  }\n}\n","/**\n * 适配器相关类型定义\n */\n\nimport type { BuildResult, BuildWatcher } from './builder'\nimport type { PerformanceMetrics } from './performance'\nimport type { UnifiedPlugin, PluginBuild } from './plugin'\nimport type { WatchOptions } from './common'\n\n/**\n * 打包器功能枚举\n */\nexport enum BundlerFeature {\n  TREE_SHAKING = 'treeshaking',\n  CODE_SPLITTING = 'code-splitting',\n  DYNAMIC_IMPORT = 'dynamic-import',\n  WORKER_SUPPORT = 'worker-support',\n  CSS_BUNDLING = 'css-bundling',\n  ASSET_PROCESSING = 'asset-processing',\n  SOURCEMAP = 'sourcemap',\n  MINIFICATION = 'minification',\n  HOT_RELOAD = 'hot-reload',\n  MODULE_FEDERATION = 'module-federation',\n  INCREMENTAL_BUILD = 'incremental-build',\n  PARALLEL_BUILD = 'parallel-build',\n  CACHE_SUPPORT = 'cache-support',\n  PLUGIN_SYSTEM = 'plugin-system',\n  CONFIG_FILE = 'config-file'\n}\n\n/**\n * 功能支持映射\n */\nexport type FeatureSupportMap = Record<BundlerFeature, boolean>\n\n/**\n * 统一配置接口\n */\nexport interface UnifiedConfig {\n  // 基础配置\n  input: string | string[] | Record<string, string>\n  output: UnifiedOutputConfig\n\n  // 外部依赖\n  external?: string[] | ((id: string) => boolean)\n  globals?: Record<string, string>\n\n  // 插件配置\n  plugins?: UnifiedPlugin[]\n\n  // 优化配置\n  treeshake?: boolean | TreeshakeOptions\n  minify?: boolean | MinifyOptions\n\n  // 开发配置\n  sourcemap?: boolean | 'inline' | 'hidden'\n  watch?: boolean | WatchOptions\n\n  // 平台配置 (Rolldown 特有)\n  platform?: 'browser' | 'node' | 'neutral'\n\n  // 模块格式\n  format?: OutputFormat | OutputFormat[]\n\n  // 代码分割\n  manualChunks?: Record<string, string[]> | ((id: string) => string | void)\n\n  // 其他选项\n  [key: string]: any\n}\n\n/**\n * 统一输出配置\n */\nexport interface UnifiedOutputConfig {\n  dir?: string\n  file?: string\n  format?: OutputFormat | OutputFormat[]\n  name?: string\n  fileName?: string | ((chunkInfo: ChunkInfo) => string)\n  chunkFileNames?: string\n  assetFileNames?: string\n  sourcemap?: boolean | 'inline' | 'hidden'\n  globals?: Record<string, string>\n  banner?: string | (() => string | Promise<string>)\n  footer?: string | (() => string | Promise<string>)\n  intro?: string | (() => string | Promise<string>)\n  outro?: string | (() => string | Promise<string>)\n}\n\n/**\n * 输出格式\n */\nexport type OutputFormat = 'esm' | 'cjs' | 'umd' | 'iife' | 'css'\n\n/**\n * Chunk 信息\n */\nexport interface ChunkInfo {\n  isEntry: boolean\n  isDynamicEntry: boolean\n  name: string\n  moduleIds: string[]\n  imports: string[]\n  dynamicImports: string[]\n  exports: string[]\n  referencedFiles: string[]\n  type: 'chunk' | 'asset'\n  fileName: string\n  preliminaryFileName: string\n}\n\n/**\n * Tree Shaking 选项\n */\nexport interface TreeshakeOptions {\n  annotations?: boolean\n  moduleSideEffects?: boolean | string[] | ((id: string) => boolean)\n  propertyReadSideEffects?: boolean\n  tryCatchDeoptimization?: boolean\n  unknownGlobalSideEffects?: boolean\n}\n\n/**\n * 压缩选项\n */\nexport interface MinifyOptions {\n  compress?: any\n  mangle?: any\n  format?: any\n  sourceMap?: any\n}\n\n// WatchOptions 已在 common.ts 中定义，这里导入\nexport type { WatchOptions } from './common'\n\n// UnifiedPlugin 已在 plugin.ts 中定义，这里导入\nexport type { UnifiedPlugin } from './plugin'\n\n// PluginBuild 已在 plugin.ts 中定义，这里导入\nexport type { PluginBuild } from './plugin'\n\n// RollupPluginConfig 已在 plugin.ts 中定义，这里导入\nexport type { RollupPluginConfig } from './plugin'\n\n// RolldownPluginConfig 已在 plugin.ts 中定义，这里导入\nexport type { RolldownPluginConfig } from './plugin'\n\n/**\n * 打包核心适配器接口\n */\nexport interface IBundlerAdapter {\n  /** 适配器名称 */\n  readonly name: 'rollup' | 'rolldown'\n\n  /** 适配器版本 */\n  readonly version: string\n\n  /** 是否可用 */\n  readonly available: boolean\n\n  // 核心构建方法\n  build(config: UnifiedConfig): Promise<BuildResult>\n  watch(config: UnifiedConfig): Promise<BuildWatcher>\n\n  // 配置转换\n  transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig>\n\n  // 插件处理\n  transformPlugins(plugins: UnifiedPlugin[]): Promise<BundlerSpecificPlugin[]>\n\n  // 功能检测\n  supportsFeature(feature: BundlerFeature): boolean\n  getFeatureSupport(): FeatureSupportMap\n\n  // 性能监控\n  getPerformanceMetrics(): PerformanceMetrics\n\n  // 生命周期钩子\n  onBuildStart?(config: UnifiedConfig): Promise<void> | void\n  onBuildEnd?(result: BuildResult): Promise<void> | void\n  onError?(error: Error): Promise<void> | void\n\n  // 资源清理\n  dispose(): Promise<void>\n}\n\n/**\n * 打包器特定配置\n */\nexport type BundlerSpecificConfig = RollupOptions | RolldownOptions\n\n/**\n * Rollup 配置选项\n */\nexport interface RollupOptions {\n  input: string | string[] | Record<string, string>\n  output?: RollupOutputOptions | RollupOutputOptions[]\n  external?: string[] | ((id: string) => boolean)\n  plugins?: RollupPlugin[]\n  treeshake?: boolean | TreeshakeOptions\n  watch?: RollupWatchOptions\n  [key: string]: any\n}\n\n/**\n * Rollup 输出选项\n */\nexport interface RollupOutputOptions {\n  dir?: string\n  file?: string\n  format?: RollupFormat\n  name?: string\n  globals?: Record<string, string>\n  sourcemap?: boolean | 'inline' | 'hidden'\n  entryFileNames?: string | ((chunkInfo: any) => string)\n  chunkFileNames?: string\n  assetFileNames?: string\n  banner?: string | (() => string | Promise<string>)\n  footer?: string | (() => string | Promise<string>)\n  intro?: string | (() => string | Promise<string>)\n  outro?: string | (() => string | Promise<string>)\n  [key: string]: any\n}\n\n/**\n * Rollup 格式\n */\nexport type RollupFormat = 'es' | 'cjs' | 'umd' | 'iife' | 'system' | 'amd'\n\n/**\n * Rollup 监听选项\n */\nexport interface RollupWatchOptions extends Omit<RollupOptions, 'watch'> {\n  watch?: {\n    include?: string | string[]\n    exclude?: string | string[]\n    chokidar?: any\n    buildDelay?: number\n    clearScreen?: boolean\n  }\n}\n\n/**\n * Rollup 插件\n */\nexport interface RollupPlugin {\n  name: string\n  buildStart?: (opts: any) => void | Promise<void>\n  resolveId?: (id: string, importer?: string) => string | null | Promise<string | null>\n  load?: (id: string) => string | null | Promise<string | null>\n  transform?: (code: string, id: string) => any | Promise<any>\n  generateBundle?: (opts: any, bundle: any) => void | Promise<void>\n  writeBundle?: (opts: any, bundle: any) => void | Promise<void>\n  [key: string]: any\n}\n\n/**\n * Rolldown 配置选项\n */\nexport interface RolldownOptions {\n  input: string | string[] | Record<string, string>\n  output?: RolldownOutputOptions\n  external?: string[] | ((id: string) => boolean)\n  plugins?: RolldownPlugin[]\n  treeshake?: boolean | TreeshakeOptions\n  platform?: 'browser' | 'node' | 'neutral'\n  watch?: boolean | WatchOptions\n  [key: string]: any\n}\n\n/**\n * Rolldown 输出选项\n */\nexport interface RolldownOutputOptions {\n  dir?: string\n  file?: string\n  format?: RolldownFormat\n  name?: string\n  globals?: Record<string, string>\n  sourcemap?: boolean | 'inline' | 'hidden'\n  entryFileNames?: string\n  chunkFileNames?: string\n  assetFileNames?: string\n  banner?: string | (() => string | Promise<string>)\n  footer?: string | (() => string | Promise<string>)\n  intro?: string | (() => string | Promise<string>)\n  outro?: string | (() => string | Promise<string>)\n  [key: string]: any\n}\n\n/**\n * Rolldown 格式\n */\nexport type RolldownFormat = 'esm' | 'cjs' | 'umd' | 'iife'\n\n/**\n * Rolldown 插件\n */\nexport interface RolldownPlugin {\n  name: string\n  setup?: (build: PluginBuild) => void | Promise<void>\n  [key: string]: any\n}\n\n/**\n * 打包器特定插件\n */\nexport type BundlerSpecificPlugin = RollupPlugin | RolldownPlugin\n\n/**\n * 适配器选项\n */\nexport interface AdapterOptions {\n  logger: any\n  performanceMonitor: any\n  cacheDir?: string\n  tempDir?: string\n}\n\n/**\n * 配置转换器接口\n */\nexport interface ConfigTransformer {\n  transform(config: UnifiedConfig): BundlerSpecificConfig\n}\n\n/**\n * 插件转换器接口\n */\nexport interface PluginTransformer {\n  transform(plugins: UnifiedPlugin[]): BundlerSpecificPlugin[]\n}\n\n/**\n * 结果转换器接口\n */\nexport interface ResultTransformer {\n  transform(result: any, context: TransformContext): BuildResult\n  transformWatcher(watcher: any, context: TransformContext): BuildWatcher\n}\n\n/**\n * 转换上下文\n */\nexport interface TransformContext {\n  bundler: string\n  config: UnifiedConfig\n  duration?: number\n  [key: string]: any\n}\n\n// PerformanceComparison 已在 performance.ts 中定义，这里导入\nexport type { PerformanceComparison } from './performance'\n\n/**\n * 性能结果\n */\nexport interface PerformanceResult {\n  adapter: string\n  buildTime: number\n  memoryUsage: number\n  bundleSize: number\n  success: boolean\n  error?: string\n  features: FeatureSupportMap\n}\n\n/**\n * 对比报告\n */\nexport interface ComparisonReport {\n  buildTimeComparison: any\n  memorySizeComparison: any\n  bundleSizeComparison: any\n  featureComparison: any\n}\n","/**\n * 插件相关类型定义\n */\n\n/**\n * 插件类型枚举\n */\nexport enum PluginType {\n  /** 核心插件 */\n  CORE = 'core',\n  /** 转换插件 */\n  TRANSFORM = 'transform',\n  /** 优化插件 */\n  OPTIMIZATION = 'optimization',\n  /** 工具插件 */\n  UTILITY = 'utility',\n  /** 开发插件 */\n  DEVELOPMENT = 'development',\n  /** 自定义插件 */\n  CUSTOM = 'custom'\n}\n\n/**\n * 插件阶段枚举\n */\nexport enum PluginPhase {\n  /** 构建开始前 */\n  PRE_BUILD = 'pre-build',\n  /** 模块解析 */\n  RESOLVE = 'resolve',\n  /** 模块加载 */\n  LOAD = 'load',\n  /** 代码转换 */\n  TRANSFORM = 'transform',\n  /** 代码生成 */\n  GENERATE = 'generate',\n  /** 构建完成后 */\n  POST_BUILD = 'post-build'\n}\n\n/**\n * 统一插件接口\n */\nexport interface UnifiedPlugin {\n  /** 插件名称 */\n  name: string\n\n  /** 插件类型 */\n  type?: PluginType\n\n  /** 插件版本 */\n  version?: string\n\n  /** 插件描述 */\n  description?: string\n\n  /** 插件作者 */\n  author?: string\n\n  /** 插件优先级 */\n  priority?: number\n\n  /** 插件依赖 */\n  dependencies?: string[]\n\n  /** 插件选项 */\n  options?: Record<string, any>\n\n  /** 是否启用 */\n  enabled?: boolean\n\n  /** 应用条件 */\n  condition?: (context: PluginContext) => boolean\n\n  // 通用钩子\n  setup?: (build: PluginBuild) => void | Promise<void>\n\n  // Rollup 兼容钩子\n  buildStart?: (opts: any) => void | Promise<void>\n  resolveId?: (id: string, importer?: string) => string | null | Promise<string | null>\n  load?: (id: string) => string | null | Promise<string | null>\n  transform?: (code: string, id: string) => any | Promise<any>\n  generateBundle?: (opts: any, bundle: any) => void | Promise<void>\n  writeBundle?: (opts: any, bundle: any) => void | Promise<void>\n\n  // 生命周期钩子\n  onInit?: (context: PluginContext) => void | Promise<void>\n  onDestroy?: (context: PluginContext) => void | Promise<void>\n  onError?: (error: Error, context: PluginContext) => void | Promise<void>\n\n  // 适配器特定配置\n  rollup?: RollupPluginConfig\n  rolldown?: RolldownPluginConfig\n\n  // 插件元数据\n  meta?: PluginMetadata\n}\n\n/**\n * 插件构建接口\n */\nexport interface PluginBuild {\n  /** 构建开始时调用 */\n  onStart(callback: () => void | Promise<void>): void\n\n  /** 模块解析时调用 */\n  onResolve(options: ResolveOptions, callback: ResolveCallback): void\n\n  /** 模块加载时调用 */\n  onLoad(options: LoadOptions, callback: LoadCallback): void\n\n  /** 代码转换时调用 */\n  onTransform(options: TransformOptions, callback: TransformCallback): void\n\n  /** 构建结束时调用 */\n  onEnd(callback: () => void | Promise<void>): void\n\n  /** 获取构建上下文 */\n  getContext(): PluginContext\n\n  /** 添加监听文件 */\n  addWatchFile(file: string): void\n\n  /** 发出资源文件 */\n  emitFile(file: EmittedFile): string\n\n  /** 获取文件名 */\n  getFileName(referenceId: string): string\n}\n\n/**\n * 解析选项\n */\nexport interface ResolveOptions {\n  /** 文件过滤器 */\n  filter: RegExp\n\n  /** 命名空间 */\n  namespace?: string\n}\n\n/**\n * 解析回调\n */\nexport type ResolveCallback = (args: ResolveArgs) => ResolveResult | Promise<ResolveResult>\n\n/**\n * 解析参数\n */\nexport interface ResolveArgs {\n  /** 模块 ID */\n  path: string\n\n  /** 导入者 */\n  importer: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 解析目录 */\n  resolveDir: string\n\n  /** 导入类型 */\n  kind: ImportKind\n}\n\n/**\n * 导入类型\n */\nexport type ImportKind =\n  | 'entry-point'\n  | 'import-statement'\n  | 'require-call'\n  | 'dynamic-import'\n  | 'require-resolve'\n  | 'import-rule'\n  | 'url-token'\n\n/**\n * 解析结果\n */\nexport interface ResolveResult {\n  /** 解析后的路径 */\n  path?: string\n\n  /** 外部模块 */\n  external?: boolean\n\n  /** 命名空间 */\n  namespace?: string\n\n  /** 后缀 */\n  suffix?: string\n\n  /** 插件数据 */\n  pluginData?: any\n\n  /** 错误信息 */\n  errors?: Message[]\n\n  /** 警告信息 */\n  warnings?: Message[]\n\n  /** 监听文件 */\n  watchFiles?: string[]\n\n  /** 监听目录 */\n  watchDirs?: string[]\n}\n\n/**\n * 加载选项\n */\nexport interface LoadOptions {\n  /** 文件过滤器 */\n  filter: RegExp\n\n  /** 命名空间 */\n  namespace?: string\n}\n\n/**\n * 加载回调\n */\nexport type LoadCallback = (args: LoadArgs) => LoadResult | Promise<LoadResult>\n\n/**\n * 加载参数\n */\nexport interface LoadArgs {\n  /** 文件路径 */\n  path: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 后缀 */\n  suffix: string\n\n  /** 插件数据 */\n  pluginData: any\n}\n\n/**\n * 加载结果\n */\nexport interface LoadResult {\n  /** 文件内容 */\n  contents?: string | Uint8Array\n\n  /** 加载器 */\n  loader?: Loader\n\n  /** 解析目录 */\n  resolveDir?: string\n\n  /** 插件数据 */\n  pluginData?: any\n\n  /** 错误信息 */\n  errors?: Message[]\n\n  /** 警告信息 */\n  warnings?: Message[]\n\n  /** 监听文件 */\n  watchFiles?: string[]\n\n  /** 监听目录 */\n  watchDirs?: string[]\n}\n\n/**\n * 加载器类型\n */\nexport type Loader =\n  | 'js'\n  | 'jsx'\n  | 'ts'\n  | 'tsx'\n  | 'css'\n  | 'json'\n  | 'text'\n  | 'base64'\n  | 'dataurl'\n  | 'file'\n  | 'binary'\n  | 'copy'\n\n/**\n * 转换选项\n */\nexport interface TransformOptions {\n  /** 文件过滤器 */\n  filter: RegExp\n\n  /** 命名空间 */\n  namespace?: string\n}\n\n/**\n * 转换回调\n */\nexport type TransformCallback = (args: TransformArgs) => TransformResult | Promise<TransformResult>\n\n/**\n * 转换参数\n */\nexport interface TransformArgs {\n  /** 文件路径 */\n  path: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 文件内容 */\n  contents: string\n\n  /** 加载器 */\n  loader: Loader\n\n  /** 插件数据 */\n  pluginData: any\n}\n\n/**\n * 转换结果\n */\nexport interface TransformResult {\n  /** 转换后的内容 */\n  contents?: string\n\n  /** 加载器 */\n  loader?: Loader\n\n  /** 插件数据 */\n  pluginData?: any\n\n  /** 错误信息 */\n  errors?: Message[]\n\n  /** 警告信息 */\n  warnings?: Message[]\n\n  /** 监听文件 */\n  watchFiles?: string[]\n\n  /** 监听目录 */\n  watchDirs?: string[]\n}\n\n/**\n * 消息\n */\nexport interface Message {\n  /** 消息 ID */\n  id?: string\n\n  /** 插件名称 */\n  pluginName: string\n\n  /** 消息文本 */\n  text: string\n\n  /** 位置信息 */\n  location?: Location\n\n  /** 注释 */\n  notes?: Note[]\n\n  /** 详细信息 */\n  detail?: any\n}\n\n/**\n * 位置信息\n */\nexport interface Location {\n  /** 文件路径 */\n  file: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 行号 */\n  line: number\n\n  /** 列号 */\n  column: number\n\n  /** 行内容 */\n  lineText: string\n\n  /** 建议 */\n  suggestion: string\n}\n\n/**\n * 注释\n */\nexport interface Note {\n  /** 注释文本 */\n  text: string\n\n  /** 位置信息 */\n  location?: Location\n}\n\n/**\n * 发出的文件\n */\nexport interface EmittedFile {\n  /** 文件类型 */\n  type: 'asset' | 'chunk'\n\n  /** 文件名 */\n  fileName?: string\n\n  /** 文件名模式 */\n  name?: string\n\n  /** 文件内容 */\n  source?: string | Uint8Array\n\n  /** 入口点 */\n  id?: string\n\n  /** 是否保留签名 */\n  preserveSignature?: 'strict' | 'allow-extension' | 'exports-only' | false\n}\n\n/**\n * 插件上下文\n */\nexport interface PluginContext {\n  /** 构建 ID */\n  buildId: string\n\n  /** 插件名称 */\n  pluginName: string\n\n  /** 工作目录 */\n  cwd: string\n\n  /** 构建模式 */\n  mode: 'development' | 'production'\n\n  /** 目标平台 */\n  platform: 'browser' | 'node' | 'neutral'\n\n  /** 环境变量 */\n  env: Record<string, string>\n\n  /** 配置信息 */\n  config: any\n\n  /** 缓存目录 */\n  cacheDir: string\n\n  /** 临时目录 */\n  tempDir: string\n\n  /** 日志记录器 */\n  logger: any\n\n  /** 性能监控器 */\n  performanceMonitor: any\n}\n\n/**\n * Rollup 插件配置\n */\nexport interface RollupPluginConfig {\n  /** 插件选项 */\n  [key: string]: any\n}\n\n/**\n * Rolldown 插件配置\n */\nexport interface RolldownPluginConfig {\n  /** 插件选项 */\n  [key: string]: any\n}\n\n/**\n * 插件元数据\n */\nexport interface PluginMetadata {\n  /** 插件标签 */\n  tags?: string[]\n\n  /** 插件分类 */\n  category?: string\n\n  /** 插件主页 */\n  homepage?: string\n\n  /** 插件仓库 */\n  repository?: string\n\n  /** 插件许可证 */\n  license?: string\n\n  /** 插件关键词 */\n  keywords?: string[]\n\n  /** 插件兼容性 */\n  compatibility?: {\n    rollup?: string\n    rolldown?: string\n    node?: string\n  }\n\n  /** 插件配置模式 */\n  configSchema?: any\n}\n\n/**\n * 插件管理器选项\n */\nexport interface PluginManagerOptions {\n  /** 插件目录 */\n  pluginDir?: string\n\n  /** 是否启用缓存 */\n  cache?: boolean\n\n  /** 缓存目录 */\n  cacheDir?: string\n\n  /** 是否启用热重载 */\n  hotReload?: boolean\n\n  /** 插件加载超时时间 */\n  timeout?: number\n\n  /** 最大插件数量 */\n  maxPlugins?: number\n\n  /** 插件白名单 */\n  whitelist?: string[]\n\n  /** 插件黑名单 */\n  blacklist?: string[]\n}\n\n/**\n * 插件加载结果\n */\nexport interface PluginLoadResult {\n  /** 加载的插件 */\n  plugin: UnifiedPlugin\n\n  /** 加载时间 */\n  loadTime: number\n\n  /** 是否成功 */\n  success: boolean\n\n  /** 错误信息 */\n  error?: Error\n\n  /** 警告信息 */\n  warnings?: string[]\n}\n\n// PluginPerformanceStats 已在 performance.ts 中定义，这里导入\nexport type { PluginPerformanceStats } from './performance'\n\n// HookPerformance 已在 performance.ts 中定义，这里导入\nexport type { HookPerformance } from './performance'\n","/**\n * 打包器相关类型定义\n */\n\nimport type { BundlerFeature } from './adapter'\n\n/**\n * 支持的打包器类型\n */\nexport type BundlerType = 'rollup' | 'rolldown'\n\n/**\n * 打包器状态\n */\nexport enum BundlerStatus {\n  /** 未初始化 */\n  UNINITIALIZED = 'uninitialized',\n  /** 初始化中 */\n  INITIALIZING = 'initializing',\n  /** 就绪 */\n  READY = 'ready',\n  /** 构建中 */\n  BUILDING = 'building',\n  /** 监听中 */\n  WATCHING = 'watching',\n  /** 错误状态 */\n  ERROR = 'error',\n  /** 已销毁 */\n  DISPOSED = 'disposed'\n}\n\n/**\n * 打包器信息\n */\nexport interface BundlerInfo {\n  /** 打包器名称 */\n  name: BundlerType\n\n  /** 打包器版本 */\n  version: string\n\n  /** 是否可用 */\n  available: boolean\n\n  /** 安装路径 */\n  installPath?: string\n\n  /** 支持的功能 */\n  features: BundlerFeature[]\n\n  /** 性能特征 */\n  performance: BundlerPerformanceProfile\n\n  /** 兼容性信息 */\n  compatibility: BundlerCompatibility\n}\n\n// BundlerFeature 已在 adapter.ts 中定义，这里导入\nexport { BundlerFeature } from './adapter'\n\n/**\n * 打包器性能特征\n */\nexport interface BundlerPerformanceProfile {\n  /** 构建速度等级 */\n  buildSpeed: 'slow' | 'medium' | 'fast' | 'very-fast'\n\n  /** 内存使用等级 */\n  memoryUsage: 'low' | 'medium' | 'high' | 'very-high'\n\n  /** 启动时间 */\n  startupTime: 'fast' | 'medium' | 'slow'\n\n  /** 增量构建性能 */\n  incrementalBuild: 'excellent' | 'good' | 'fair' | 'poor'\n\n  /** 大型项目支持 */\n  largeProjectSupport: 'excellent' | 'good' | 'fair' | 'poor'\n\n  /** 并行处理能力 */\n  parallelProcessing: 'excellent' | 'good' | 'fair' | 'poor'\n}\n\n/**\n * 打包器兼容性\n */\nexport interface BundlerCompatibility {\n  /** Node.js 版本要求 */\n  nodeVersion: string\n\n  /** 操作系统支持 */\n  platforms: ('win32' | 'darwin' | 'linux')[]\n\n  /** 架构支持 */\n  architectures: ('x64' | 'arm64' | 'ia32')[]\n\n  /** 插件兼容性 */\n  pluginCompatibility: {\n    /** Rollup 插件兼容性 */\n    rollup: 'full' | 'partial' | 'none'\n    /** Webpack 插件兼容性 */\n    webpack: 'full' | 'partial' | 'none'\n    /** Vite 插件兼容性 */\n    vite: 'full' | 'partial' | 'none'\n  }\n\n  /** 配置兼容性 */\n  configCompatibility: {\n    /** 与其他工具的配置兼容性 */\n    rollup: boolean\n    webpack: boolean\n    vite: boolean\n  }\n}\n\n/**\n * 打包器配置\n */\nexport interface BundlerConfig {\n  /** 打包器类型 */\n  type: BundlerType\n\n  /** 打包器选项 */\n  options?: BundlerOptions\n\n  /** 插件配置 */\n  plugins?: any[]\n\n  /** 优化配置 */\n  optimization?: OptimizationConfig\n\n  /** 开发配置 */\n  development?: DevelopmentConfig\n\n  /** 实验性功能 */\n  experimental?: ExperimentalConfig\n}\n\n/**\n * 打包器选项\n */\nexport interface BundlerOptions {\n  /** 工作目录 */\n  cwd?: string\n\n  /** 缓存目录 */\n  cacheDir?: string\n\n  /** 临时目录 */\n  tempDir?: string\n\n  /** 日志级别 */\n  logLevel?: 'silent' | 'error' | 'warn' | 'info' | 'debug'\n\n  /** 是否启用颜色输出 */\n  colors?: boolean\n\n  /** 是否清屏 */\n  clearScreen?: boolean\n\n  /** 构建超时时间 */\n  timeout?: number\n\n  /** 最大内存使用 */\n  maxMemory?: string | number\n\n  /** 工作线程数 */\n  workers?: number | 'auto'\n}\n\n/**\n * 优化配置\n */\nexport interface OptimizationConfig {\n  /** 是否启用 Tree Shaking */\n  treeshake?: boolean\n\n  /** 是否启用代码分割 */\n  codeSplitting?: boolean\n\n  /** 是否启用压缩 */\n  minify?: boolean\n\n  /** 是否启用 gzip 压缩 */\n  gzip?: boolean\n\n  /** 是否启用 brotli 压缩 */\n  brotli?: boolean\n\n  /** 是否移除未使用的代码 */\n  removeUnusedCode?: boolean\n\n  /** 是否内联小文件 */\n  inlineSmallFiles?: boolean\n\n  /** 资源优化 */\n  assets?: {\n    /** 图片优化 */\n    images?: boolean\n    /** 字体优化 */\n    fonts?: boolean\n    /** SVG 优化 */\n    svg?: boolean\n  }\n}\n\n/**\n * 开发配置\n */\nexport interface DevelopmentConfig {\n  /** 是否启用热重载 */\n  hmr?: boolean\n\n  /** 是否启用实时重载 */\n  liveReload?: boolean\n\n  /** 开发服务器配置 */\n  server?: {\n    /** 端口号 */\n    port?: number\n    /** 主机名 */\n    host?: string\n    /** 是否启用 HTTPS */\n    https?: boolean\n    /** 是否自动打开浏览器 */\n    open?: boolean\n  }\n\n  /** 是否启用源码映射 */\n  sourcemap?: boolean | 'inline'\n\n  /** 是否启用错误覆盖 */\n  errorOverlay?: boolean\n\n  /** 是否启用进度显示 */\n  progress?: boolean\n}\n\n/**\n * 实验性功能配置\n */\nexport interface ExperimentalConfig {\n  /** 是否启用实验性功能 */\n  enabled?: boolean\n\n  /** 具体的实验性功能 */\n  features?: string[]\n\n  /** 实验性插件 */\n  plugins?: any[]\n\n  /** 实验性优化 */\n  optimizations?: string[]\n}\n\n/**\n * 打包器检测结果\n */\nexport interface BundlerDetectionResult {\n  /** 可用的打包器 */\n  available: BundlerInfo[]\n\n  /** 推荐的打包器 */\n  recommended: BundlerType\n\n  /** 推荐理由 */\n  reason: string\n\n  /** 性能对比 */\n  performance: Record<BundlerType, BundlerPerformanceMetrics>\n\n  /** 兼容性分析 */\n  compatibility: Record<BundlerType, CompatibilityAnalysis>\n}\n\n/**\n * 打包器性能指标\n */\nexport interface BundlerPerformanceMetrics {\n  /** 构建时间 */\n  buildTime: number\n\n  /** 内存使用 */\n  memoryUsage: number\n\n  /** 启动时间 */\n  startupTime: number\n\n  /** 包大小 */\n  bundleSize: number\n\n  /** 缓存命中率 */\n  cacheHitRate: number\n\n  /** 并行效率 */\n  parallelEfficiency: number\n}\n\n/**\n * 兼容性分析\n */\nexport interface CompatibilityAnalysis {\n  /** 整体兼容性评分 */\n  score: number\n\n  /** 插件兼容性 */\n  pluginCompatibility: number\n\n  /** 配置兼容性 */\n  configCompatibility: number\n\n  /** 功能兼容性 */\n  featureCompatibility: number\n\n  /** 兼容性问题 */\n  issues: CompatibilityIssue[]\n\n  /** 解决方案 */\n  solutions: string[]\n}\n\n/**\n * 兼容性问题\n */\nexport interface CompatibilityIssue {\n  /** 问题类型 */\n  type: 'plugin' | 'config' | 'feature' | 'dependency'\n\n  /** 问题描述 */\n  description: string\n\n  /** 严重程度 */\n  severity: 'low' | 'medium' | 'high' | 'critical'\n\n  /** 影响范围 */\n  impact: string[]\n\n  /** 解决方案 */\n  solution?: string\n\n  /** 相关文档 */\n  documentation?: string\n}\n\n/**\n * 打包器切换选项\n */\nexport interface BundlerSwitchOptions {\n  /** 目标打包器 */\n  target: BundlerType\n\n  /** 是否保留配置 */\n  preserveConfig?: boolean\n\n  /** 是否迁移插件 */\n  migratePlugins?: boolean\n\n  /** 是否备份原配置 */\n  backup?: boolean\n\n  /** 迁移策略 */\n  migrationStrategy?: 'conservative' | 'aggressive' | 'custom'\n\n  /** 自定义迁移规则 */\n  customRules?: MigrationRule[]\n}\n\n/**\n * 迁移规则\n */\nexport interface MigrationRule {\n  /** 规则名称 */\n  name: string\n\n  /** 源配置路径 */\n  from: string\n\n  /** 目标配置路径 */\n  to: string\n\n  /** 转换函数 */\n  transform?: (value: any) => any\n\n  /** 是否必需 */\n  required?: boolean\n\n  /** 默认值 */\n  defaultValue?: any\n}\n\n/**\n * 打包器切换结果\n */\nexport interface BundlerSwitchResult {\n  /** 是否成功 */\n  success: boolean\n\n  /** 新的打包器 */\n  newBundler: BundlerType\n\n  /** 迁移的配置 */\n  migratedConfig: any\n\n  /** 迁移的插件 */\n  migratedPlugins: any[]\n\n  /** 迁移报告 */\n  migrationReport: MigrationReport\n\n  /** 警告信息 */\n  warnings: string[]\n\n  /** 错误信息 */\n  errors: string[]\n}\n\n/**\n * 迁移报告\n */\nexport interface MigrationReport {\n  /** 迁移的配置项数量 */\n  configItemsMigrated: number\n\n  /** 迁移的插件数量 */\n  pluginsMigrated: number\n\n  /** 无法迁移的配置项 */\n  unmigratableConfigs: string[]\n\n  /** 无法迁移的插件 */\n  unmigratablePlugins: string[]\n\n  /** 需要手动处理的项目 */\n  manualActions: ManualAction[]\n\n  /** 迁移时间 */\n  migrationTime: number\n}\n\n/**\n * 手动操作\n */\nexport interface ManualAction {\n  /** 操作类型 */\n  type: 'config' | 'plugin' | 'dependency' | 'file'\n\n  /** 操作描述 */\n  description: string\n\n  /** 相关文件 */\n  files?: string[]\n\n  /** 建议的操作 */\n  suggestedAction: string\n\n  /** 参考文档 */\n  documentation?: string\n}\n","/**\n * 输出格式相关常量\n */\n\nimport type { OutputFormat } from '../types/output'\n\n/**\n * 支持的输出格式\n */\nexport const OUTPUT_FORMATS: OutputFormat[] = ['esm', 'cjs', 'umd', 'iife']\n\n/**\n * 格式别名映射\n */\nexport const FORMAT_ALIASES: Record<string, OutputFormat> = {\n  'es': 'esm',\n  'es6': 'esm',\n  'module': 'esm',\n  'commonjs': 'cjs',\n  'common': 'cjs',\n  'universal': 'umd',\n  'browser': 'iife',\n  'global': 'iife'\n}\n\n/**\n * 格式描述\n */\nexport const FORMAT_DESCRIPTIONS: Record<OutputFormat, string> = {\n  esm: 'ES Module - 现代 JavaScript 模块格式，支持 Tree Shaking',\n  cjs: 'CommonJS - Node.js 默认模块格式',\n  umd: 'Universal Module Definition - 通用模块格式，支持多种环境',\n  iife: 'Immediately Invoked Function Expression - 立即执行函数，适用于浏览器',\n  css: 'Cascading Style Sheets - 样式表格式'\n}\n\n/**\n * 格式文件扩展名\n */\nexport const FORMAT_EXTENSIONS: Record<OutputFormat, string> = {\n  esm: '.js',\n  cjs: '.cjs',\n  umd: '.umd.js',\n  iife: '.iife.js',\n  css: '.css'\n}\n\n/**\n * 格式默认文件名模式\n */\nexport const FORMAT_FILE_PATTERNS: Record<OutputFormat, string> = {\n  esm: '[name].js',\n  cjs: '[name].cjs',\n  umd: '[name].umd.js',\n  iife: '[name].iife.js',\n  css: '[name].css'\n}\n\n/**\n * 格式兼容性\n */\nexport const FORMAT_COMPATIBILITY: Record<OutputFormat, {\n  browser: boolean\n  node: boolean\n  requiresGlobals: boolean\n  supportsTreeShaking: boolean\n  supportsCodeSplitting: boolean\n}> = {\n  esm: {\n    browser: true,\n    node: true,\n    requiresGlobals: false,\n    supportsTreeShaking: true,\n    supportsCodeSplitting: true\n  },\n  cjs: {\n    browser: false,\n    node: true,\n    requiresGlobals: false,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  },\n  umd: {\n    browser: true,\n    node: true,\n    requiresGlobals: true,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  },\n  iife: {\n    browser: true,\n    node: false,\n    requiresGlobals: true,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  },\n  css: {\n    browser: true,\n    node: false,\n    requiresGlobals: false,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  }\n}\n\n/**\n * 格式推荐用途\n */\nexport const FORMAT_USE_CASES: Record<OutputFormat, string[]> = {\n  esm: [\n    '现代 JavaScript 库',\n    '支持 Tree Shaking 的库',\n    'Node.js 模块',\n    '浏览器原生模块'\n  ],\n  cjs: [\n    'Node.js 库',\n    '传统 npm 包',\n    '服务端应用',\n    '构建工具插件'\n  ],\n  umd: [\n    '通用库',\n    '需要多环境支持的库',\n    'CDN 分发的库',\n    '向后兼容的库'\n  ],\n  iife: [\n    '浏览器脚本',\n    '内联脚本',\n    '不支持模块的环境',\n    '简单的工具脚本'\n  ],\n  css: [\n    '样式库',\n    '主题包',\n    '组件样式',\n    'CSS 框架'\n  ]\n}\n\n/**\n * 格式优先级（用于自动选择）\n */\nexport const FORMAT_PRIORITY: Record<OutputFormat, number> = {\n  esm: 4, // 最高优先级\n  cjs: 3,\n  umd: 2,\n  iife: 1,\n  css: 5 // CSS 样式库的最高优先级\n}\n\n/**\n * 格式组合建议\n */\nexport const FORMAT_COMBINATIONS = {\n  // 现代库推荐组合\n  modern: ['esm', 'cjs'] as OutputFormat[],\n\n  // 通用库推荐组合\n  universal: ['esm', 'cjs', 'umd'] as OutputFormat[],\n\n  // 浏览器库推荐组合\n  browser: ['esm', 'umd', 'iife'] as OutputFormat[],\n\n  // Node.js 库推荐组合\n  node: ['esm', 'cjs'] as OutputFormat[],\n\n  // 最小组合\n  minimal: ['esm'] as OutputFormat[],\n\n  // 完整组合\n  complete: ['esm', 'cjs', 'umd', 'iife'] as OutputFormat[]\n}\n\n/**\n * 根据库类型推荐的格式\n */\nexport const LIBRARY_TYPE_FORMATS = {\n  typescript: ['esm', 'cjs'],\n  style: ['esm'],\n  vue2: ['esm', 'cjs', 'umd'],\n  vue3: ['esm', 'cjs', 'umd'],\n  mixed: ['esm', 'cjs']\n} as const\n\n/**\n * 格式特定的配置选项\n */\nexport const FORMAT_SPECIFIC_OPTIONS = {\n  esm: {\n    // ES Module 特定选项\n    exports: 'named',\n    interop: 'auto',\n    strict: true\n  },\n  cjs: {\n    // CommonJS 特定选项\n    exports: 'auto',\n    interop: 'auto',\n    strict: false\n  },\n  umd: {\n    // UMD 特定选项\n    exports: 'auto',\n    interop: 'auto',\n    strict: false,\n    // 需要全局变量名\n    requiresName: true\n  },\n  iife: {\n    // IIFE 特定选项\n    exports: 'none',\n    interop: false,\n    strict: false,\n    // 需要全局变量名\n    requiresName: true\n  }\n} as const\n\n/**\n * 格式验证规则\n */\nexport const FORMAT_VALIDATION_RULES = {\n  esm: {\n    // ES Module 验证规则\n    allowedExports: ['named', 'default'],\n    requiresModernNode: true,\n    supportsTopLevelAwait: true\n  },\n  cjs: {\n    // CommonJS 验证规则\n    allowedExports: ['auto', 'default', 'named'],\n    requiresModernNode: false,\n    supportsTopLevelAwait: false\n  },\n  umd: {\n    // UMD 验证规则\n    allowedExports: ['auto', 'default'],\n    requiresGlobalName: true,\n    requiresGlobalsMapping: true\n  },\n  iife: {\n    // IIFE 验证规则\n    allowedExports: ['none'],\n    requiresGlobalName: true,\n    requiresGlobalsMapping: true\n  }\n} as const\n\n/**\n * 格式性能特征\n */\nexport const FORMAT_PERFORMANCE = {\n  esm: {\n    bundleSize: 'small',\n    loadTime: 'fast',\n    treeShaking: 'excellent',\n    caching: 'excellent'\n  },\n  cjs: {\n    bundleSize: 'medium',\n    loadTime: 'medium',\n    treeShaking: 'none',\n    caching: 'good'\n  },\n  umd: {\n    bundleSize: 'large',\n    loadTime: 'slow',\n    treeShaking: 'none',\n    caching: 'fair'\n  },\n  iife: {\n    bundleSize: 'large',\n    loadTime: 'slow',\n    treeShaking: 'none',\n    caching: 'poor'\n  }\n} as const\n","/**\n * 打包器相关常量\n */\n\nimport type { BundlerType } from '../types/bundler'\nimport { BundlerFeature } from '../types/bundler'\n\n/**\n * 支持的打包器列表\n */\nexport const SUPPORTED_BUNDLERS: BundlerType[] = ['rollup', 'rolldown']\n\n/**\n * 默认打包器\n */\nexport const DEFAULT_BUNDLER: BundlerType = 'rollup'\n\n/**\n * 打包器信息\n */\nexport const BUNDLER_INFO = {\n  rollup: {\n    name: 'Rollup',\n    description: '成熟稳定的 JavaScript 模块打包器，专注于 ES 模块',\n    homepage: 'https://rollupjs.org',\n    repository: 'https://github.com/rollup/rollup',\n    minNodeVersion: '14.18.0',\n    stableVersion: '^4.0.0',\n    features: [\n      BundlerFeature.TREE_SHAKING,\n      BundlerFeature.CODE_SPLITTING,\n      BundlerFeature.DYNAMIC_IMPORT,\n      BundlerFeature.SOURCEMAP,\n      BundlerFeature.PLUGIN_SYSTEM,\n      BundlerFeature.CONFIG_FILE,\n      BundlerFeature.CACHE_SUPPORT\n    ]\n  },\n  \n  rolldown: {\n    name: 'Rolldown',\n    description: '基于 Rust 的高性能 JavaScript 打包器，兼容 Rollup API',\n    homepage: 'https://rolldown.rs',\n    repository: 'https://github.com/rolldown/rolldown',\n    minNodeVersion: '16.0.0',\n    stableVersion: '^0.1.0',\n    features: [\n      BundlerFeature.TREE_SHAKING,\n      BundlerFeature.CODE_SPLITTING,\n      BundlerFeature.DYNAMIC_IMPORT,\n      BundlerFeature.SOURCEMAP,\n      BundlerFeature.MINIFICATION,\n      BundlerFeature.PLUGIN_SYSTEM,\n      BundlerFeature.CONFIG_FILE,\n      BundlerFeature.CACHE_SUPPORT,\n      BundlerFeature.PARALLEL_BUILD,\n      BundlerFeature.INCREMENTAL_BUILD\n    ]\n  }\n} as const\n\n/**\n * 打包器性能特征\n */\nexport const BUNDLER_PERFORMANCE = {\n  rollup: {\n    buildSpeed: 'medium',\n    memoryUsage: 'medium',\n    startupTime: 'fast',\n    incrementalBuild: 'fair',\n    largeProjectSupport: 'good',\n    parallelProcessing: 'poor'\n  },\n  \n  rolldown: {\n    buildSpeed: 'very-fast',\n    memoryUsage: 'low',\n    startupTime: 'fast',\n    incrementalBuild: 'excellent',\n    largeProjectSupport: 'excellent',\n    parallelProcessing: 'excellent'\n  }\n} as const\n\n/**\n * 打包器兼容性\n */\nexport const BUNDLER_COMPATIBILITY = {\n  rollup: {\n    nodeVersion: '>=14.18.0',\n    platforms: ['win32', 'darwin', 'linux'],\n    architectures: ['x64', 'arm64'],\n    pluginCompatibility: {\n      rollup: 'full',\n      webpack: 'none',\n      vite: 'partial'\n    },\n    configCompatibility: {\n      rollup: true,\n      webpack: false,\n      vite: true\n    }\n  },\n  \n  rolldown: {\n    nodeVersion: '>=16.0.0',\n    platforms: ['win32', 'darwin', 'linux'],\n    architectures: ['x64', 'arm64'],\n    pluginCompatibility: {\n      rollup: 'partial',\n      webpack: 'none',\n      vite: 'partial'\n    },\n    configCompatibility: {\n      rollup: true,\n      webpack: false,\n      vite: false\n    }\n  }\n} as const\n\n/**\n * 打包器推荐使用场景\n */\nexport const BUNDLER_USE_CASES = {\n  rollup: [\n    '成熟的库项目',\n    '需要稳定性的生产环境',\n    '复杂的插件需求',\n    '对构建速度要求不高的项目',\n    '需要丰富插件生态的项目'\n  ],\n  \n  rolldown: [\n    '大型项目',\n    '对构建速度有高要求的项目',\n    '需要增量构建的项目',\n    '内存敏感的环境',\n    '现代化的新项目'\n  ]\n} as const\n\n/**\n * 打包器优缺点\n */\nexport const BUNDLER_PROS_CONS = {\n  rollup: {\n    pros: [\n      '成熟稳定，生产环境验证',\n      '丰富的插件生态系统',\n      '优秀的 Tree Shaking 支持',\n      '良好的文档和社区支持',\n      '配置简单直观'\n    ],\n    cons: [\n      '构建速度相对较慢',\n      '大型项目性能有限',\n      '内存使用较高',\n      '缺乏内置的并行处理'\n    ]\n  },\n  \n  rolldown: {\n    pros: [\n      '极快的构建速度',\n      '低内存使用',\n      '优秀的增量构建',\n      '内置并行处理',\n      '兼容 Rollup API'\n    ],\n    cons: [\n      '相对较新，生态系统有限',\n      '插件兼容性不完整',\n      '文档和社区支持有限',\n      '可能存在稳定性问题'\n    ]\n  }\n} as const\n\n/**\n * 打包器选择建议\n */\nexport const BUNDLER_SELECTION_CRITERIA = {\n  // 项目规模\n  projectSize: {\n    small: 'rollup',\n    medium: 'rollup',\n    large: 'rolldown',\n    enterprise: 'rolldown'\n  },\n  \n  // 构建速度要求\n  buildSpeed: {\n    low: 'rollup',\n    medium: 'rollup',\n    high: 'rolldown',\n    critical: 'rolldown'\n  },\n  \n  // 稳定性要求\n  stability: {\n    low: 'rolldown',\n    medium: 'rollup',\n    high: 'rollup',\n    critical: 'rollup'\n  },\n  \n  // 插件需求\n  pluginNeeds: {\n    minimal: 'rolldown',\n    moderate: 'rollup',\n    extensive: 'rollup',\n    custom: 'rollup'\n  }\n} as const\n\n/**\n * 打包器迁移难度\n */\nexport const MIGRATION_DIFFICULTY = {\n  'rollup-to-rolldown': 'easy',\n  'rolldown-to-rollup': 'easy'\n} as const\n\n/**\n * 打包器配置映射\n */\nexport const CONFIG_MAPPING = {\n  // Rollup 到 Rolldown 的配置映射\n  'rollup-to-rolldown': {\n    input: 'input',\n    output: 'output',\n    external: 'external',\n    plugins: 'plugins',\n    treeshake: 'treeshake',\n    // Rolldown 特有配置\n    platform: 'browser' // 默认值\n  },\n  \n  // Rolldown 到 Rollup 的配置映射\n  'rolldown-to-rollup': {\n    input: 'input',\n    output: 'output',\n    external: 'external',\n    plugins: 'plugins',\n    treeshake: 'treeshake'\n    // 忽略 platform 等 Rolldown 特有配置\n  }\n} as const\n\n/**\n * 打包器检测命令\n */\nexport const BUNDLER_DETECTION_COMMANDS = {\n  rollup: {\n    check: 'rollup --version',\n    install: 'npm install rollup --save-dev'\n  },\n  \n  rolldown: {\n    check: 'rolldown --version',\n    install: 'npm install rolldown --save-dev'\n  }\n} as const\n\n/**\n * 打包器默认配置\n */\nexport const BUNDLER_DEFAULT_CONFIG = {\n  rollup: {\n    treeshake: true,\n    output: {\n      format: 'esm',\n      sourcemap: true\n    }\n  },\n  \n  rolldown: {\n    treeshake: true,\n    platform: 'browser',\n    output: {\n      format: 'esm',\n      sourcemap: true\n    }\n  }\n} as const\n\n/**\n * 打包器错误处理\n */\nexport const BUNDLER_ERROR_PATTERNS = {\n  rollup: {\n    notFound: /Cannot find module 'rollup'/,\n    versionMismatch: /Rollup version .* is not supported/,\n    configError: /Could not resolve config file/,\n    buildError: /Build failed with \\d+ error/\n  },\n  \n  rolldown: {\n    notFound: /Cannot find module 'rolldown'/,\n    versionMismatch: /Rolldown version .* is not supported/,\n    configError: /Could not resolve config file/,\n    buildError: /Build failed with \\d+ error/\n  }\n} as const\n\n/**\n * 打包器性能基准\n */\nexport const PERFORMANCE_BENCHMARKS = {\n  // 小型项目 (< 100 文件)\n  small: {\n    rollup: { buildTime: '2-5s', memoryUsage: '100-200MB' },\n    rolldown: { buildTime: '0.5-1s', memoryUsage: '50-100MB' }\n  },\n  \n  // 中型项目 (100-500 文件)\n  medium: {\n    rollup: { buildTime: '10-30s', memoryUsage: '300-500MB' },\n    rolldown: { buildTime: '2-5s', memoryUsage: '100-200MB' }\n  },\n  \n  // 大型项目 (> 500 文件)\n  large: {\n    rollup: { buildTime: '60-180s', memoryUsage: '500MB-1GB' },\n    rolldown: { buildTime: '5-15s', memoryUsage: '200-400MB' }\n  }\n} as const\n","/**\n * 文件扩展名相关常量\n */\n\n/**\n * 支持的文件扩展名\n */\nexport const SUPPORTED_EXTENSIONS = {\n  // JavaScript 文件\n  javascript: ['.js', '.mjs', '.cjs'],\n  \n  // TypeScript 文件\n  typescript: ['.ts', '.tsx', '.d.ts'],\n  \n  // JSX 文件\n  jsx: ['.jsx', '.tsx'],\n  \n  // Vue 文件\n  vue: ['.vue'],\n  \n  // 样式文件\n  styles: ['.css', '.less', '.scss', '.sass', '.styl', '.stylus'],\n  \n  // 配置文件\n  config: ['.json', '.js', '.ts', '.mjs'],\n  \n  // 资源文件\n  assets: ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp', '.ico'],\n  \n  // 字体文件\n  fonts: ['.woff', '.woff2', '.eot', '.ttf', '.otf'],\n  \n  // 文档文件\n  docs: ['.md', '.mdx', '.txt'],\n  \n  // 数据文件\n  data: ['.json', '.yaml', '.yml', '.toml', '.xml']\n} as const\n\n/**\n * 文件类型映射\n */\nexport const EXTENSION_TO_TYPE = {\n  // JavaScript\n  '.js': 'javascript',\n  '.mjs': 'javascript',\n  '.cjs': 'javascript',\n  \n  // TypeScript\n  '.ts': 'typescript',\n  '.tsx': 'typescript',\n  '.d.ts': 'typescript-declaration',\n  \n  // JSX\n  '.jsx': 'jsx',\n  \n  // Vue\n  '.vue': 'vue',\n  \n  // 样式\n  '.css': 'css',\n  '.less': 'less',\n  '.scss': 'scss',\n  '.sass': 'sass',\n  '.styl': 'stylus',\n  '.stylus': 'stylus',\n  \n  // 配置\n  '.json': 'json',\n  \n  // 资源\n  '.png': 'image',\n  '.jpg': 'image',\n  '.jpeg': 'image',\n  '.gif': 'image',\n  '.svg': 'svg',\n  '.webp': 'image',\n  '.ico': 'icon',\n  \n  // 字体\n  '.woff': 'font',\n  '.woff2': 'font',\n  '.eot': 'font',\n  '.ttf': 'font',\n  '.otf': 'font',\n  \n  // 文档\n  '.md': 'markdown',\n  '.mdx': 'mdx',\n  '.txt': 'text',\n  \n  // 数据\n  '.yaml': 'yaml',\n  '.yml': 'yaml',\n  '.toml': 'toml',\n  '.xml': 'xml'\n} as const\n\n/**\n * 加载器映射\n */\nexport const EXTENSION_TO_LOADER = {\n  '.js': 'js',\n  '.mjs': 'js',\n  '.cjs': 'js',\n  '.ts': 'ts',\n  '.tsx': 'tsx',\n  '.jsx': 'jsx',\n  '.vue': 'vue',\n  '.css': 'css',\n  '.less': 'less',\n  '.scss': 'scss',\n  '.sass': 'sass',\n  '.styl': 'stylus',\n  '.stylus': 'stylus',\n  '.json': 'json',\n  '.png': 'file',\n  '.jpg': 'file',\n  '.jpeg': 'file',\n  '.gif': 'file',\n  '.svg': 'svg',\n  '.webp': 'file',\n  '.ico': 'file',\n  '.woff': 'file',\n  '.woff2': 'file',\n  '.eot': 'file',\n  '.ttf': 'file',\n  '.otf': 'file',\n  '.md': 'text',\n  '.txt': 'text'\n} as const\n\n/**\n * 入口文件优先级\n */\nexport const ENTRY_FILE_PRIORITY = [\n  'index.ts',\n  'index.tsx',\n  'index.js',\n  'index.jsx',\n  'index.vue',\n  'main.ts',\n  'main.tsx',\n  'main.js',\n  'main.jsx',\n  'src/index.ts',\n  'src/index.tsx',\n  'src/index.js',\n  'src/index.jsx',\n  'src/main.ts',\n  'src/main.tsx',\n  'src/main.js',\n  'src/main.jsx',\n  'lib/index.ts',\n  'lib/index.js'\n] as const\n\n/**\n * 配置文件优先级\n */\nexport const CONFIG_FILE_PRIORITY = [\n  'builder.config.ts',\n  'builder.config.js',\n  'builder.config.mjs',\n  'builder.config.json',\n  '.builderrc.ts',\n  '.builderrc.js',\n  '.builderrc.json',\n  'package.json'\n] as const\n\n/**\n * TypeScript 配置文件\n */\nexport const TYPESCRIPT_CONFIG_FILES = [\n  'tsconfig.json',\n  'tsconfig.build.json',\n  'tsconfig.lib.json',\n  'tsconfig.prod.json'\n] as const\n\n/**\n * 样式配置文件\n */\nexport const STYLE_CONFIG_FILES = [\n  'postcss.config.js',\n  'postcss.config.ts',\n  'postcss.config.json',\n  '.postcssrc',\n  '.postcssrc.js',\n  '.postcssrc.json',\n  'tailwind.config.js',\n  'tailwind.config.ts',\n  '.stylelintrc',\n  '.stylelintrc.js',\n  '.stylelintrc.json'\n] as const\n\n/**\n * Vue 配置文件\n */\nexport const VUE_CONFIG_FILES = [\n  'vue.config.js',\n  'vue.config.ts',\n  'vite.config.js',\n  'vite.config.ts'\n] as const\n\n/**\n * 忽略的文件模式\n */\nexport const IGNORE_PATTERNS = [\n  // 依赖目录\n  'node_modules/**',\n  \n  // 构建输出\n  'dist/**',\n  'build/**',\n  'lib/**',\n  'es/**',\n  'cjs/**',\n  'umd/**',\n  \n  // 缓存目录\n  '.cache/**',\n  '.temp/**',\n  '.tmp/**',\n  \n  // 测试文件\n  '**/*.test.*',\n  '**/*.spec.*',\n  '**/__tests__/**',\n  '**/__mocks__/**',\n  'test/**',\n  'tests/**',\n  \n  // 配置文件\n  '*.config.*',\n  '.*rc.*',\n  \n  // 文档文件\n  '*.md',\n  'docs/**',\n  \n  // 其他\n  '.git/**',\n  '.svn/**',\n  '.hg/**',\n  'coverage/**',\n  '*.log'\n] as const\n\n/**\n * 包含的文件模式\n */\nexport const INCLUDE_PATTERNS = {\n  typescript: [\n    'src/**/*.ts',\n    'src/**/*.tsx',\n    'lib/**/*.ts',\n    'lib/**/*.tsx'\n  ],\n  \n  javascript: [\n    'src/**/*.js',\n    'src/**/*.jsx',\n    'src/**/*.mjs',\n    'lib/**/*.js',\n    'lib/**/*.jsx'\n  ],\n  \n  vue: [\n    'src/**/*.vue',\n    'components/**/*.vue',\n    'lib/**/*.vue'\n  ],\n  \n  styles: [\n    'src/**/*.css',\n    'src/**/*.less',\n    'src/**/*.scss',\n    'src/**/*.sass',\n    'src/**/*.styl',\n    'styles/**/*'\n  ],\n  \n  assets: [\n    'src/assets/**/*',\n    'assets/**/*',\n    'public/**/*'\n  ]\n} as const\n\n/**\n * 文件大小限制\n */\nexport const FILE_SIZE_LIMITS = {\n  // 源代码文件\n  source: 1024 * 1024, // 1MB\n  \n  // 配置文件\n  config: 100 * 1024, // 100KB\n  \n  // 样式文件\n  style: 500 * 1024, // 500KB\n  \n  // 资源文件\n  asset: 10 * 1024 * 1024, // 10MB\n  \n  // 字体文件\n  font: 2 * 1024 * 1024, // 2MB\n  \n  // 图片文件\n  image: 5 * 1024 * 1024 // 5MB\n} as const\n\n/**\n * 文件编码检测\n */\nexport const ENCODING_DETECTION = {\n  // 文本文件\n  text: ['utf8', 'utf-8', 'ascii'],\n  \n  // 二进制文件\n  binary: ['binary', 'base64'],\n  \n  // 默认编码\n  default: 'utf8'\n} as const\n\n/**\n * 文件 MIME 类型\n */\nexport const MIME_TYPES = {\n  '.js': 'application/javascript',\n  '.mjs': 'application/javascript',\n  '.ts': 'application/typescript',\n  '.tsx': 'application/typescript',\n  '.jsx': 'application/javascript',\n  '.vue': 'text/x-vue',\n  '.css': 'text/css',\n  '.less': 'text/less',\n  '.scss': 'text/scss',\n  '.sass': 'text/sass',\n  '.json': 'application/json',\n  '.md': 'text/markdown',\n  '.html': 'text/html',\n  '.xml': 'application/xml',\n  '.svg': 'image/svg+xml',\n  '.png': 'image/png',\n  '.jpg': 'image/jpeg',\n  '.jpeg': 'image/jpeg',\n  '.gif': 'image/gif',\n  '.webp': 'image/webp',\n  '.woff': 'font/woff',\n  '.woff2': 'font/woff2',\n  '.ttf': 'font/ttf',\n  '.otf': 'font/otf'\n} as const\n","/**\n * 用户消息常量\n */\n\n/**\n * 成功消息\n */\nexport const SUCCESS_MESSAGES = {\n  BUILD_COMPLETE: '构建完成',\n  BUILD_SUCCESS: '构建成功',\n  CONFIG_LOADED: '配置加载成功',\n  CONFIG_VALIDATED: '配置验证通过',\n  PLUGIN_LOADED: '插件加载成功',\n  ADAPTER_INITIALIZED: '适配器初始化成功',\n  CACHE_HIT: '缓存命中',\n  WATCH_STARTED: '监听模式已启动',\n  LIBRARY_DETECTED: '库类型检测成功'\n} as const\n\n/**\n * 信息消息\n */\nexport const INFO_MESSAGES = {\n  BUILD_STARTING: '开始构建...',\n  CONFIG_LOADING: '正在加载配置...',\n  PLUGIN_LOADING: '正在加载插件...',\n  ADAPTER_SWITCHING: '正在切换适配器...',\n  CACHE_CLEARING: '正在清理缓存...',\n  WATCH_CHANGE_DETECTED: '检测到文件变化',\n  LIBRARY_DETECTING: '正在检测库类型...',\n  PERFORMANCE_ANALYZING: '正在分析性能...'\n} as const\n\n/**\n * 警告消息\n */\nexport const WARNING_MESSAGES = {\n  CONFIG_DEPRECATED: '配置项已废弃',\n  PLUGIN_DEPRECATED: '插件已废弃',\n  LARGE_BUNDLE_SIZE: '打包文件过大',\n  SLOW_BUILD_TIME: '构建时间过长',\n  MEMORY_USAGE_HIGH: '内存使用过高',\n  CACHE_MISS: '缓存未命中',\n  DEPENDENCY_OUTDATED: '依赖版本过旧',\n  EXPERIMENTAL_FEATURE: '使用了实验性功能'\n} as const\n\n/**\n * 用户消息\n */\nexport const USER_MESSAGES = {\n  BUILD_FAILED: '构建失败',\n  CONFIG_INVALID: '配置无效',\n  PLUGIN_ERROR: '插件错误',\n  ADAPTER_ERROR: '适配器错误',\n  FILE_NOT_FOUND: '文件未找到',\n  DEPENDENCY_MISSING: '依赖缺失',\n  NETWORK_ERROR: '网络错误',\n  PERMISSION_DENIED: '权限不足',\n  OUT_OF_MEMORY: '内存不足',\n  TIMEOUT: '操作超时'\n} as const\n\n/**\n * 进度消息\n */\nexport const PROGRESS_MESSAGES = {\n  INITIALIZING: '初始化中...',\n  LOADING_CONFIG: '加载配置中...',\n  DETECTING_LIBRARY: '检测库类型中...',\n  LOADING_PLUGINS: '加载插件中...',\n  RESOLVING_MODULES: '解析模块中...',\n  TRANSFORMING_CODE: '转换代码中...',\n  GENERATING_BUNDLE: '生成打包文件中...',\n  WRITING_FILES: '写入文件中...',\n  OPTIMIZING: '优化中...',\n  FINALIZING: '完成中...'\n} as const\n\n/**\n * 帮助消息\n */\nexport const HELP_MESSAGES = {\n  USAGE: '使用方法',\n  OPTIONS: '选项',\n  EXAMPLES: '示例',\n  COMMANDS: '命令',\n  CONFIG: '配置',\n  PLUGINS: '插件',\n  TROUBLESHOOTING: '故障排除',\n  FAQ: '常见问题'\n} as const\n\n/**\n * 提示消息\n */\nexport const TIP_MESSAGES = {\n  PERFORMANCE_OPTIMIZATION: '性能优化提示',\n  BUNDLE_SIZE_OPTIMIZATION: '包大小优化提示',\n  CACHE_USAGE: '缓存使用提示',\n  PLUGIN_RECOMMENDATION: '插件推荐',\n  CONFIG_SUGGESTION: '配置建议',\n  BEST_PRACTICES: '最佳实践',\n  TROUBLESHOOTING_GUIDE: '故障排除指南'\n} as const\n\n/**\n * 状态消息\n */\nexport const STATUS_MESSAGES = {\n  IDLE: '空闲',\n  INITIALIZING: '初始化中',\n  BUILDING: '构建中',\n  WATCHING: '监听中',\n  ERROR: '错误',\n  COMPLETE: '完成',\n  CANCELLED: '已取消',\n  PAUSED: '已暂停'\n} as const\n\n/**\n * 确认消息\n */\nexport const CONFIRMATION_MESSAGES = {\n  OVERWRITE_FILE: '文件已存在，是否覆盖？',\n  DELETE_CACHE: '是否清理缓存？',\n  SWITCH_BUNDLER: '是否切换打包器？',\n  INSTALL_DEPENDENCY: '是否安装依赖？',\n  UPDATE_CONFIG: '是否更新配置？',\n  CONTINUE_BUILD: '是否继续构建？',\n  ABORT_BUILD: '是否中止构建？'\n} as const\n\n/**\n * 格式化消息模板\n */\nexport const MESSAGE_TEMPLATES = {\n  BUILD_TIME: '构建时间: {time}ms',\n  BUNDLE_SIZE: '打包大小: {size}',\n  MEMORY_USAGE: '内存使用: {memory}MB',\n  CACHE_HIT_RATE: '缓存命中率: {rate}%',\n  FILE_COUNT: '文件数量: {count}',\n  PLUGIN_COUNT: '插件数量: {count}',\n  ERROR_COUNT: '错误数量: {count}',\n  WARNING_COUNT: '警告数量: {count}',\n  PROGRESS: '进度: {current}/{total} ({percent}%)',\n  VERSION: '版本: {version}'\n} as const\n\n/**\n * 日志级别消息\n */\nexport const LOG_LEVEL_MESSAGES = {\n  silent: '静默模式',\n  error: '仅显示错误',\n  warn: '显示警告和错误',\n  info: '显示信息、警告和错误',\n  debug: '显示调试信息',\n  verbose: '显示详细信息'\n} as const\n\n/**\n * 命令行消息\n */\nexport const CLI_MESSAGES = {\n  WELCOME: '欢迎使用 @ldesign/builder',\n  VERSION: '版本信息',\n  HELP: '帮助信息',\n  INVALID_COMMAND: '无效命令',\n  MISSING_ARGUMENT: '缺少参数',\n  UNKNOWN_OPTION: '未知选项',\n  COMMAND_SUCCESS: '命令执行成功',\n  COMMAND_FAILED: '命令执行失败'\n} as const\n\n/**\n * 配置消息\n */\nexport const CONFIG_MESSAGES = {\n  LOADING: '正在加载配置文件...',\n  LOADED: '配置文件加载成功',\n  NOT_FOUND: '未找到配置文件，使用默认配置',\n  INVALID: '配置文件格式错误',\n  VALIDATING: '正在验证配置...',\n  VALIDATED: '配置验证通过',\n  MERGING: '正在合并配置...',\n  MERGED: '配置合并完成',\n  WATCHING: '正在监听配置文件变化...',\n  CHANGED: '配置文件已更改，重新加载中...'\n} as const\n\n/**\n * 插件消息\n */\nexport const PLUGIN_MESSAGES = {\n  LOADING: '正在加载插件: {name}',\n  LOADED: '插件加载成功: {name}',\n  FAILED: '插件加载失败: {name}',\n  INITIALIZING: '正在初始化插件: {name}',\n  INITIALIZED: '插件初始化成功: {name}',\n  EXECUTING: '正在执行插件: {name}',\n  EXECUTED: '插件执行完成: {name}',\n  ERROR: '插件执行错误: {name}',\n  DISABLED: '插件已禁用: {name}',\n  DEPRECATED: '插件已废弃: {name}'\n} as const\n\n/**\n * 适配器消息\n */\nexport const ADAPTER_MESSAGES = {\n  DETECTING: '正在检测可用的适配器...',\n  DETECTED: '检测到适配器: {name}',\n  INITIALIZING: '正在初始化适配器: {name}',\n  INITIALIZED: '适配器初始化成功: {name}',\n  SWITCHING: '正在切换到适配器: {name}',\n  SWITCHED: '适配器切换成功: {name}',\n  NOT_AVAILABLE: '适配器不可用: {name}',\n  VERSION_MISMATCH: '适配器版本不匹配: {name}',\n  CONFIG_ERROR: '适配器配置错误: {name}'\n} as const\n\n/**\n * 性能消息\n */\nexport const PERFORMANCE_MESSAGES = {\n  ANALYZING: '正在分析性能...',\n  ANALYZED: '性能分析完成',\n  SLOW_BUILD: '构建速度较慢，建议优化',\n  LARGE_BUNDLE: '打包文件较大，建议优化',\n  HIGH_MEMORY: '内存使用较高，建议优化',\n  CACHE_EFFECTIVE: '缓存效果良好',\n  CACHE_INEFFECTIVE: '缓存效果不佳，建议检查配置',\n  OPTIMIZATION_SUGGESTION: '性能优化建议: {suggestion}'\n} as const\n","/**\n * 路径处理工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport path from 'path'\nimport { fileURLToPath } from 'url'\n\n/**\n * 路径工具类\n */\nexport class PathUtils {\n  /**\n   * 规范化路径（统一使用正斜杠）\n   */\n  static normalize(filePath: string): string {\n    return path.posix.normalize(filePath.replace(/\\\\/g, '/'))\n  }\n\n  /**\n   * 解析绝对路径\n   */\n  static resolve(...paths: string[]): string {\n    return path.resolve(...paths)\n  }\n\n  /**\n   * 获取相对路径\n   */\n  static relative(from: string, to: string): string {\n    return this.normalize(path.relative(from, to))\n  }\n\n  /**\n   * 连接路径\n   */\n  static join(...paths: string[]): string {\n    return this.normalize(path.join(...paths))\n  }\n\n  /**\n   * 获取目录名\n   */\n  static dirname(filePath: string): string {\n    return this.normalize(path.dirname(filePath))\n  }\n\n  /**\n   * 获取文件名（包含扩展名）\n   */\n  static basename(filePath: string, ext?: string): string {\n    return path.basename(filePath, ext)\n  }\n\n  /**\n   * 获取文件扩展名\n   */\n  static extname(filePath: string): string {\n    return path.extname(filePath)\n  }\n\n  /**\n   * 获取文件名（不包含扩展名）\n   */\n  static filename(filePath: string): string {\n    return this.basename(filePath, this.extname(filePath))\n  }\n\n  /**\n   * 判断路径是否为绝对路径\n   */\n  static isAbsolute(filePath: string): boolean {\n    return path.isAbsolute(filePath)\n  }\n\n  /**\n   * 转换为绝对路径\n   */\n  static toAbsolute(filePath: string, basePath?: string): string {\n    if (this.isAbsolute(filePath)) {\n      return this.normalize(filePath)\n    }\n    return this.resolve(basePath || process.cwd(), filePath)\n  }\n\n  /**\n   * 转换为相对路径\n   */\n  static toRelative(filePath: string, basePath?: string): string {\n    const base = basePath || process.cwd()\n    if (this.isAbsolute(filePath)) {\n      return this.relative(base, filePath)\n    }\n    return this.normalize(filePath)\n  }\n\n  /**\n   * 替换文件扩展名\n   */\n  static replaceExt(filePath: string, newExt: string): string {\n    const dir = this.dirname(filePath)\n    const name = this.filename(filePath)\n    const ext = newExt.startsWith('.') ? newExt : `.${newExt}`\n    return this.join(dir, `${name}${ext}`)\n  }\n\n  /**\n   * 添加后缀到文件名\n   */\n  static addSuffix(filePath: string, suffix: string): string {\n    const dir = this.dirname(filePath)\n    const name = this.filename(filePath)\n    const ext = this.extname(filePath)\n    return this.join(dir, `${name}${suffix}${ext}`)\n  }\n\n  /**\n   * 获取路径的各个部分\n   */\n  static parse(filePath: string): {\n    root: string\n    dir: string\n    base: string\n    ext: string\n    name: string\n  } {\n    const parsed = path.parse(filePath)\n    return {\n      root: parsed.root,\n      dir: this.normalize(parsed.dir),\n      base: parsed.base,\n      ext: parsed.ext,\n      name: parsed.name\n    }\n  }\n\n  /**\n   * 从路径部分构建路径\n   */\n  static format(pathObject: {\n    root?: string\n    dir?: string\n    base?: string\n    ext?: string\n    name?: string\n  }): string {\n    return this.normalize(path.format(pathObject))\n  }\n\n  /**\n   * 检查路径是否在指定目录内\n   */\n  static isInside(filePath: string, dirPath: string): boolean {\n    const relativePath = this.relative(dirPath, filePath)\n    return !relativePath.startsWith('../') && !this.isAbsolute(relativePath)\n  }\n\n  /**\n   * 获取两个路径的公共父目录\n   */\n  static getCommonParent(path1: string, path2: string): string {\n    const abs1 = this.toAbsolute(path1)\n    const abs2 = this.toAbsolute(path2)\n    \n    const parts1 = abs1.split(path.sep)\n    const parts2 = abs2.split(path.sep)\n    \n    const commonParts: string[] = []\n    const minLength = Math.min(parts1.length, parts2.length)\n    \n    for (let i = 0; i < minLength; i++) {\n      if (parts1[i] === parts2[i]) {\n        commonParts.push(parts1[i])\n      } else {\n        break\n      }\n    }\n    \n    return commonParts.join(path.sep) || path.sep\n  }\n\n  /**\n   * 获取路径深度\n   */\n  static getDepth(filePath: string): number {\n    const normalized = this.normalize(filePath)\n    if (normalized === '/' || normalized === '.') {\n      return 0\n    }\n    return normalized.split('/').filter(part => part && part !== '.').length\n  }\n\n  /**\n   * 匹配路径模式\n   */\n  static matchPattern(filePath: string, pattern: string): boolean {\n    // 简单的 glob 模式匹配\n    const regexPattern = pattern\n      .replace(/\\./g, '\\\\.')\n      .replace(/\\*/g, '.*')\n      .replace(/\\?/g, '.')\n    \n    const regex = new RegExp(`^${regexPattern}$`)\n    return regex.test(this.normalize(filePath))\n  }\n\n  /**\n   * 获取文件的 URL 路径\n   */\n  static toFileURL(filePath: string): string {\n    const absolutePath = this.toAbsolute(filePath)\n    return `file://${absolutePath.replace(/\\\\/g, '/')}`\n  }\n\n  /**\n   * 从文件 URL 获取路径\n   */\n  static fromFileURL(fileURL: string): string {\n    return this.normalize(fileURLToPath(fileURL))\n  }\n\n  /**\n   * 获取项目根目录\n   */\n  static findProjectRoot(startPath?: string): string {\n    let currentPath = startPath || process.cwd()\n    \n    while (currentPath !== path.dirname(currentPath)) {\n      // 检查是否存在 package.json\n      const packageJsonPath = this.join(currentPath, 'package.json')\n      if (require('fs').existsSync(packageJsonPath)) {\n        return currentPath\n      }\n      \n      // 检查是否存在 .git 目录\n      const gitPath = this.join(currentPath, '.git')\n      if (require('fs').existsSync(gitPath)) {\n        return currentPath\n      }\n      \n      currentPath = path.dirname(currentPath)\n    }\n    \n    // 如果没找到，返回起始路径\n    return startPath || process.cwd()\n  }\n\n  /**\n   * 获取相对于项目根目录的路径\n   */\n  static getProjectRelativePath(filePath: string, projectRoot?: string): string {\n    const root = projectRoot || this.findProjectRoot()\n    return this.relative(root, filePath)\n  }\n\n  /**\n   * 清理路径（移除多余的分隔符和相对路径符号）\n   */\n  static clean(filePath: string): string {\n    return this.normalize(filePath)\n      .replace(/\\/+/g, '/') // 移除多余的斜杠\n      .replace(/\\/\\.\\//g, '/') // 移除 ./\n      .replace(/\\/\\.$/, '') // 移除结尾的 /.\n      .replace(/^\\.\\//g, '') // 移除开头的 ./\n  }\n\n  /**\n   * 确保路径以指定字符结尾\n   */\n  static ensureTrailingSlash(dirPath: string): string {\n    const normalized = this.normalize(dirPath)\n    return normalized.endsWith('/') ? normalized : `${normalized}/`\n  }\n\n  /**\n   * 确保路径不以指定字符结尾\n   */\n  static removeTrailingSlash(dirPath: string): string {\n    const normalized = this.normalize(dirPath)\n    return normalized.endsWith('/') ? normalized.slice(0, -1) : normalized\n  }\n\n  /**\n   * 获取路径的所有父目录\n   */\n  static getParents(filePath: string): string[] {\n    const parents: string[] = []\n    let currentPath = this.dirname(filePath)\n    \n    while (currentPath !== this.dirname(currentPath)) {\n      parents.push(currentPath)\n      currentPath = this.dirname(currentPath)\n    }\n    \n    return parents\n  }\n\n  /**\n   * 检查路径是否为隐藏文件或目录\n   */\n  static isHidden(filePath: string): boolean {\n    const basename = this.basename(filePath)\n    return basename.startsWith('.')\n  }\n\n  /**\n   * 获取平台特定的路径分隔符\n   */\n  static get sep(): string {\n    return path.sep\n  }\n\n  /**\n   * 获取平台特定的路径定界符\n   */\n  static get delimiter(): string {\n    return path.delimiter\n  }\n}\n\n// 导出便捷函数\nexport const {\n  normalize,\n  resolve,\n  relative,\n  join,\n  dirname,\n  basename,\n  extname,\n  filename,\n  isAbsolute,\n  toAbsolute,\n  toRelative,\n  replaceExt,\n  addSuffix,\n  parse,\n  format,\n  isInside,\n  getCommonParent,\n  getDepth,\n  matchPattern,\n  toFileURL,\n  fromFileURL,\n  findProjectRoot,\n  getProjectRelativePath,\n  clean,\n  ensureTrailingSlash,\n  removeTrailingSlash,\n  getParents,\n  isHidden\n} = PathUtils\n","/**\n * 格式化工具函数\n */\n\n/**\n * 格式化文件大小\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B'\n\n  const units = ['B', 'KB', 'MB', 'GB', 'TB']\n  const k = 1024\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return `${(bytes / Math.pow(k, i)).toFixed(1)} ${units[i]}`\n}\n\n/**\n * 格式化持续时间\n */\nexport function formatDuration(ms: number): string {\n  if (ms < 1000) {\n    return `${ms}ms`\n  }\n\n  const seconds = ms / 1000\n  if (seconds < 60) {\n    return `${seconds.toFixed(1)}s`\n  }\n\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = seconds % 60\n  return `${minutes}m ${remainingSeconds.toFixed(1)}s`\n}\n\n/**\n * 格式化百分比\n */\nexport function formatPercentage(value: number, total: number): string {\n  if (total === 0) return '0%'\n  return `${((value / total) * 100).toFixed(1)}%`\n}\n\n/**\n * 格式化数字\n */\nexport function formatNumber(num: number): string {\n  return num.toLocaleString()\n}\n\n/**\n * 格式化内存使用\n */\nexport function formatMemory(bytes: number): string {\n  return formatFileSize(bytes)\n}\n\n/**\n * 格式化时间戳\n */\nexport function formatTimestamp(timestamp: number): string {\n  return new Date(timestamp).toLocaleString()\n}\n\n/**\n * 格式化相对时间\n */\nexport function formatRelativeTime(timestamp: number): string {\n  const now = Date.now()\n  const diff = now - timestamp\n\n  if (diff < 1000) {\n    return '刚刚'\n  }\n\n  if (diff < 60000) {\n    return `${Math.floor(diff / 1000)}秒前`\n  }\n\n  if (diff < 3600000) {\n    return `${Math.floor(diff / 60000)}分钟前`\n  }\n\n  if (diff < 86400000) {\n    return `${Math.floor(diff / 3600000)}小时前`\n  }\n\n  return `${Math.floor(diff / 86400000)}天前`\n}\n\n/**\n * 格式化路径（缩短显示）\n */\nexport function formatPath(filePath: string, maxLength: number = 50): string {\n  if (filePath.length <= maxLength) {\n    return filePath\n  }\n\n  const parts = filePath.split('/')\n  if (parts.length <= 2) {\n    return filePath\n  }\n\n  // 保留开头和结尾，中间用 ... 替代\n  const start = parts[0]\n  const end = parts[parts.length - 1]\n  return `${start}/.../${end}`\n}\n\n/**\n * 格式化版本号\n */\nexport function formatVersion(version: string): string {\n  // 移除前缀 v\n  return version.replace(/^v/, '')\n}\n\n/**\n * 格式化构建状态\n */\nexport function formatBuildStatus(status: string): string {\n  const statusMap: Record<string, string> = {\n    idle: '空闲',\n    initializing: '初始化中',\n    building: '构建中',\n    watching: '监听中',\n    error: '错误',\n    complete: '完成',\n    cancelled: '已取消'\n  }\n\n  return statusMap[status] || status\n}\n\n// formatError 已在 error-handler.ts 中定义，这里导入\nexport { formatError } from './error-handler'\n\n/**\n * 格式化配置对象\n */\nexport function formatConfig(config: any, indent: number = 2): string {\n  try {\n    return JSON.stringify(config, null, indent)\n  } catch {\n    return String(config)\n  }\n}\n\n/**\n * 格式化列表\n */\nexport function formatList(items: string[], separator: string = ', '): string {\n  if (items.length === 0) return ''\n  if (items.length === 1) return items[0]\n  if (items.length === 2) return items.join(' 和 ')\n\n  const last = items[items.length - 1]\n  const rest = items.slice(0, -1)\n  return `${rest.join(separator)} 和 ${last}`\n}\n\n/**\n * 格式化表格数据\n */\nexport function formatTable(data: Array<Record<string, any>>, columns?: string[]): string {\n  if (data.length === 0) return ''\n\n  const keys = columns || Object.keys(data[0])\n  const rows = data.map(row => keys.map(key => String(row[key] || '')))\n\n  // 计算每列的最大宽度\n  const widths = keys.map((key, i) =>\n    Math.max(\n      key.length,\n      ...rows.map(row => row[i].length)\n    )\n  )\n\n  // 生成表格\n  const header = keys.map((key, i) => key.padEnd(widths[i])).join(' | ')\n  const separator = widths.map(width => '-'.repeat(width)).join('-|-')\n  const body = rows.map(row =>\n    row.map((cell, i) => cell.padEnd(widths[i])).join(' | ')\n  ).join('\\n')\n\n  return `${header}\\n${separator}\\n${body}`\n}\n\n/**\n * 格式化进度条\n */\nexport function formatProgressBar(\n  current: number,\n  total: number,\n  width: number = 20,\n  char: string = '█'\n): string {\n  const percentage = total > 0 ? current / total : 0\n  const filled = Math.round(percentage * width)\n  const empty = width - filled\n\n  return char.repeat(filled) + '░'.repeat(empty)\n}\n\n/**\n * 格式化键值对\n */\nexport function formatKeyValue(\n  obj: Record<string, any>,\n  separator: string = ': ',\n  indent: string = '  '\n): string {\n  return Object.entries(obj)\n    .map(([key, value]) => `${indent}${key}${separator}${value}`)\n    .join('\\n')\n}\n\n/**\n * 截断文本\n */\nexport function truncateText(text: string, maxLength: number, suffix: string = '...'): string {\n  if (text.length <= maxLength) {\n    return text\n  }\n\n  return text.slice(0, maxLength - suffix.length) + suffix\n}\n\n/**\n * 首字母大写\n */\nexport function capitalize(text: string): string {\n  return text.charAt(0).toUpperCase() + text.slice(1)\n}\n\n/**\n * 驼峰转短横线\n */\nexport function camelToKebab(text: string): string {\n  return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * 短横线转驼峰\n */\nexport function kebabToCamel(text: string): string {\n  return text.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())\n}\n","/**\n * @ldesign/builder - 工具函数统一导出\n * \n * 提供所有工具函数的统一导出\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\n// 配置相关工具\nexport * from './config'\n\n// 通用工具函数 (复用 launcher 的实现)\nexport * from './file-system'\nexport * from './path-utils'\nexport * from './logger'\nexport * from './error-handler'\n\n// 其他工具函数\nexport * from './format-utils'\n\n// 注意：detection.ts, performance.ts, validation.ts, cache.ts 暂时为空，不导出\n","/**\n * 工厂函数 - 便捷创建构建器实例\n */\n\nimport { LibraryBuilder } from '../core/LibraryBuilder'\nimport type { BuilderOptions } from '../types/builder'\nimport type { BuilderConfig } from '../types/config'\nimport { LibraryType } from '../types/library'\nimport { createLogger } from './logger'\n\n/**\n * 创建构建器实例的便捷函数\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  // 创建默认的日志记录器\n  const logger = options.logger || createLogger({\n    level: 'info',\n    colors: true,\n    prefix: '@ldesign/builder'\n  })\n\n  // 创建默认的错误处理器（暂时不使用）\n  // const errorHandler = createErrorHandler({\n  //   logger,\n  //   showSuggestions: true\n  // })\n\n  // 合并选项\n  const builderOptions: BuilderOptions = {\n    config,\n    logger,\n    autoDetect: true,\n    cache: true,\n    performance: true,\n    ...options\n  }\n\n  return new LibraryBuilder(builderOptions)\n}\n\n/**\n * 创建开发模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createDevBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const devConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    mode: 'development',\n    minify: false,\n    output: {\n      sourcemap: 'inline'\n    },\n    debug: true,\n    ...config\n  }\n\n  return createBuilder(devConfig, options)\n}\n\n/**\n * 创建生产模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createProdBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const prodConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    mode: 'production',\n    minify: true,\n    clean: true,\n    output: {\n      sourcemap: true\n    },\n    debug: false,\n    ...config\n  }\n\n  return createBuilder(prodConfig, options)\n}\n\n/**\n * 创建 TypeScript 库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createTypeScriptBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const tsConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    libraryType: LibraryType.TYPESCRIPT,\n    typescript: {\n      declaration: true,\n      isolatedDeclarations: true\n    },\n    output: {\n      format: ['esm', 'cjs']\n    },\n    ...config\n  }\n\n  return createBuilder(tsConfig, options)\n}\n\n/**\n * 创建 Vue3 组件库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createVue3Builder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const vueConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    libraryType: LibraryType.VUE3,\n    vue: {\n      version: 3,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    output: {\n      format: ['esm', 'cjs', 'umd']\n    },\n    ...config\n  }\n\n  return createBuilder(vueConfig, options)\n}\n\n/**\n * 创建样式库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createStyleBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const styleConfig: BuilderConfig = {\n    input: 'src/index.css',\n    libraryType: LibraryType.STYLE,\n    style: {\n      extract: true,\n      minimize: true,\n      autoprefixer: true\n    },\n    output: {\n      format: ['esm']\n    },\n    ...config\n  }\n\n  return createBuilder(styleConfig, options)\n}\n\n/**\n * 创建快速构建器（最小配置）\n * \n * @param input 入口文件\n * @param output 输出目录\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createQuickBuilder(\n  input: string,\n  output?: string,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const quickConfig: BuilderConfig = {\n    input,\n    output: output ? { dir: output } : undefined\n  }\n\n  return createBuilder(quickConfig, options)\n}\n\n/**\n * 创建监听模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createWatchBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const watchConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    watch: {\n      include: ['src/**/*'],\n      exclude: ['node_modules/**/*', 'dist/**/*']\n    },\n    ...config\n  }\n\n  return createBuilder(watchConfig, options)\n}\n\n/**\n * 从 package.json 创建构建器\n * \n * @param packageJsonPath package.json 文件路径\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport async function createBuilderFromPackage(\n  packageJsonPath: string = './package.json',\n  options: Omit<BuilderOptions, 'config'> = {}\n): Promise<LibraryBuilder> {\n  try {\n    const { readFile } = await import('./file-system')\n    const packageContent = await readFile(packageJsonPath, 'utf-8')\n    const packageJson = JSON.parse(packageContent)\n\n    // 从 package.json 推断配置\n    const config: BuilderConfig = {\n      input: packageJson.source || packageJson.main || 'src/index.ts',\n      output: {\n        dir: 'dist'\n      }\n    }\n\n    // 如果有 builder 字段，使用它\n    if (packageJson.builder) {\n      Object.assign(config, packageJson.builder)\n    }\n\n    return createBuilder(config, options)\n  } catch (error) {\n    throw new Error(`从 package.json 创建构建器失败: ${(error as Error).message}`)\n  }\n}\n\n/**\n * 批量创建构建器\n * \n * @param configs 配置数组\n * @param options 构建器选项\n * @returns 构建器实例数组\n */\nexport function createBuilders(\n  configs: BuilderConfig[],\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder[] {\n  return configs.map(config => createBuilder(config, options))\n}\n\n/**\n * 创建构建器池\n * \n * @param configs 配置数组\n * @param options 构建器选项\n * @returns 构建器池\n */\nexport function createBuilderPool(\n  configs: BuilderConfig[],\n  options: Omit<BuilderOptions, 'config'> = {}\n): {\n  builders: LibraryBuilder[]\n  buildAll: () => Promise<any[]>\n  disposeAll: () => Promise<void>\n} {\n  const builders = createBuilders(configs, options)\n\n  return {\n    builders,\n\n    async buildAll() {\n      return Promise.all(builders.map(builder => builder.build()))\n    },\n\n    async disposeAll() {\n      await Promise.all(builders.map(builder => builder.dispose()))\n    }\n  }\n}\n"],"x_google_ignoreList":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"mappings":"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"}