{"version":3,"file":"index.cjs","sources":["../src/types/builder.ts","../src/types/library.ts","../src/constants/defaults.ts","../src/utils/file-system.ts","../src/constants/errors.ts","../src/utils/error-handler.ts","../src/utils/config/config-loader.ts","../src/utils/logger.ts","../src/core/ConfigManager.ts","../src/strategies/typescript/TypeScriptStrategy.ts","../src/strategies/style/StyleStrategy.ts","../src/strategies/vue3/Vue3Strategy.ts","../src/strategies/react/ReactStrategy.ts","../src/strategies/mixed/MixedStrategy.ts","../src/core/StrategyManager.ts","../src/core/PluginManager.ts","../src/constants/library-types.ts","../src/core/LibraryDetector.ts","../src/core/PerformanceMonitor.ts","../src/core/TestRunner.ts","../src/core/ValidationReporter.ts","../src/core/TemporaryEnvironment.ts","../src/core/PostBuildValidator.ts","../src/adapters/rollup/RollupAdapter.ts","../src/adapters/rolldown/RolldownAdapter.ts","../src/adapters/base/AdapterFactory.ts","../src/core/LibraryBuilder.ts","../src/strategies/vue2/Vue2Strategy.ts","../src/types/adapter.ts","../src/types/plugin.ts","../src/types/bundler.ts","../src/constants/formats.ts","../src/constants/bundlers.ts","../src/constants/extensions.ts","../src/constants/messages.ts","../src/utils/path-utils.ts","../src/utils/format-utils.ts","../src/utils/factory.ts","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/constants.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/utils.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/scan.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/parse.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/picomatch.js","../../../node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/index.js","../../../node_modules/.pnpm/readdirp@3.6.0/node_modules/readdirp/index.js","../../../node_modules/.pnpm/normalize-path@3.0.0/node_modules/normalize-path/index.js","../../../node_modules/.pnpm/anymatch@3.1.3/node_modules/anymatch/index.js","../../../node_modules/.pnpm/is-extglob@2.1.1/node_modules/is-extglob/index.js","../../../node_modules/.pnpm/is-glob@4.0.3/node_modules/is-glob/index.js","../../../node_modules/.pnpm/glob-parent@5.1.2/node_modules/glob-parent/index.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/utils.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/stringify.js","../../../node_modules/.pnpm/is-number@7.0.0/node_modules/is-number/index.js","../../../node_modules/.pnpm/to-regex-range@5.0.1/node_modules/to-regex-range/index.js","../../../node_modules/.pnpm/fill-range@7.1.1/node_modules/fill-range/index.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/compile.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/expand.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/constants.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/parse.js","../../../node_modules/.pnpm/braces@3.0.3/node_modules/braces/index.js","../../../node_modules/.pnpm/binary-extensions@2.3.0/node_modules/binary-extensions/index.js","../../../node_modules/.pnpm/is-binary-path@2.1.0/node_modules/is-binary-path/index.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/constants.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/nodefs-handler.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/fsevents-handler.js","../../../node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/index.js"],"sourcesContent":["/**\n * 构建器相关类型定义\n */\n\nimport type { EventEmitter } from 'events'\nimport type { BuilderConfig } from './config'\nimport type { OutputFile, BuildStats } from './output'\nimport type { PerformanceMetrics } from './performance'\nimport type { ValidationResult } from './common'\nimport type { ValidationResult as PostBuildValidationResult } from '../types/validation'\n\n/**\n * 构建器状态枚举\n */\nexport enum BuilderStatus {\n  /** 空闲状态 */\n  IDLE = 'idle',\n  /** 初始化中 */\n  INITIALIZING = 'initializing',\n  /** 构建中 */\n  BUILDING = 'building',\n  /** 监听中 */\n  WATCHING = 'watching',\n  /** 错误状态 */\n  ERROR = 'error',\n  /** 已销毁 */\n  DISPOSED = 'disposed'\n}\n\n/**\n * 构建器事件枚举\n */\nexport enum BuilderEvent {\n  /** 构建开始 */\n  BUILD_START = 'build:start',\n  /** 构建进度 */\n  BUILD_PROGRESS = 'build:progress',\n  /** 构建结束 */\n  BUILD_END = 'build:end',\n  /** 构建错误 */\n  BUILD_ERROR = 'build:error',\n  /** 监听开始 */\n  WATCH_START = 'watch:start',\n  /** 监听变化 */\n  WATCH_CHANGE = 'watch:change',\n  /** 监听结束 */\n  WATCH_END = 'watch:end',\n  /** 配置变化 */\n  CONFIG_CHANGE = 'config:change',\n  /** 状态变化 */\n  STATUS_CHANGE = 'status:change'\n}\n\n/**\n * 构建器选项\n */\nexport interface BuilderOptions {\n  /** 工作目录 */\n  cwd?: string\n\n  /** 初始配置 */\n  config?: BuilderConfig\n\n  /** 事件监听器 */\n  listeners?: Partial<BuilderEventListeners>\n\n  /** 日志记录器 */\n  logger?: any\n\n  /** 是否自动检测库类型 */\n  autoDetect?: boolean\n\n  /** 是否启用缓存 */\n  cache?: boolean\n\n  /** 缓存目录 */\n  cacheDir?: string\n\n  /** 是否启用性能监控 */\n  performance?: boolean\n}\n\n/**\n * 构建器事件监听器\n */\nexport interface BuilderEventListeners {\n  [BuilderEvent.BUILD_START]: (data: BuildStartEventData) => void\n  [BuilderEvent.BUILD_PROGRESS]: (data: BuildProgressEventData) => void\n  [BuilderEvent.BUILD_END]: (data: BuildEndEventData) => void\n  [BuilderEvent.BUILD_ERROR]: (data: BuildErrorEventData) => void\n  [BuilderEvent.WATCH_START]: (data: WatchStartEventData) => void\n  [BuilderEvent.WATCH_CHANGE]: (data: WatchChangeEventData) => void\n  [BuilderEvent.WATCH_END]: (data: WatchEndEventData) => void\n  [BuilderEvent.CONFIG_CHANGE]: (data: ConfigChangeEventData) => void\n  [BuilderEvent.STATUS_CHANGE]: (data: StatusChangeEventData) => void\n}\n\n/**\n * 构建开始事件数据\n */\nexport interface BuildStartEventData {\n  /** 配置 */\n  config: BuilderConfig\n  /** 时间戳 */\n  timestamp: number\n  /** 构建 ID */\n  buildId: string\n}\n\n/**\n * 构建进度事件数据\n */\nexport interface BuildProgressEventData {\n  /** 进度百分比 */\n  progress: number\n  /** 当前阶段 */\n  phase: string\n  /** 当前文件 */\n  currentFile?: string\n  /** 已处理文件数 */\n  processedFiles: number\n  /** 总文件数 */\n  totalFiles: number\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 构建结束事件数据\n */\nexport interface BuildEndEventData {\n  /** 构建结果 */\n  result: BuildResult\n  /** 持续时间 */\n  duration: number\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 构建错误事件数据\n */\nexport interface BuildErrorEventData {\n  /** 错误信息 */\n  error: Error\n  /** 错误阶段 */\n  phase: string\n  /** 相关文件 */\n  file?: string\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 监听开始事件数据\n */\nexport interface WatchStartEventData {\n  /** 监听的文件模式 */\n  patterns: string[]\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 监听变化事件数据\n */\nexport interface WatchChangeEventData {\n  /** 变化类型 */\n  type: 'add' | 'change' | 'unlink'\n  /** 文件路径 */\n  path: string\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 监听结束事件数据\n */\nexport interface WatchEndEventData {\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 配置变化事件数据\n */\nexport interface ConfigChangeEventData {\n  /** 新配置 */\n  config: BuilderConfig\n  /** 旧配置 */\n  oldConfig: BuilderConfig\n  /** 配置文件路径 */\n  configFile?: string\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 状态变化事件数据\n */\nexport interface StatusChangeEventData {\n  /** 新状态 */\n  status: BuilderStatus\n  /** 旧状态 */\n  oldStatus: BuilderStatus\n  /** 时间戳 */\n  timestamp: number\n}\n\n/**\n * 构建结果\n */\nexport interface BuildResult {\n  /** 构建是否成功 */\n  success: boolean\n\n  /** 输出文件列表 */\n  outputs: OutputFile[]\n\n  /** 构建时间（毫秒） */\n  duration: number\n\n  /** 构建统计 */\n  stats: BuildStats\n\n  /** 性能指标 */\n  performance: PerformanceMetrics\n\n  /** 警告信息 */\n  warnings: Warning[]\n\n  /** 错误信息 */\n  errors: Error[]\n\n  /** 构建 ID */\n  buildId: string\n\n  /** 时间戳 */\n  timestamp: number\n\n  /** 构建器名称 */\n  bundler: string\n\n  /** 构建模式 */\n  mode: string\n\n  /** 库类型 */\n  libraryType?: string\n\n  /** 打包后验证结果 */\n  validation?: PostBuildValidationResult\n}\n\n/**\n * 警告信息\n */\nexport interface Warning {\n  /** 警告代码 */\n  code: string\n\n  /** 警告消息 */\n  message: string\n\n  /** 相关文件 */\n  file?: string\n\n  /** 行号 */\n  line?: number\n\n  /** 列号 */\n  column?: number\n\n  /** 建议 */\n  suggestion?: string\n}\n\n/**\n * 构建监听器\n */\nexport interface BuildWatcher extends EventEmitter {\n  /** 关闭监听器 */\n  close(): Promise<void>\n\n  /** 是否正在监听 */\n  readonly watching: boolean\n\n  /** 监听的文件模式 */\n  readonly patterns: string[]\n}\n\n/**\n * 库构建器接口\n */\nexport interface ILibraryBuilder extends EventEmitter {\n  // 构建管理\n  build(config?: BuilderConfig): Promise<BuildResult>\n  buildWatch(config?: BuilderConfig): Promise<BuildWatcher>\n\n  // 配置管理\n  mergeConfig(base: BuilderConfig, override: BuilderConfig): BuilderConfig\n  validateConfig(config: BuilderConfig): ValidationResult\n  loadConfig(configPath?: string): Promise<BuilderConfig>\n\n  // 核心切换\n  setBundler(bundler: 'rollup' | 'rolldown'): void\n  getBundler(): 'rollup' | 'rolldown'\n\n  // 库类型管理\n  setLibraryType(type: string): void\n  detectLibraryType(projectPath: string): Promise<string>\n\n  // 状态管理\n  getStatus(): BuilderStatus\n  isBuilding(): boolean\n  isWatching(): boolean\n\n  // 生命周期\n  initialize(): Promise<void>\n  dispose(): Promise<void>\n\n  // 统计信息\n  getStats(): BuildStats | null\n  getPerformanceMetrics(): PerformanceMetrics | null\n}\n\n/**\n * 构建上下文\n */\nexport interface BuildContext {\n  /** 构建 ID */\n  buildId: string\n\n  /** 开始时间 */\n  startTime: number\n\n  /** 配置 */\n  config: BuilderConfig\n\n  /** 工作目录 */\n  cwd: string\n\n  /** 缓存目录 */\n  cacheDir: string\n\n  /** 临时目录 */\n  tempDir: string\n\n  /** 是否为监听模式 */\n  watch: boolean\n\n  /** 环境变量 */\n  env: Record<string, string>\n\n  /** 日志记录器 */\n  logger: any\n\n  /** 性能监控器 */\n  performanceMonitor: any\n}\n\n/**\n * 构建钩子\n */\nexport interface BuildHooks {\n  /** 构建前钩子 */\n  beforeBuild?: (context: BuildContext) => Promise<void> | void\n\n  /** 构建后钩子 */\n  afterBuild?: (context: BuildContext, result: BuildResult) => Promise<void> | void\n\n  /** 错误钩子 */\n  onError?: (context: BuildContext, error: Error) => Promise<void> | void\n\n  /** 监听开始钩子 */\n  onWatchStart?: (context: BuildContext) => Promise<void> | void\n\n  /** 文件变化钩子 */\n  onFileChange?: (context: BuildContext, file: string, type: string) => Promise<void> | void\n\n  /** 监听结束钩子 */\n  onWatchEnd?: (context: BuildContext) => Promise<void> | void\n}\n\n/**\n * 构建器工厂选项\n */\nexport interface BuilderFactoryOptions {\n  /** 默认打包器 */\n  defaultBundler?: 'rollup' | 'rolldown'\n\n  /** 插件预设 */\n  pluginPresets?: Record<string, any[]>\n\n  /** 配置预设 */\n  configPresets?: Record<string, Partial<BuilderConfig>>\n\n  /** 是否启用自动检测 */\n  autoDetection?: boolean\n\n  /** 缓存配置 */\n  cache?: {\n    enabled: boolean\n    dir: string\n    ttl: number\n  }\n}\n\n/**\n * 构建器实例信息\n */\nexport interface BuilderInstanceInfo {\n  /** 实例 ID */\n  id: string\n\n  /** 创建时间 */\n  createdAt: number\n\n  /** 最后使用时间 */\n  lastUsedAt: number\n\n  /** 构建次数 */\n  buildCount: number\n\n  /** 当前状态 */\n  status: BuilderStatus\n\n  /** 配置摘要 */\n  configSummary: {\n    bundler: string\n    libraryType?: string\n    mode: string\n  }\n}\n","/**\n * 库类型相关定义\n */\n\n/**\n * 库类型枚举\n */\nexport enum LibraryType {\n  /** TypeScript 库 */\n  TYPESCRIPT = 'typescript',\n  /** 样式库 */\n  STYLE = 'style',\n  /** Vue2 组件库 */\n  VUE2 = 'vue2',\n  /** Vue3 组件库 */\n  VUE3 = 'vue3',\n  /** React 组件库 */\n  REACT = 'react',\n  /** 混合库 */\n  MIXED = 'mixed'\n}\n\n/**\n * 库检测结果\n */\nexport interface LibraryDetectionResult {\n  /** 检测到的库类型 */\n  type: LibraryType\n  /** 置信度 (0-1) */\n  confidence: number\n  /** 检测依据 */\n  evidence: DetectionEvidence[]\n  /** 建议的配置 */\n  suggestedConfig?: Partial<any>\n}\n\n/**\n * 检测依据\n */\nexport interface DetectionEvidence {\n  /** 依据类型 */\n  type: 'file' | 'dependency' | 'config' | 'content'\n  /** 依据描述 */\n  description: string\n  /** 权重 */\n  weight: number\n  /** 相关文件或配置 */\n  source?: string\n}\n\n/**\n * TypeScript 库配置\n */\nexport interface TypeScriptLibraryConfig {\n  /** tsconfig.json 路径 */\n  tsconfig?: string\n  /** 是否生成类型声明文件 */\n  declaration?: boolean\n  /** 类型声明文件输出目录 */\n  declarationDir?: string\n  /** 是否生成声明文件映射 */\n  declarationMap?: boolean\n  /** 是否启用 isolatedDeclarations */\n  isolatedDeclarations?: boolean\n  /** 是否跳过库检查 */\n  skipLibCheck?: boolean\n  /** 是否允许合成默认导入 */\n  allowSyntheticDefaultImports?: boolean\n  /** 是否启用严格模式 */\n  strict?: boolean\n  /** 目标 ES 版本 */\n  target?: string\n  /** 模块系统 */\n  module?: string\n  /** 模块解析策略 */\n  moduleResolution?: string\n  /** 基础 URL */\n  baseUrl?: string\n  /** 路径映射 */\n  paths?: Record<string, string[]>\n}\n\n/**\n * Vue 库配置\n */\nexport interface VueLibraryConfig {\n  /** Vue 版本 */\n  version?: 2 | 3\n  /** 是否支持按需加载 */\n  onDemand?: boolean\n  /** 编译器选项 */\n  compilerOptions?: {\n    /** 自定义元素判断函数 */\n    isCustomElement?: (tag: string) => boolean\n    /** 是否保留空白字符 */\n    whitespace?: 'preserve' | 'condense'\n    /** 是否启用注释 */\n    comments?: boolean\n    /** 自定义指令前缀 */\n    directiveTransforms?: Record<string, any>\n  }\n  /** JSX 配置 */\n  jsx?: {\n    /** JSX 工厂函数 */\n    factory?: string\n    /** JSX 片段 */\n    fragment?: string\n    /** 是否启用 JSX */\n    enabled?: boolean\n  }\n  /** 模板配置 */\n  template?: {\n    /** 是否预编译模板 */\n    precompile?: boolean\n    /** 模板编译器选项 */\n    compilerOptions?: Record<string, any>\n  }\n  /** 脚本配置 */\n  script?: {\n    /** 是否启用 defineModel */\n    defineModel?: boolean\n    /** 是否启用 props 解构 */\n    propsDestructure?: boolean\n    /** 其他脚本选项 */\n    [key: string]: any\n  }\n  /** 样式配置 */\n  style?: {\n    /** 是否修剪样式 */\n    trim?: boolean\n    /** 其他样式选项 */\n    [key: string]: any\n  }\n}\n\n/**\n * 样式库配置\n */\nexport interface StyleLibraryConfig {\n  /** 预处理器类型 */\n  preprocessor?: 'auto' | 'less' | 'scss' | 'sass' | 'stylus' | 'postcss' | {\n    /** Less 配置 */\n    less?: {\n      enabled?: boolean\n      options?: {\n        javascriptEnabled?: boolean\n        modifyVars?: Record<string, any>\n        [key: string]: any\n      }\n    }\n    /** Sass 配置 */\n    sass?: {\n      enabled?: boolean\n      options?: {\n        includePaths?: string[]\n        [key: string]: any\n      }\n    }\n  }\n  /** 是否提取 CSS */\n  extract?: boolean\n  /** 是否压缩 CSS */\n  minimize?: boolean\n  /** 是否启用 autoprefixer */\n  autoprefixer?: boolean\n  /** 浏览器兼容性列表 */\n  browserslist?: string[]\n  /** 是否启用 CSS 模块 */\n  modules?: boolean | {\n    /** 类名生成模式 */\n    generateScopedName?: string | ((name: string, filename: string, css: string) => string)\n    /** 全局模式 */\n    globalModulePaths?: string[]\n    /** 导出全局变量 */\n    exportGlobals?: boolean\n  }\n  /** PostCSS 插件 */\n  postcssPlugins?: any[]\n  /** 变量文件路径 */\n  variablesFile?: string\n  /** 主题配置 */\n  theme?: Record<string, any>\n}\n\n/**\n * 混合库配置\n */\nexport interface MixedLibraryConfig {\n  /** TypeScript 配置 */\n  typescript?: TypeScriptLibraryConfig\n  /** Vue 配置 */\n  vue?: VueLibraryConfig\n  /** 样式配置 */\n  style?: StyleLibraryConfig\n  /** 主要库类型 */\n  primaryType?: LibraryType\n  /** 次要库类型 */\n  secondaryTypes?: LibraryType[]\n}\n\n/**\n * 库元数据\n */\nexport interface LibraryMetadata {\n  /** 库名称 */\n  name: string\n  /** 库版本 */\n  version: string\n  /** 库描述 */\n  description?: string\n  /** 库类型 */\n  type: LibraryType\n  /** 入口文件 */\n  entry: string | string[]\n  /** 输出目录 */\n  outputDir: string\n  /** 依赖列表 */\n  dependencies: string[]\n  /** 开发依赖列表 */\n  devDependencies: string[]\n  /** 对等依赖列表 */\n  peerDependencies: string[]\n  /** 支持的环境 */\n  environments: ('browser' | 'node' | 'worker')[]\n  /** 支持的模块格式 */\n  formats: ('esm' | 'cjs' | 'umd' | 'iife')[]\n  /** 是否支持 Tree Shaking */\n  treeshakable: boolean\n  /** 是否支持按需加载 */\n  sideEffects: boolean | string[]\n}\n\n/**\n * 库分析结果\n */\nexport interface LibraryAnalysisResult {\n  /** 库元数据 */\n  metadata: LibraryMetadata\n  /** 检测结果 */\n  detection: LibraryDetectionResult\n  /** 文件统计 */\n  fileStats: {\n    total: number\n    byType: Record<string, number>\n    bySize: Record<string, number>\n  }\n  /** 依赖分析 */\n  dependencyAnalysis: {\n    total: number\n    external: string[]\n    internal: string[]\n    circular: string[][]\n  }\n  /** 建议的优化 */\n  optimizations: OptimizationSuggestion[]\n}\n\n/**\n * 优化建议\n */\nexport interface OptimizationSuggestion {\n  /** 建议类型 */\n  type: 'performance' | 'size' | 'compatibility' | 'maintainability'\n  /** 建议标题 */\n  title: string\n  /** 建议描述 */\n  description: string\n  /** 影响程度 */\n  impact: 'low' | 'medium' | 'high'\n  /** 实施难度 */\n  difficulty: 'easy' | 'medium' | 'hard'\n  /** 相关配置 */\n  config?: Record<string, any>\n}\n\n/**\n * 库构建选项\n */\nexport interface LibraryBuildOptions {\n  /** 是否启用 bundleless 模式 */\n  bundleless?: boolean\n  /** 是否保留模块结构 */\n  preserveModules?: boolean\n  /** 是否生成类型声明 */\n  generateTypes?: boolean\n  /** 是否压缩代码 */\n  minify?: boolean\n  /** 是否生成 sourcemap */\n  sourcemap?: boolean\n  /** 外部依赖处理 */\n  external?: string[] | ((id: string) => boolean)\n  /** 全局变量映射 */\n  globals?: Record<string, string>\n  /** 输出格式 */\n  formats?: ('esm' | 'cjs' | 'umd' | 'iife')[]\n  /** 代码分割配置 */\n  splitting?: boolean | {\n    /** 手动分块 */\n    manualChunks?: Record<string, string[]>\n    /** 分块策略 */\n    strategy?: 'default' | 'vendor' | 'component'\n  }\n}\n\n/**\n * 库发布配置\n */\nexport interface LibraryPublishConfig {\n  /** 发布注册表 */\n  registry?: string\n  /** 访问级别 */\n  access?: 'public' | 'restricted'\n  /** 标签 */\n  tag?: string\n  /** 是否干运行 */\n  dryRun?: boolean\n  /** 发布前钩子 */\n  beforePublish?: () => Promise<void> | void\n  /** 发布后钩子 */\n  afterPublish?: () => Promise<void> | void\n}\n","/**\n * 默认配置常量\n */\n\nimport type { BuilderConfig } from '../types/config'\nimport type { LibraryBuildOptions } from '../types/library'\nimport type { PostBuildValidationConfig } from '../types/validation'\nimport { LibraryType } from '../types/library'\n\n/**\n * 默认构建器配置\n */\nexport const DEFAULT_BUILDER_CONFIG: Required<Omit<BuilderConfig, 'env' | 'library'>> & {\n  env: Record<string, Partial<BuilderConfig>>\n  library: Required<LibraryBuildOptions>\n} = {\n  // 基础配置\n  input: 'src/index.ts',\n  output: {\n    dir: 'dist',\n    format: ['esm', 'cjs'],\n    fileName: '[name].[format].js',\n    sourcemap: true,\n    chunkFileNames: '[name]-[hash].js',\n    assetFileNames: '[name]-[hash][extname]'\n  },\n\n  // 打包器配置\n  bundler: 'rollup',\n\n  // 模式配置\n  mode: 'production',\n\n  // 库类型（自动检测）\n  libraryType: LibraryType.TYPESCRIPT,\n\n  // 输出选项\n  bundleless: false,\n  minify: false, // 默认不压缩\n  clean: true,\n\n  // UMD 构建配置\n  umd: {\n    enabled: true,\n    entry: 'src/index.ts',\n    name: 'MyLibrary', // 默认名称，会自动从 package.json 推断\n    forceMultiEntry: false,\n    fileName: 'index.umd.js',\n    globals: {},\n    minify: false // 默认不压缩\n  },\n\n  // Babel 转换配置\n  babel: {\n    enabled: false, // 默认不启用\n    presets: [],\n    plugins: [],\n    targets: 'defaults',\n    polyfill: false,\n    runtime: false,\n    configFile: false,\n    babelrc: true,\n    exclude: /node_modules/,\n    include: []\n  },\n\n  // Banner 和 Footer 配置\n  banner: {\n    banner: '',\n    footer: '',\n    intro: '',\n    outro: '',\n    copyright: false,\n    buildInfo: false\n  },\n\n  // 外部依赖\n  external: [],\n  globals: {},\n\n  // 插件配置\n  plugins: [],\n\n  // TypeScript 配置\n  typescript: {\n    tsconfig: './tsconfig.json',\n    declaration: true,\n    declarationDir: undefined, // 默认与 output.dir 相同\n    isolatedDeclarations: false,\n    skipLibCheck: true,\n    allowSyntheticDefaultImports: true,\n    strict: true,\n    target: 'ES2020',\n    module: 'ESNext',\n    moduleResolution: 'node'\n  },\n\n  // Vue 配置\n  vue: {\n    version: 3,\n    onDemand: false,\n    compilerOptions: {},\n    jsx: {\n      enabled: false,\n      factory: 'h',\n      fragment: 'Fragment'\n    },\n    template: {\n      precompile: true\n    }\n  },\n\n  // 样式配置\n  style: {\n    preprocessor: 'auto', // 自动检测\n    extract: true,\n    minimize: true,\n    autoprefixer: true,\n    modules: false,\n    postcssPlugins: []\n  },\n\n  // 性能配置\n  performance: {\n    bundleAnalyzer: false,\n    sizeLimit: undefined,\n    treeshaking: true,\n    cache: true,\n    parallel: true,\n    monitoring: false\n  },\n\n  // 调试配置\n  debug: false,\n\n  // 打包后验证配置\n  postBuildValidation: {\n    enabled: false,\n    testFramework: 'auto',\n    testPattern: ['**/*.test.{js,ts}', '**/*.spec.{js,ts}'],\n    timeout: 60000,\n    failOnError: true,\n    environment: {\n      tempDir: '.validation-temp',\n      keepTempFiles: false,\n      env: {},\n      packageManager: 'auto',\n      installDependencies: true,\n      installTimeout: 300000\n    },\n    reporting: {\n      format: 'console',\n      outputPath: 'validation-report',\n      verbose: false,\n      logLevel: 'info',\n      includePerformance: true,\n      includeCoverage: false\n    },\n    hooks: {},\n    scope: {\n      formats: ['esm', 'cjs'],\n      fileTypes: ['js', 'ts', 'dts'],\n      exclude: ['**/*.d.ts', '**/node_modules/**'],\n      include: ['**/*'],\n      validateTypes: true,\n      validateStyles: false,\n      validateSourceMaps: false\n    }\n  } as PostBuildValidationConfig,\n\n  // 环境配置\n  env: {\n    development: {\n      mode: 'development',\n      minify: false,\n      output: {\n        sourcemap: 'inline'\n      },\n      debug: true\n    },\n    production: {\n      mode: 'production',\n      minify: true,\n      output: {\n        sourcemap: true\n      },\n      debug: false\n    }\n  },\n\n  // 缓存配置\n  cache: {\n    enabled: true,\n    dir: 'node_modules/.cache/@ldesign/builder',\n    maxAge: 86400000, // 24 hours\n    maxSize: 500 * 1024 * 1024 // 500MB\n  },\n\n  // 监听配置\n  watch: {\n    include: ['src/**/*'],\n    exclude: ['node_modules/**/*', 'dist/**/*'],\n    persistent: true,\n    ignoreInitial: true\n  },\n\n  // 环境变量\n  define: {},\n\n  // 工作目录\n  cwd: process.cwd(),\n\n  // 配置文件路径\n  configFile: 'ldesign.config.ts',\n\n  // 日志级别\n  logLevel: 'info',\n\n  // 库构建选项\n  library: {\n    bundleless: false,\n    preserveModules: false,\n    generateTypes: true,\n    minify: true,\n    sourcemap: true,\n    external: [],\n    globals: {},\n    formats: ['esm', 'cjs'],\n    splitting: false\n  }\n}\n\n/**\n * 预设配置\n */\nexport const PRESET_CONFIGS = {\n  // TypeScript 库预设\n  typescript: {\n    libraryType: LibraryType.TYPESCRIPT,\n    typescript: {\n      declaration: true,\n      isolatedDeclarations: true\n    },\n    output: {\n      format: ['esm', 'cjs']\n    },\n    library: {\n      generateTypes: true,\n      formats: ['esm', 'cjs']\n    }\n  },\n\n  // Vue3 组件库预设\n  vue3: {\n    libraryType: LibraryType.VUE3,\n    vue: {\n      version: 3,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    library: {\n      formats: ['esm', 'cjs', 'umd']\n    }\n  },\n\n  // Vue2 组件库预设\n  vue2: {\n    libraryType: LibraryType.VUE2,\n    vue: {\n      version: 2,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    library: {\n      formats: ['esm', 'cjs', 'umd']\n    }\n  },\n\n  // 样式库预设\n  style: {\n    libraryType: LibraryType.STYLE,\n    style: {\n      extract: true,\n      minimize: true\n    },\n    output: {\n      format: ['esm']\n    },\n    library: {\n      formats: ['esm']\n    }\n  },\n\n  // 混合库预设\n  mixed: {\n    libraryType: LibraryType.MIXED,\n    typescript: {\n      declaration: true\n    },\n    style: {\n      extract: true\n    },\n    output: {\n      format: ['esm', 'cjs']\n    },\n    library: {\n      formats: ['esm', 'cjs']\n    }\n  }\n} as const\n\n/**\n * 支持的配置文件名称\n */\nexport const CONFIG_FILE_NAMES = [\n  'ldesign.config.ts',\n  'ldesign.config.js',\n  'ldesign.config.mjs',\n  'ldesign.config.json',\n  'builder.config.ts',\n  'builder.config.js',\n  'builder.config.mjs',\n  'builder.config.json',\n  '.builderrc.ts',\n  '.builderrc.js',\n  '.builderrc.json'\n] as const\n\n/**\n * 默认外部依赖\n */\nexport const DEFAULT_EXTERNAL_DEPS = [\n  // Node.js 内置模块\n  'fs', 'path', 'url', 'util', 'events', 'stream', 'crypto', 'os', 'http', 'https',\n\n  // 常见的前端框架（通常作为外部依赖）\n  'react', 'react-dom', 'vue', '@vue/runtime-core', '@vue/runtime-dom',\n  'angular', '@angular/core', '@angular/common',\n\n  // 常见的工具库\n  'lodash', 'moment', 'dayjs', 'axios'\n] as const\n\n/**\n * 默认全局变量映射\n */\nexport const DEFAULT_GLOBALS = {\n  'react': 'React',\n  'react-dom': 'ReactDOM',\n  'vue': 'Vue',\n  'lodash': '_',\n  'moment': 'moment',\n  'dayjs': 'dayjs',\n  'axios': 'axios'\n} as const\n\n/**\n * 默认文件名模式\n */\nexport const DEFAULT_FILE_PATTERNS = {\n  entry: '[name].[format].js',\n  chunk: '[name]-[hash].js',\n  asset: '[name]-[hash][extname]',\n  types: '[name].d.ts'\n} as const\n\n/**\n * 默认缓存配置\n */\nexport const DEFAULT_CACHE_CONFIG = {\n  enabled: true,\n  dir: 'node_modules/.cache/@ldesign/builder',\n  ttl: 24 * 60 * 60 * 1000, // 24 hours\n  maxSize: 500 * 1024 * 1024, // 500MB\n  compress: true,\n  version: '1.0.0'\n} as const\n\n/**\n * 默认性能配置\n */\nexport const DEFAULT_PERFORMANCE_CONFIG = {\n  bundleAnalyzer: false,\n  sizeLimit: undefined,\n  treeshaking: true,\n  cache: true,\n  parallel: true,\n  memoryLimit: '2GB',\n  timeout: 300000, // 5 minutes\n  monitoring: false\n} as const\n\n/**\n * 默认监听配置\n */\nexport const DEFAULT_WATCH_CONFIG = {\n  include: ['src/**/*'],\n  exclude: ['node_modules/**/*', 'dist/**/*', '**/*.test.*', '**/*.spec.*'],\n  persistent: true,\n  ignoreInitial: true,\n  followSymlinks: true,\n  usePolling: false,\n  interval: 100,\n  binaryInterval: 300,\n  alwaysStat: false,\n  depth: 99,\n  awaitWriteFinish: {\n    stabilityThreshold: 2000,\n    pollInterval: 100\n  }\n} as const\n","/**\n * 文件系统操作工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport { promises as fs } from 'fs'\nimport path from 'path'\nimport fastGlob from 'fast-glob'\nimport type { FileInfo } from '../types/common'\n\n/**\n * 文件系统工具类\n */\nexport class FileSystem {\n  /**\n   * 检查文件或目录是否存在\n   */\n  static async exists(filePath: string): Promise<boolean> {\n    try {\n      await fs.access(filePath)\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 同步检查文件或目录是否存在\n   */\n  static existsSync(filePath: string): boolean {\n    try {\n      require('fs').accessSync(filePath)\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 读取文件内容\n   */\n  static async readFile(filePath: string, encoding: BufferEncoding = 'utf8'): Promise<string> {\n    return fs.readFile(filePath, encoding)\n  }\n\n  /**\n   * 写入文件内容\n   */\n  static async writeFile(filePath: string, content: string, encoding: BufferEncoding = 'utf8'): Promise<void> {\n    // 确保目录存在\n    await this.ensureDir(path.dirname(filePath))\n    return fs.writeFile(filePath, content, encoding)\n  }\n\n  /**\n   * 复制文件\n   */\n  static async copyFile(src: string, dest: string): Promise<void> {\n    // 确保目标目录存在\n    await this.ensureDir(path.dirname(dest))\n    return fs.copyFile(src, dest)\n  }\n\n  /**\n   * 删除文件\n   */\n  static async removeFile(filePath: string): Promise<void> {\n    if (await this.exists(filePath)) {\n      return fs.unlink(filePath)\n    }\n  }\n\n  /**\n   * 创建目录\n   */\n  static async ensureDir(dirPath: string): Promise<void> {\n    try {\n      await fs.mkdir(dirPath, { recursive: true })\n    } catch (error) {\n      // 忽略目录已存在的错误\n      if ((error as NodeJS.ErrnoException).code !== 'EEXIST') {\n        throw error\n      }\n    }\n  }\n\n  /**\n   * 删除目录\n   */\n  static async removeDir(dirPath: string): Promise<void> {\n    if (await this.exists(dirPath)) {\n      return fs.rmdir(dirPath, { recursive: true })\n    }\n  }\n\n  /**\n   * 清空目录\n   */\n  static async emptyDir(dirPath: string): Promise<void> {\n    if (await this.exists(dirPath)) {\n      const files = await fs.readdir(dirPath)\n      await Promise.all(\n        files.map(async (file) => {\n          const filePath = path.join(dirPath, file)\n          const stat = await fs.stat(filePath)\n          if (stat.isDirectory()) {\n            await this.removeDir(filePath)\n          } else {\n            await this.removeFile(filePath)\n          }\n        })\n      )\n    }\n  }\n\n  /**\n   * 获取文件统计信息\n   */\n  static async stat(filePath: string): Promise<FileInfo> {\n    const stats = await fs.stat(filePath)\n    const ext = path.extname(filePath)\n\n    return {\n      path: filePath,\n      size: stats.size,\n      type: stats.isDirectory() ? 'directory' : this.getFileType(ext)\n    }\n  }\n\n  /**\n   * 读取目录内容\n   */\n  static async readDir(dirPath: string): Promise<string[]> {\n    return fs.readdir(dirPath)\n  }\n\n  /**\n   * 递归读取目录内容\n   */\n  static async readDirRecursive(dirPath: string): Promise<string[]> {\n    const files: string[] = []\n\n    const traverse = async (currentPath: string) => {\n      const items = await fs.readdir(currentPath)\n\n      for (const item of items) {\n        const itemPath = path.join(currentPath, item)\n        const stat = await fs.stat(itemPath)\n\n        if (stat.isDirectory()) {\n          await traverse(itemPath)\n        } else {\n          files.push(itemPath)\n        }\n      }\n    }\n\n    await traverse(dirPath)\n    return files\n  }\n\n  /**\n   * 使用 glob 模式查找文件\n   */\n  static async glob(pattern: string | string[], options: {\n    cwd?: string\n    ignore?: string[]\n    absolute?: boolean\n    onlyFiles?: boolean\n    onlyDirectories?: boolean\n  } = {}): Promise<string[]> {\n    return fastGlob(pattern, {\n      cwd: options.cwd || process.cwd(),\n      ignore: options.ignore || [],\n      absolute: options.absolute ?? true,\n      onlyFiles: options.onlyFiles ?? true,\n      onlyDirectories: options.onlyDirectories ?? false\n    })\n  }\n\n  /**\n   * 查找文件\n   */\n  static async findFiles(\n    patterns: string[],\n    options: {\n      cwd?: string\n      ignore?: string[]\n      maxDepth?: number\n    } = {}\n  ): Promise<string[]> {\n    return this.glob(patterns, {\n      cwd: options.cwd,\n      ignore: options.ignore,\n      onlyFiles: true\n    })\n  }\n\n  /**\n   * 查找目录\n   */\n  static async findDirs(\n    patterns: string[],\n    options: {\n      cwd?: string\n      ignore?: string[]\n      maxDepth?: number\n    } = {}\n  ): Promise<string[]> {\n    return this.glob(patterns, {\n      cwd: options.cwd,\n      ignore: options.ignore,\n      onlyDirectories: true\n    })\n  }\n\n  /**\n   * 获取文件大小\n   */\n  static async getFileSize(filePath: string): Promise<number> {\n    const stats = await fs.stat(filePath)\n    return stats.size\n  }\n\n  /**\n   * 获取目录大小\n   */\n  static async getDirSize(dirPath: string): Promise<number> {\n    let totalSize = 0\n\n    const traverse = async (currentPath: string) => {\n      const items = await fs.readdir(currentPath)\n\n      for (const item of items) {\n        const itemPath = path.join(currentPath, item)\n        const stat = await fs.stat(itemPath)\n\n        if (stat.isDirectory()) {\n          await traverse(itemPath)\n        } else {\n          totalSize += stat.size\n        }\n      }\n    }\n\n    await traverse(dirPath)\n    return totalSize\n  }\n\n  /**\n   * 检查路径是否为文件\n   */\n  static async isFile(filePath: string): Promise<boolean> {\n    try {\n      const stats = await fs.stat(filePath)\n      return stats.isFile()\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 检查路径是否为目录\n   */\n  static async isDirectory(dirPath: string): Promise<boolean> {\n    try {\n      const stats = await fs.stat(dirPath)\n      return stats.isDirectory()\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 获取文件的修改时间\n   */\n  static async getModifiedTime(filePath: string): Promise<Date> {\n    const stats = await fs.stat(filePath)\n    return stats.mtime\n  }\n\n  /**\n   * 比较文件修改时间\n   */\n  static async isNewer(file1: string, file2: string): Promise<boolean> {\n    if (!(await this.exists(file1))) return false\n    if (!(await this.exists(file2))) return true\n\n    const time1 = await this.getModifiedTime(file1)\n    const time2 = await this.getModifiedTime(file2)\n\n    return time1 > time2\n  }\n\n  /**\n   * 创建临时文件\n   */\n  static async createTempFile(prefix: string = 'temp', suffix: string = '.tmp'): Promise<string> {\n    const tempDir = require('os').tmpdir()\n    const fileName = `${prefix}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}${suffix}`\n    return path.join(tempDir, fileName)\n  }\n\n  /**\n   * 创建临时目录\n   */\n  static async createTempDir(prefix: string = 'temp'): Promise<string> {\n    const tempDir = require('os').tmpdir()\n    const dirName = `${prefix}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    const tempDirPath = path.join(tempDir, dirName)\n    await this.ensureDir(tempDirPath)\n    return tempDirPath\n  }\n\n  /**\n   * 获取文件类型\n   */\n  private static getFileType(extension: string): string {\n    const typeMap: Record<string, string> = {\n      '.js': 'javascript',\n      '.ts': 'typescript',\n      '.jsx': 'jsx',\n      '.tsx': 'tsx',\n      '.vue': 'vue',\n      '.css': 'css',\n      '.less': 'less',\n      '.scss': 'scss',\n      '.sass': 'sass',\n      '.json': 'json',\n      '.md': 'markdown',\n      '.html': 'html',\n      '.xml': 'xml',\n      '.svg': 'svg',\n      '.png': 'image',\n      '.jpg': 'image',\n      '.jpeg': 'image',\n      '.gif': 'image',\n      '.webp': 'image'\n    }\n\n    return typeMap[extension.toLowerCase()] || 'unknown'\n  }\n}\n\n// 导出便捷函数\nexport const {\n  exists,\n  existsSync,\n  readFile,\n  writeFile,\n  copyFile,\n  removeFile,\n  ensureDir,\n  removeDir,\n  emptyDir,\n  stat,\n  readDir,\n  readDirRecursive,\n  findDirs,\n  getFileSize,\n  getDirSize,\n  isFile,\n  isDirectory,\n  getModifiedTime,\n  isNewer,\n  createTempFile,\n  createTempDir\n} = FileSystem\n\n// 单独导出 findFiles 以保持正确的 this 上下文\nexport const findFiles = FileSystem.findFiles.bind(FileSystem)\n","/**\n * 错误码和错误信息常量\n */\n\n/**\n * 错误码枚举\n */\nexport enum ErrorCode {\n  // 配置相关错误 (1000-1999)\n  CONFIG_NOT_FOUND = 'E1001',\n  CONFIG_PARSE_ERROR = 'E1002',\n  CONFIG_VALIDATION_ERROR = 'E1003',\n  CONFIG_MERGE_ERROR = 'E1004',\n  CONFIG_TRANSFORM_ERROR = 'E1005',\n  \n  // 构建相关错误 (2000-2999)\n  BUILD_FAILED = 'E2001',\n  BUILD_TIMEOUT = 'E2002',\n  BUILD_CANCELLED = 'E2003',\n  BUILD_OUT_OF_MEMORY = 'E2004',\n  BUILD_DEPENDENCY_ERROR = 'E2005',\n  \n  // 适配器相关错误 (3000-3999)\n  ADAPTER_NOT_FOUND = 'E3001',\n  ADAPTER_INIT_ERROR = 'E3002',\n  ADAPTER_NOT_AVAILABLE = 'E3003',\n  ADAPTER_VERSION_MISMATCH = 'E3004',\n  ADAPTER_CONFIG_ERROR = 'E3005',\n  \n  // 插件相关错误 (4000-4999)\n  PLUGIN_NOT_FOUND = 'E4001',\n  PLUGIN_LOAD_ERROR = 'E4002',\n  PLUGIN_INIT_ERROR = 'E4003',\n  PLUGIN_EXECUTION_ERROR = 'E4004',\n  PLUGIN_DEPENDENCY_ERROR = 'E4005',\n  \n  // 文件系统相关错误 (5000-5999)\n  FILE_NOT_FOUND = 'E5001',\n  FILE_READ_ERROR = 'E5002',\n  FILE_WRITE_ERROR = 'E5003',\n  DIRECTORY_NOT_FOUND = 'E5004',\n  PERMISSION_DENIED = 'E5005',\n  \n  // 依赖相关错误 (6000-6999)\n  DEPENDENCY_NOT_FOUND = 'E6001',\n  DEPENDENCY_VERSION_CONFLICT = 'E6002',\n  DEPENDENCY_INSTALL_ERROR = 'E6003',\n  DEPENDENCY_RESOLUTION_ERROR = 'E6004',\n  \n  // 网络相关错误 (7000-7999)\n  NETWORK_ERROR = 'E7001',\n  DOWNLOAD_ERROR = 'E7002',\n  UPLOAD_ERROR = 'E7003',\n  TIMEOUT_ERROR = 'E7004',\n  \n  // 系统相关错误 (8000-8999)\n  SYSTEM_ERROR = 'E8001',\n  PLATFORM_NOT_SUPPORTED = 'E8002',\n  NODE_VERSION_MISMATCH = 'E8003',\n  INSUFFICIENT_RESOURCES = 'E8004',\n  \n  // 用户输入错误 (9000-9999)\n  INVALID_INPUT = 'E9001',\n  INVALID_OPTION = 'E9002',\n  INVALID_PATH = 'E9003',\n  INVALID_FORMAT = 'E9004',\n  MISSING_REQUIRED_OPTION = 'E9005'\n}\n\n/**\n * 错误信息映射\n */\nexport const ERROR_MESSAGES: Record<ErrorCode, string> = {\n  // 配置相关错误\n  [ErrorCode.CONFIG_NOT_FOUND]: '配置文件未找到',\n  [ErrorCode.CONFIG_PARSE_ERROR]: '配置文件解析失败',\n  [ErrorCode.CONFIG_VALIDATION_ERROR]: '配置验证失败',\n  [ErrorCode.CONFIG_MERGE_ERROR]: '配置合并失败',\n  [ErrorCode.CONFIG_TRANSFORM_ERROR]: '配置转换失败',\n  \n  // 构建相关错误\n  [ErrorCode.BUILD_FAILED]: '构建失败',\n  [ErrorCode.BUILD_TIMEOUT]: '构建超时',\n  [ErrorCode.BUILD_CANCELLED]: '构建被取消',\n  [ErrorCode.BUILD_OUT_OF_MEMORY]: '构建内存不足',\n  [ErrorCode.BUILD_DEPENDENCY_ERROR]: '构建依赖错误',\n  \n  // 适配器相关错误\n  [ErrorCode.ADAPTER_NOT_FOUND]: '适配器未找到',\n  [ErrorCode.ADAPTER_INIT_ERROR]: '适配器初始化失败',\n  [ErrorCode.ADAPTER_NOT_AVAILABLE]: '适配器不可用',\n  [ErrorCode.ADAPTER_VERSION_MISMATCH]: '适配器版本不匹配',\n  [ErrorCode.ADAPTER_CONFIG_ERROR]: '适配器配置错误',\n  \n  // 插件相关错误\n  [ErrorCode.PLUGIN_NOT_FOUND]: '插件未找到',\n  [ErrorCode.PLUGIN_LOAD_ERROR]: '插件加载失败',\n  [ErrorCode.PLUGIN_INIT_ERROR]: '插件初始化失败',\n  [ErrorCode.PLUGIN_EXECUTION_ERROR]: '插件执行失败',\n  [ErrorCode.PLUGIN_DEPENDENCY_ERROR]: '插件依赖错误',\n  \n  // 文件系统相关错误\n  [ErrorCode.FILE_NOT_FOUND]: '文件未找到',\n  [ErrorCode.FILE_READ_ERROR]: '文件读取失败',\n  [ErrorCode.FILE_WRITE_ERROR]: '文件写入失败',\n  [ErrorCode.DIRECTORY_NOT_FOUND]: '目录未找到',\n  [ErrorCode.PERMISSION_DENIED]: '权限不足',\n  \n  // 依赖相关错误\n  [ErrorCode.DEPENDENCY_NOT_FOUND]: '依赖未找到',\n  [ErrorCode.DEPENDENCY_VERSION_CONFLICT]: '依赖版本冲突',\n  [ErrorCode.DEPENDENCY_INSTALL_ERROR]: '依赖安装失败',\n  [ErrorCode.DEPENDENCY_RESOLUTION_ERROR]: '依赖解析失败',\n  \n  // 网络相关错误\n  [ErrorCode.NETWORK_ERROR]: '网络错误',\n  [ErrorCode.DOWNLOAD_ERROR]: '下载失败',\n  [ErrorCode.UPLOAD_ERROR]: '上传失败',\n  [ErrorCode.TIMEOUT_ERROR]: '网络超时',\n  \n  // 系统相关错误\n  [ErrorCode.SYSTEM_ERROR]: '系统错误',\n  [ErrorCode.PLATFORM_NOT_SUPPORTED]: '平台不支持',\n  [ErrorCode.NODE_VERSION_MISMATCH]: 'Node.js 版本不匹配',\n  [ErrorCode.INSUFFICIENT_RESOURCES]: '系统资源不足',\n  \n  // 用户输入错误\n  [ErrorCode.INVALID_INPUT]: '无效输入',\n  [ErrorCode.INVALID_OPTION]: '无效选项',\n  [ErrorCode.INVALID_PATH]: '无效路径',\n  [ErrorCode.INVALID_FORMAT]: '无效格式',\n  [ErrorCode.MISSING_REQUIRED_OPTION]: '缺少必需选项'\n}\n\n/**\n * 错误建议映射\n */\nexport const ERROR_SUGGESTIONS: Record<ErrorCode, string> = {\n  // 配置相关错误\n  [ErrorCode.CONFIG_NOT_FOUND]: '请在项目根目录创建 builder.config.ts 配置文件',\n  [ErrorCode.CONFIG_PARSE_ERROR]: '请检查配置文件语法是否正确',\n  [ErrorCode.CONFIG_VALIDATION_ERROR]: '请检查配置项是否符合要求',\n  [ErrorCode.CONFIG_MERGE_ERROR]: '请检查配置合并逻辑',\n  [ErrorCode.CONFIG_TRANSFORM_ERROR]: '请检查配置转换规则',\n  \n  // 构建相关错误\n  [ErrorCode.BUILD_FAILED]: '请检查构建日志获取详细错误信息',\n  [ErrorCode.BUILD_TIMEOUT]: '请增加构建超时时间或优化构建配置',\n  [ErrorCode.BUILD_CANCELLED]: '构建被用户或系统取消',\n  [ErrorCode.BUILD_OUT_OF_MEMORY]: '请增加系统内存或优化构建配置',\n  [ErrorCode.BUILD_DEPENDENCY_ERROR]: '请检查项目依赖是否正确安装',\n  \n  // 适配器相关错误\n  [ErrorCode.ADAPTER_NOT_FOUND]: '请安装对应的打包器依赖',\n  [ErrorCode.ADAPTER_INIT_ERROR]: '请检查打包器是否正确安装',\n  [ErrorCode.ADAPTER_NOT_AVAILABLE]: '请确保打包器依赖已正确安装',\n  [ErrorCode.ADAPTER_VERSION_MISMATCH]: '请升级或降级打包器版本',\n  [ErrorCode.ADAPTER_CONFIG_ERROR]: '请检查适配器配置是否正确',\n  \n  // 插件相关错误\n  [ErrorCode.PLUGIN_NOT_FOUND]: '请安装对应的插件依赖',\n  [ErrorCode.PLUGIN_LOAD_ERROR]: '请检查插件是否正确安装',\n  [ErrorCode.PLUGIN_INIT_ERROR]: '请检查插件配置是否正确',\n  [ErrorCode.PLUGIN_EXECUTION_ERROR]: '请检查插件执行环境',\n  [ErrorCode.PLUGIN_DEPENDENCY_ERROR]: '请检查插件依赖是否满足',\n  \n  // 文件系统相关错误\n  [ErrorCode.FILE_NOT_FOUND]: '请检查文件路径是否正确',\n  [ErrorCode.FILE_READ_ERROR]: '请检查文件权限和文件完整性',\n  [ErrorCode.FILE_WRITE_ERROR]: '请检查目录权限和磁盘空间',\n  [ErrorCode.DIRECTORY_NOT_FOUND]: '请检查目录路径是否正确',\n  [ErrorCode.PERMISSION_DENIED]: '请检查文件或目录权限',\n  \n  // 依赖相关错误\n  [ErrorCode.DEPENDENCY_NOT_FOUND]: '请运行 npm install 安装依赖',\n  [ErrorCode.DEPENDENCY_VERSION_CONFLICT]: '请解决依赖版本冲突',\n  [ErrorCode.DEPENDENCY_INSTALL_ERROR]: '请检查网络连接和包管理器配置',\n  [ErrorCode.DEPENDENCY_RESOLUTION_ERROR]: '请检查依赖解析配置',\n  \n  // 网络相关错误\n  [ErrorCode.NETWORK_ERROR]: '请检查网络连接',\n  [ErrorCode.DOWNLOAD_ERROR]: '请检查网络连接和下载地址',\n  [ErrorCode.UPLOAD_ERROR]: '请检查网络连接和上传权限',\n  [ErrorCode.TIMEOUT_ERROR]: '请检查网络连接或增加超时时间',\n  \n  // 系统相关错误\n  [ErrorCode.SYSTEM_ERROR]: '请检查系统环境和权限',\n  [ErrorCode.PLATFORM_NOT_SUPPORTED]: '请使用支持的操作系统',\n  [ErrorCode.NODE_VERSION_MISMATCH]: '请升级 Node.js 到支持的版本',\n  [ErrorCode.INSUFFICIENT_RESOURCES]: '请释放系统资源或增加硬件配置',\n  \n  // 用户输入错误\n  [ErrorCode.INVALID_INPUT]: '请检查输入参数格式',\n  [ErrorCode.INVALID_OPTION]: '请使用有效的选项参数',\n  [ErrorCode.INVALID_PATH]: '请使用有效的文件或目录路径',\n  [ErrorCode.INVALID_FORMAT]: '请使用正确的格式',\n  [ErrorCode.MISSING_REQUIRED_OPTION]: '请提供必需的选项参数'\n}\n\n/**\n * 错误分类\n */\nexport const ERROR_CATEGORIES = {\n  CONFIGURATION: [\n    ErrorCode.CONFIG_NOT_FOUND,\n    ErrorCode.CONFIG_PARSE_ERROR,\n    ErrorCode.CONFIG_VALIDATION_ERROR,\n    ErrorCode.CONFIG_MERGE_ERROR,\n    ErrorCode.CONFIG_TRANSFORM_ERROR\n  ],\n  BUILD: [\n    ErrorCode.BUILD_FAILED,\n    ErrorCode.BUILD_TIMEOUT,\n    ErrorCode.BUILD_CANCELLED,\n    ErrorCode.BUILD_OUT_OF_MEMORY,\n    ErrorCode.BUILD_DEPENDENCY_ERROR\n  ],\n  ADAPTER: [\n    ErrorCode.ADAPTER_NOT_FOUND,\n    ErrorCode.ADAPTER_INIT_ERROR,\n    ErrorCode.ADAPTER_NOT_AVAILABLE,\n    ErrorCode.ADAPTER_VERSION_MISMATCH,\n    ErrorCode.ADAPTER_CONFIG_ERROR\n  ],\n  PLUGIN: [\n    ErrorCode.PLUGIN_NOT_FOUND,\n    ErrorCode.PLUGIN_LOAD_ERROR,\n    ErrorCode.PLUGIN_INIT_ERROR,\n    ErrorCode.PLUGIN_EXECUTION_ERROR,\n    ErrorCode.PLUGIN_DEPENDENCY_ERROR\n  ],\n  FILESYSTEM: [\n    ErrorCode.FILE_NOT_FOUND,\n    ErrorCode.FILE_READ_ERROR,\n    ErrorCode.FILE_WRITE_ERROR,\n    ErrorCode.DIRECTORY_NOT_FOUND,\n    ErrorCode.PERMISSION_DENIED\n  ],\n  DEPENDENCY: [\n    ErrorCode.DEPENDENCY_NOT_FOUND,\n    ErrorCode.DEPENDENCY_VERSION_CONFLICT,\n    ErrorCode.DEPENDENCY_INSTALL_ERROR,\n    ErrorCode.DEPENDENCY_RESOLUTION_ERROR\n  ],\n  NETWORK: [\n    ErrorCode.NETWORK_ERROR,\n    ErrorCode.DOWNLOAD_ERROR,\n    ErrorCode.UPLOAD_ERROR,\n    ErrorCode.TIMEOUT_ERROR\n  ],\n  SYSTEM: [\n    ErrorCode.SYSTEM_ERROR,\n    ErrorCode.PLATFORM_NOT_SUPPORTED,\n    ErrorCode.NODE_VERSION_MISMATCH,\n    ErrorCode.INSUFFICIENT_RESOURCES\n  ],\n  USER_INPUT: [\n    ErrorCode.INVALID_INPUT,\n    ErrorCode.INVALID_OPTION,\n    ErrorCode.INVALID_PATH,\n    ErrorCode.INVALID_FORMAT,\n    ErrorCode.MISSING_REQUIRED_OPTION\n  ]\n} as const\n\n/**\n * 错误严重程度\n */\nexport const ERROR_SEVERITY = {\n  [ErrorCode.CONFIG_NOT_FOUND]: 'high',\n  [ErrorCode.CONFIG_PARSE_ERROR]: 'high',\n  [ErrorCode.CONFIG_VALIDATION_ERROR]: 'medium',\n  [ErrorCode.BUILD_FAILED]: 'high',\n  [ErrorCode.BUILD_TIMEOUT]: 'medium',\n  [ErrorCode.ADAPTER_NOT_FOUND]: 'high',\n  [ErrorCode.PLUGIN_NOT_FOUND]: 'medium',\n  [ErrorCode.FILE_NOT_FOUND]: 'medium',\n  [ErrorCode.DEPENDENCY_NOT_FOUND]: 'high',\n  [ErrorCode.NETWORK_ERROR]: 'low',\n  [ErrorCode.SYSTEM_ERROR]: 'high',\n  [ErrorCode.INVALID_INPUT]: 'low'\n} as const\n","/**\n * 错误处理工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport { ErrorCode, ERROR_MESSAGES, ERROR_SUGGESTIONS } from '../constants/errors'\nimport type { Logger } from './logger'\n\n/**\n * 构建器错误类\n */\nexport class BuilderError extends Error {\n  public readonly code: ErrorCode\n  public readonly suggestion?: string\n  public readonly details?: any\n  public readonly phase?: string\n  public readonly file?: string\n  public readonly cause?: Error\n\n  constructor(\n    code: ErrorCode,\n    message?: string,\n    options: {\n      suggestion?: string\n      details?: any\n      phase?: string\n      file?: string\n      cause?: Error\n    } = {}\n  ) {\n    const errorMessage = message || ERROR_MESSAGES[code] || '未知错误'\n    super(errorMessage)\n\n    this.name = 'BuilderError'\n    this.code = code\n    this.suggestion = options.suggestion || ERROR_SUGGESTIONS[code]\n    this.details = options.details\n    this.phase = options.phase\n    this.file = options.file\n\n    if (options.cause) {\n      this.cause = options.cause\n    }\n\n    // 保持堆栈跟踪\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BuilderError)\n    }\n  }\n\n  /**\n   * 获取完整的错误信息\n   */\n  getFullMessage(): string {\n    let message = `[${this.code}] ${this.message}`\n\n    if (this.phase) {\n      message += ` (阶段: ${this.phase})`\n    }\n\n    if (this.file) {\n      message += ` (文件: ${this.file})`\n    }\n\n    if (this.suggestion) {\n      message += `\\n建议: ${this.suggestion}`\n    }\n\n    return message\n  }\n\n  /**\n   * 转换为 JSON 格式\n   */\n  toJSON(): Record<string, any> {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      suggestion: this.suggestion,\n      details: this.details,\n      phase: this.phase,\n      file: this.file,\n      stack: this.stack\n    }\n  }\n}\n\n/**\n * 错误处理器选项\n */\nexport interface ErrorHandlerOptions {\n  /** 日志记录器 */\n  logger?: Logger\n\n  /** 是否显示堆栈跟踪 */\n  showStack?: boolean\n\n  /** 是否显示建议 */\n  showSuggestions?: boolean\n\n  /** 错误回调 */\n  onError?: (error: Error) => void\n\n  /** 是否退出进程 */\n  exitOnError?: boolean\n\n  /** 退出码 */\n  exitCode?: number\n}\n\n/**\n * 错误处理器类\n */\nexport class ErrorHandler {\n  private logger?: Logger\n  private showStack: boolean\n  private showSuggestions: boolean\n  private onError?: (error: Error) => void\n  private exitOnError: boolean\n  private exitCode: number\n\n  constructor(options: ErrorHandlerOptions = {}) {\n    this.logger = options.logger\n    this.showStack = options.showStack ?? false\n    this.showSuggestions = options.showSuggestions ?? true\n    this.onError = options.onError\n    this.exitOnError = options.exitOnError ?? false\n    this.exitCode = options.exitCode ?? 1\n  }\n\n  /**\n   * 处理错误\n   */\n  handle(error: Error, context?: string): void {\n    // 调用错误回调\n    if (this.onError) {\n      try {\n        this.onError(error)\n      } catch (callbackError) {\n        this.logger?.error('错误回调执行失败:', callbackError)\n      }\n    }\n\n    // 记录错误日志\n    this.logError(error, context)\n\n    // 是否退出进程\n    if (this.exitOnError) {\n      process.exit(this.exitCode)\n    }\n  }\n\n  /**\n   * 处理异步错误\n   */\n  async handleAsync(error: Error, context?: string): Promise<void> {\n    return new Promise((resolve) => {\n      this.handle(error, context)\n      resolve()\n    })\n  }\n\n  /**\n   * 包装函数以处理错误\n   */\n  wrap<T extends (...args: any[]) => any>(fn: T, context?: string): T {\n    return ((...args: any[]) => {\n      try {\n        const result = fn(...args)\n\n        // 处理 Promise\n        if (result && typeof result.catch === 'function') {\n          return result.catch((error: Error) => {\n            this.handle(error, context)\n            throw error\n          })\n        }\n\n        return result\n      } catch (error) {\n        this.handle(error as Error, context)\n        throw error\n      }\n    }) as T\n  }\n\n  /**\n   * 包装异步函数以处理错误\n   */\n  wrapAsync<T extends (...args: any[]) => Promise<any>>(fn: T, context?: string): T {\n    return (async (...args: any[]) => {\n      try {\n        return await fn(...args)\n      } catch (error) {\n        await this.handleAsync(error as Error, context)\n        throw error\n      }\n    }) as T\n  }\n\n  /**\n   * 创建构建器错误\n   */\n  createError(\n    code: ErrorCode,\n    message?: string,\n    options?: {\n      suggestion?: string\n      details?: any\n      phase?: string\n      file?: string\n      cause?: Error\n    }\n  ): BuilderError {\n    return new BuilderError(code, message, options)\n  }\n\n  /**\n   * 抛出构建器错误\n   */\n  throwError(\n    code: ErrorCode,\n    message?: string,\n    options?: {\n      suggestion?: string\n      details?: any\n      phase?: string\n      file?: string\n      cause?: Error\n    }\n  ): never {\n    throw this.createError(code, message, options)\n  }\n\n  /**\n   * 记录错误日志\n   */\n  private logError(error: Error, context?: string): void {\n    if (!this.logger) {\n      console.error(error)\n      return\n    }\n\n    // 构建错误消息\n    let message = error.message\n    if (context) {\n      message = `${context}: ${message}`\n    }\n\n    // 记录基本错误信息\n    this.logger.error(message)\n\n    // 如果是构建器错误，显示额外信息\n    if (error instanceof BuilderError) {\n      if (error.phase) {\n        this.logger.error(`阶段: ${error.phase}`)\n      }\n\n      if (error.file) {\n        this.logger.error(`文件: ${error.file}`)\n      }\n\n      if (error.details) {\n        this.logger.debug('错误详情:', error.details)\n      }\n\n      if (this.showSuggestions && error.suggestion) {\n        this.logger.info(`建议: ${error.suggestion}`)\n      }\n    }\n\n    // 显示堆栈跟踪\n    if (this.showStack && error.stack) {\n      this.logger.debug('堆栈跟踪:')\n      this.logger.debug(error.stack)\n    }\n\n    // 显示原因链\n    if ((error as any).cause) {\n      this.logger.debug('原因:')\n      this.logError((error as any).cause as Error)\n    }\n  }\n}\n\n/**\n * 默认错误处理器实例\n */\nexport const errorHandler = new ErrorHandler()\n\n/**\n * 创建错误处理器\n */\nexport function createErrorHandler(options: ErrorHandlerOptions = {}): ErrorHandler {\n  return new ErrorHandler(options)\n}\n\n/**\n * 处理未捕获的异常\n */\nexport function setupGlobalErrorHandling(handler: ErrorHandler = errorHandler): void {\n  // 处理未捕获的异常\n  process.on('uncaughtException', (error) => {\n    handler.handle(error, '未捕获的异常')\n    process.exit(1)\n  })\n\n  // 处理未处理的 Promise 拒绝\n  process.on('unhandledRejection', (reason, _promise) => {\n    const error = reason instanceof Error ? reason : new Error(String(reason))\n    handler.handle(error, '未处理的 Promise 拒绝')\n  })\n\n  // 处理警告\n  process.on('warning', (warning) => {\n    if (handler['logger']) {\n      handler['logger'].warn(`Node.js 警告: ${warning.message}`)\n    }\n  })\n}\n\n/**\n * 判断是否为构建器错误\n */\nexport function isBuilderError(error: any): error is BuilderError {\n  return error instanceof BuilderError\n}\n\n/**\n * 从错误中提取错误码\n */\nexport function getErrorCode(error: Error): ErrorCode | undefined {\n  if (isBuilderError(error)) {\n    return error.code\n  }\n  return undefined\n}\n\n/**\n * 格式化错误信息\n */\nexport function formatError(error: Error, includeStack: boolean = false): string {\n  if (isBuilderError(error)) {\n    return error.getFullMessage()\n  }\n\n  let message = error.message\n  if (includeStack && error.stack) {\n    message += `\\n${error.stack}`\n  }\n\n  return message\n}\n","/**\n * 配置文件加载器\n */\n\nimport path from 'path'\nimport createJiti from 'jiti'\nimport { CONFIG_FILE_NAMES } from '../../constants/defaults'\nimport { exists, readFile } from '../file-system'\nimport type { BuilderConfig, ConfigFileInfo, ConfigFileType } from '../../types/config'\nimport { ErrorCode } from '../../constants/errors'\nimport { BuilderError } from '../error-handler'\n\n/**\n * 配置文件加载器类\n */\nexport class ConfigLoader {\n  /**\n   * 查找配置文件\n   */\n  async findConfigFile(startDir: string = process.cwd()): Promise<string | null> {\n    for (const fileName of CONFIG_FILE_NAMES) {\n      const configPath = path.resolve(startDir, fileName)\n      if (await exists(configPath)) {\n        return configPath\n      }\n    }\n    return null\n  }\n\n  /**\n   * 获取配置文件信息\n   */\n  async getConfigFileInfo(configPath: string): Promise<ConfigFileInfo> {\n    const fileExists = await exists(configPath)\n    const ext = path.extname(configPath)\n\n    let type: ConfigFileType\n    switch (ext) {\n      case '.ts':\n        type = 'ts'\n        break\n      case '.js':\n      case '.mjs':\n        type = 'js'\n        break\n      case '.json':\n        type = 'json'\n        break\n      default:\n        type = 'js'\n    }\n\n    const info: ConfigFileInfo = {\n      path: configPath,\n      type,\n      exists: fileExists\n    }\n\n    if (fileExists) {\n      try {\n        const stats = await import('fs').then(fs => fs.promises.stat(configPath))\n        info.mtime = stats.mtime\n        info.size = stats.size\n      } catch {\n        // 忽略获取文件信息失败的错误\n      }\n    }\n\n    return info\n  }\n\n  /**\n   * 加载配置文件\n   */\n  async loadConfigFile(configPath: string): Promise<BuilderConfig> {\n    const info = await this.getConfigFileInfo(configPath)\n\n    if (!info.exists) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_NOT_FOUND,\n        `配置文件不存在: ${configPath}`\n      )\n    }\n\n    try {\n      switch (info.type) {\n        case 'ts':\n        case 'js':\n          return this.loadJSConfig(configPath)\n        case 'json':\n          return this.loadJSONConfig(configPath)\n        default:\n          throw new BuilderError(\n            ErrorCode.CONFIG_PARSE_ERROR,\n            `不支持的配置文件格式: ${info.type}`\n          )\n      }\n    } catch (error) {\n      if (error instanceof BuilderError) {\n        throw error\n      }\n\n      throw new BuilderError(\n        ErrorCode.CONFIG_PARSE_ERROR,\n        `加载配置文件失败: ${configPath}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 加载 JavaScript/TypeScript 配置\n   */\n  private async loadJSConfig(configPath: string): Promise<BuilderConfig> {\n    try {\n      // 使用 jiti 动态导入，支持 TypeScript\n      const jiti = createJiti(import.meta.url, {\n        interopDefault: true,\n        esmResolve: true,\n        cache: false // 禁用缓存以支持配置热重载\n      })\n\n      const configModule = await jiti(configPath)\n\n      // 处理不同的导出格式\n      let config: BuilderConfig\n      if (typeof configModule === 'function') {\n        // 函数式配置\n        config = await configModule({\n          mode: process.env.NODE_ENV || 'production',\n          bundler: process.env.BUILDER_BUNDLER || 'rollup'\n        })\n      } else if (configModule && typeof configModule === 'object') {\n        // 对象配置\n        config = configModule\n      } else {\n        throw new Error('配置文件必须导出对象或函数')\n      }\n\n      return config\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_PARSE_ERROR,\n        `解析 JavaScript/TypeScript 配置文件失败: ${configPath}`,\n        {\n          cause: error as Error,\n          suggestion: '请检查配置文件语法是否正确'\n        }\n      )\n    }\n  }\n\n  /**\n   * 加载 JSON 配置\n   */\n  private async loadJSONConfig(configPath: string): Promise<BuilderConfig> {\n    try {\n      const content = await readFile(configPath, 'utf-8')\n\n      // 特殊处理 package.json\n      if (path.basename(configPath) === 'package.json') {\n        const pkg = JSON.parse(content)\n        return pkg.builder || {}\n      }\n\n      return JSON.parse(content)\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_PARSE_ERROR,\n        `解析 JSON 配置文件失败: ${configPath}`,\n        {\n          cause: error as Error,\n          suggestion: '请检查 JSON 格式是否正确'\n        }\n      )\n    }\n  }\n\n  /**\n   * 加载多个配置文件并合并\n   */\n  async loadMultipleConfigs(configPaths: string[]): Promise<BuilderConfig> {\n    const configs: BuilderConfig[] = []\n\n    for (const configPath of configPaths) {\n      try {\n        const config = await this.loadConfigFile(configPath)\n        configs.push(config)\n      } catch (error) {\n        // 如果是文件不存在，跳过；其他错误抛出\n        if (error instanceof BuilderError && error.code === ErrorCode.CONFIG_NOT_FOUND) {\n          continue\n        }\n        throw error\n      }\n    }\n\n    if (configs.length === 0) {\n      return { input: 'src/index.ts' }\n    }\n\n    // 合并配置（后面的配置覆盖前面的）\n    return configs.reduce((merged, config) => ({\n      ...merged,\n      ...config\n    }), { input: 'src/index.ts' })\n  }\n\n  /**\n   * 监听配置文件变化\n   */\n  async watchConfigFile(\n    configPath: string,\n    callback: (config: BuilderConfig) => void\n  ): Promise<() => void> {\n    const chokidar = await import('chokidar')\n\n    const watcher = chokidar.watch(configPath, {\n      ignoreInitial: true,\n      persistent: true\n    })\n\n    const handleChange = async () => {\n      try {\n        const config = await this.loadConfigFile(configPath)\n        callback(config)\n      } catch (error) {\n        console.error('重新加载配置文件失败:', error)\n      }\n    }\n\n    watcher.on('change', handleChange)\n    watcher.on('add', handleChange)\n\n    // 返回清理函数\n    return () => {\n      watcher.close()\n    }\n  }\n\n  /**\n   * 获取所有可能的配置文件路径\n   */\n  getAllConfigPaths(baseDir: string = process.cwd()): string[] {\n    return CONFIG_FILE_NAMES.map(name => path.resolve(baseDir, name))\n  }\n\n  /**\n   * 检查配置文件是否存在\n   */\n  async hasConfigFile(baseDir: string = process.cwd()): Promise<boolean> {\n    const configPath = await this.findConfigFile(baseDir)\n    return configPath !== null\n  }\n\n  /**\n   * 获取配置文件的优先级\n   */\n  getConfigFilePriority(configPath: string): number {\n    const fileName = path.basename(configPath)\n    const index = CONFIG_FILE_NAMES.indexOf(fileName as any)\n    return index >= 0 ? index : CONFIG_FILE_NAMES.length\n  }\n\n  /**\n   * 选择最高优先级的配置文件\n   */\n  async selectBestConfigFile(baseDir: string = process.cwd()): Promise<string | null> {\n    const allPaths = this.getAllConfigPaths(baseDir)\n    const existingPaths: Array<{ path: string; priority: number }> = []\n\n    for (const configPath of allPaths) {\n      if (await exists(configPath)) {\n        existingPaths.push({\n          path: configPath,\n          priority: this.getConfigFilePriority(configPath)\n        })\n      }\n    }\n\n    if (existingPaths.length === 0) {\n      return null\n    }\n\n    // 按优先级排序，返回优先级最高的\n    existingPaths.sort((a, b) => a.priority - b.priority)\n    return existingPaths[0].path\n  }\n}\n\n/**\n * 默认配置加载器实例\n */\nexport const configLoader = new ConfigLoader()\n\n/**\n * 便捷函数：查找配置文件\n */\nexport function findConfigFile(startDir?: string): Promise<string | null> {\n  return configLoader.findConfigFile(startDir)\n}\n\n/**\n * 便捷函数：加载配置文件\n */\nexport function loadConfigFile(configPath: string): Promise<BuilderConfig> {\n  return configLoader.loadConfigFile(configPath)\n}\n\n/**\n * 便捷函数：定义配置\n */\nexport function defineConfig(config: BuilderConfig | ((context: any) => BuilderConfig)): BuilderConfig | ((context: any) => BuilderConfig) {\n  return config\n}\n","/**\n * 日志系统工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport chalk from 'chalk'\nimport type { LogLevel } from '../types/common'\n\n/**\n * 日志级别枚举\n */\nexport enum LogLevelEnum {\n  SILENT = 0,\n  ERROR = 1,\n  WARN = 2,\n  INFO = 3,\n  DEBUG = 4,\n  VERBOSE = 5\n}\n\n/**\n * 日志级别映射\n */\nconst LOG_LEVEL_MAP: Record<LogLevel, LogLevelEnum> = {\n  silent: LogLevelEnum.SILENT,\n  error: LogLevelEnum.ERROR,\n  warn: LogLevelEnum.WARN,\n  info: LogLevelEnum.INFO,\n  debug: LogLevelEnum.DEBUG,\n  verbose: LogLevelEnum.VERBOSE\n}\n\n/**\n * 日志选项\n */\nexport interface LoggerOptions {\n  /** 日志级别 */\n  level?: LogLevel\n  /** 是否启用颜色 */\n  colors?: boolean\n  /** 是否显示时间戳 */\n  timestamp?: boolean\n  /** 日志前缀 */\n  prefix?: string\n  /** 是否静默模式 */\n  silent?: boolean\n}\n\n/**\n * 日志记录器类\n */\nexport class Logger {\n  private level: LogLevelEnum\n  private colors: boolean\n  private timestamp: boolean\n  private prefix: string\n  private silent: boolean\n\n  constructor(options: LoggerOptions = {}) {\n    this.level = LOG_LEVEL_MAP[options.level || 'info']\n    this.colors = options.colors ?? true\n    this.timestamp = options.timestamp ?? false\n    this.prefix = options.prefix || '@ldesign/builder'\n    this.silent = options.silent ?? false\n  }\n\n  /**\n   * 设置日志级别\n   */\n  setLevel(level: LogLevel): void {\n    this.level = LOG_LEVEL_MAP[level]\n  }\n\n  /**\n   * 获取当前日志级别\n   */\n  getLevel(): LogLevel {\n    const entries = Object.entries(LOG_LEVEL_MAP)\n    const entry = entries.find(([, value]) => value === this.level)\n    return (entry?.[0] as LogLevel) || 'info'\n  }\n\n  /**\n   * 设置静默模式\n   */\n  setSilent(silent: boolean): void {\n    this.silent = silent\n  }\n\n  /**\n   * 错误日志\n   */\n  error(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.ERROR)) {\n      this.log('ERROR', message, chalk.red, ...args)\n    }\n  }\n\n  /**\n   * 警告日志\n   */\n  warn(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.WARN)) {\n      this.log('WARN', message, chalk.yellow, ...args)\n    }\n  }\n\n  /**\n   * 信息日志\n   */\n  info(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('INFO', message, chalk.blue, ...args)\n    }\n  }\n\n  /**\n   * 调试日志\n   */\n  debug(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.DEBUG)) {\n      this.log('DEBUG', message, chalk.gray, ...args)\n    }\n  }\n\n  /**\n   * 详细日志\n   */\n  verbose(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.VERBOSE)) {\n      this.log('VERBOSE', message, chalk.gray, ...args)\n    }\n  }\n\n  /**\n   * 成功日志\n   */\n  success(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('SUCCESS', message, chalk.green, ...args)\n    }\n  }\n\n  /**\n   * 开始日志（带缩进）\n   */\n  start(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('START', `▶ ${message}`, chalk.cyan, ...args)\n    }\n  }\n\n  /**\n   * 完成日志（带缩进）\n   */\n  complete(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('COMPLETE', `✓ ${message}`, chalk.green, ...args)\n    }\n  }\n\n  /**\n   * 失败日志（带缩进）\n   */\n  fail(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.ERROR)) {\n      this.log('FAIL', `✗ ${message}`, chalk.red, ...args)\n    }\n  }\n\n  /**\n   * 进度日志\n   */\n  progress(current: number, total: number, message?: string): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      const percent = Math.round((current / total) * 100)\n      const progressBar = this.createProgressBar(percent)\n      const progressMessage = message ? ` ${message}` : ''\n      this.log('PROGRESS', `${progressBar} ${percent}%${progressMessage}`, chalk.cyan)\n    }\n  }\n\n  /**\n   * 表格日志\n   */\n  table(data: Record<string, any>[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO) && data.length > 0) {\n      console.table(data)\n    }\n  }\n\n  /**\n   * 分组开始\n   */\n  group(label: string): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.group(this.formatMessage('GROUP', label, chalk.cyan))\n    }\n  }\n\n  /**\n   * 分组结束\n   */\n  groupEnd(): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.groupEnd()\n    }\n  }\n\n  /**\n   * 清屏\n   */\n  clear(): void {\n    if (!this.silent) {\n      console.clear()\n    }\n  }\n\n  /**\n   * 换行\n   */\n  newLine(): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.log()\n    }\n  }\n\n  /**\n   * 分隔线\n   */\n  divider(char: string = '-', length: number = 50): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.log(chalk.gray(char.repeat(length)))\n    }\n  }\n\n  /**\n   * 创建子日志记录器\n   */\n  child(prefix: string, options: Partial<LoggerOptions> = {}): Logger {\n    return new Logger({\n      level: this.getLevel(),\n      colors: this.colors,\n      timestamp: this.timestamp,\n      prefix: `${this.prefix}:${prefix}`,\n      silent: this.silent,\n      ...options\n    })\n  }\n\n  /**\n   * 判断是否应该记录日志\n   */\n  private shouldLog(level: LogLevelEnum): boolean {\n    return !this.silent && this.level >= level\n  }\n\n  /**\n   * 记录日志\n   */\n  private log(type: string, message: string, colorFn: (str: string) => string, ...args: any[]): void {\n    const formattedMessage = this.formatMessage(type, message, colorFn)\n    console.log(formattedMessage, ...args)\n  }\n\n  /**\n   * 格式化消息\n   */\n  private formatMessage(type: string, message: string, colorFn: (str: string) => string): string {\n    let formatted = ''\n\n    // 添加时间戳\n    if (this.timestamp) {\n      const timestamp = new Date().toISOString()\n      formatted += chalk.gray(`[${timestamp}] `)\n    }\n\n    // 添加前缀\n    if (this.prefix) {\n      formatted += chalk.gray(`[${this.prefix}] `)\n    }\n\n    // 添加类型\n    if (this.colors) {\n      formatted += colorFn(`[${type}] `)\n    } else {\n      formatted += `[${type}] `\n    }\n\n    // 添加消息\n    if (this.colors) {\n      formatted += colorFn(message)\n    } else {\n      formatted += message\n    }\n\n    return formatted\n  }\n\n  /**\n   * 创建进度条\n   */\n  private createProgressBar(percent: number, width: number = 20): string {\n    const filled = Math.round((percent / 100) * width)\n    const empty = width - filled\n    const bar = '█'.repeat(filled) + '░'.repeat(empty)\n    return this.colors ? chalk.cyan(bar) : bar\n  }\n}\n\n/**\n * 默认日志记录器实例\n */\nexport const logger = new Logger()\n\n/**\n * 创建日志记录器\n */\nexport function createLogger(options: LoggerOptions = {}): Logger {\n  return new Logger(options)\n}\n\n/**\n * 设置全局日志级别\n */\nexport function setLogLevel(level: LogLevel): void {\n  logger.setLevel(level)\n}\n\n/**\n * 设置全局静默模式\n */\nexport function setSilent(silent: boolean): void {\n  logger.setSilent(silent)\n}\n","/**\n * 配置管理器\n * \n * 负责配置文件的加载、验证、合并和监听\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport type {\n  BuilderConfig,\n  ConfigManagerOptions,\n  ConfigLoadOptions,\n  ConfigMergeOptions,\n  ConfigValidationOptions\n} from '../types/config'\nimport type { ValidationResult } from '../types/common'\nimport { configLoader } from '../utils/config/config-loader'\nimport { DEFAULT_BUILDER_CONFIG } from '../constants/defaults'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler, BuilderError } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 配置管理器类\n * \n * 提供配置文件的完整生命周期管理\n */\nexport class ConfigManager extends EventEmitter {\n  private logger: Logger\n  private errorHandler: ErrorHandler\n  private options: ConfigManagerOptions\n  private currentConfig?: BuilderConfig\n  private configWatcher?: () => void\n\n  constructor(options: ConfigManagerOptions = {}) {\n    super()\n\n    this.options = {\n      validateOnLoad: true,\n      freezeConfig: false,\n      ...options\n    }\n\n    this.logger = options.logger || new Logger()\n    this.errorHandler = new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 加载配置文件\n   */\n  async loadConfig(options: ConfigLoadOptions = {}): Promise<BuilderConfig> {\n    try {\n      const configPath = options.configFile || await this.findConfigFile()\n\n      let config: Partial<BuilderConfig> = {}\n\n      if (configPath) {\n        this.logger.info(`加载配置文件: ${configPath}`)\n        config = await configLoader.loadConfigFile(configPath)\n      } else {\n        this.logger.info('未找到配置文件，使用默认配置')\n        config = {}\n      }\n\n      // 合并默认配置\n      const mergedConfig = this.mergeConfigs(DEFAULT_BUILDER_CONFIG, config as BuilderConfig)\n\n      // 应用环境特定配置\n      if (options.applyEnvConfig && mergedConfig.env) {\n        const envConfig = this.getEnvConfig(mergedConfig)\n        if (envConfig) {\n          Object.assign(mergedConfig, envConfig)\n        }\n      }\n\n      // 验证配置\n      if (options.validate !== false && this.options.validateOnLoad) {\n        const validation = this.validateConfig(mergedConfig)\n        if (!validation.valid) {\n          throw new BuilderError(\n            ErrorCode.CONFIG_VALIDATION_ERROR,\n            `配置验证失败: ${validation.errors.join(', ')}`\n          )\n        }\n      }\n\n      // 冻结配置（如果启用）\n      if (this.options.freezeConfig) {\n        Object.freeze(mergedConfig)\n      }\n\n      this.currentConfig = mergedConfig\n\n      // 启动配置文件监听\n      if (this.options.watch && configPath) {\n        await this.startWatching(configPath)\n      }\n\n      this.emit('config:loaded', mergedConfig, configPath)\n\n      return mergedConfig\n\n    } catch (error) {\n      this.errorHandler.handle(error as Error, 'loadConfig')\n      throw error\n    }\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig, _options: ConfigValidationOptions = {}): ValidationResult {\n    const result: ValidationResult = {\n      valid: true,\n      errors: [],\n      warnings: []\n    }\n\n    try {\n      // 基础验证\n      if (!config.input) {\n        result.errors.push('缺少入口文件配置 (input)')\n      }\n\n      // 输出配置验证\n      if (config.output) {\n        if (!config.output.dir && !config.output.file) {\n          result.errors.push('输出配置必须指定 dir 或 file')\n        }\n      }\n\n      // 打包器验证\n      if (config.bundler && !['rollup', 'rolldown'].includes(config.bundler)) {\n        result.errors.push(`不支持的打包器: ${config.bundler}`)\n      }\n\n      // 格式验证\n      if (config.output?.format) {\n        const formats = Array.isArray(config.output.format)\n          ? config.output.format\n          : [config.output.format]\n\n        const validFormats = ['esm', 'cjs', 'umd', 'iife', 'css']\n        for (const format of formats) {\n          if (!validFormats.includes(format)) {\n            result.errors.push(`不支持的输出格式: ${format}`)\n          }\n        }\n      }\n\n      // 设置验证结果\n      result.valid = result.errors.length === 0\n\n    } catch (error) {\n      result.valid = false\n      result.errors.push(`配置验证异常: ${(error as Error).message}`)\n    }\n\n    return result\n  }\n\n  /**\n   * 合并配置\n   */\n  mergeConfigs(base: BuilderConfig, override: BuilderConfig, options: ConfigMergeOptions = {}): BuilderConfig {\n    const { deep = true, arrayMergeStrategy = 'replace' } = options\n\n    if (!deep) {\n      return { ...base, ...override }\n    }\n\n    const result = { ...base }\n\n    for (const [key, value] of Object.entries(override)) {\n      if (value === undefined) {\n        continue\n      }\n\n      if (!(key in result)) {\n        (result as any)[key] = value\n        continue\n      }\n\n      const baseValue = (result as any)[key]\n\n      if (Array.isArray(value) && Array.isArray(baseValue)) {\n        switch (arrayMergeStrategy) {\n          case 'concat':\n            (result as any)[key] = [...baseValue, ...value]\n            break\n          case 'unique':\n            (result as any)[key] = [...new Set([...baseValue, ...value])]\n            break\n          case 'replace':\n          default:\n            (result as any)[key] = value\n            break\n        }\n      } else if (\n        typeof value === 'object' &&\n        value !== null &&\n        typeof baseValue === 'object' &&\n        baseValue !== null\n      ) {\n        (result as any)[key] = this.mergeConfigs(baseValue, value, options)\n      } else {\n        (result as any)[key] = value\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * 获取当前配置\n   */\n  getCurrentConfig(): BuilderConfig | undefined {\n    return this.currentConfig\n  }\n\n  /**\n   * 查找配置文件\n   */\n  private async findConfigFile(): Promise<string | null> {\n    return configLoader.findConfigFile()\n  }\n\n  /**\n   * 获取环境特定配置\n   */\n  private getEnvConfig(config: BuilderConfig): Partial<BuilderConfig> | undefined {\n    const env = process.env.NODE_ENV || config.mode || 'production'\n    return config.env?.[env]\n  }\n\n  /**\n   * 启动配置文件监听\n   */\n  private async startWatching(configPath: string): Promise<void> {\n    if (this.configWatcher) {\n      this.configWatcher()\n    }\n\n    this.configWatcher = await configLoader.watchConfigFile(configPath, (newConfig) => {\n      this.logger.info('配置文件已更改，重新加载...')\n\n      try {\n        const mergedConfig = this.mergeConfigs(DEFAULT_BUILDER_CONFIG, newConfig)\n        this.currentConfig = mergedConfig\n\n        this.emit('config:change', mergedConfig, configPath)\n        this.logger.success('配置重新加载完成')\n      } catch (error) {\n        this.logger.error('配置重新加载失败:', error)\n        this.emit('config:error', error)\n      }\n    })\n  }\n\n  /**\n   * 停止监听\n   */\n  async dispose(): Promise<void> {\n    if (this.configWatcher) {\n      this.configWatcher()\n      this.configWatcher = undefined\n    }\n\n    this.removeAllListeners()\n  }\n}\n","/**\n * TypeScript 策略\n *\n * 为 TypeScript 库提供完整的构建策略，包括：\n * - TypeScript 编译和类型检查\n * - 声明文件生成\n * - 多格式输出支持\n * - Tree Shaking 优化\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\n/**\n * TypeScript 库构建策略\n */\nexport class TypeScriptStrategy implements ILibraryStrategy {\n  readonly name = 'typescript'\n  readonly supportedTypes: LibraryType[] = [LibraryType.TYPESCRIPT]\n  readonly priority = 10\n\n  /**\n   * 应用 TypeScript 策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    const outputConfig = this.buildOutputConfig(config)\n\n    // 计算入口：若用户未指定，则默认将 src 目录下的所有源码文件作为多入口\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: outputConfig,\n      plugins: this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.TYPESCRIPT\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.TYPESCRIPT,\n      output: {\n        format: ['esm', 'cjs', 'umd'],\n        sourcemap: true\n      },\n      typescript: {\n        declaration: true,\n        // declarationDir 将由 RollupAdapter 动态设置\n        target: 'ES2020',\n        module: 'ESNext',\n        strict: true,\n        skipLibCheck: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      }\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // TypeScript 插件\n    plugins.push({\n      name: '@rollup/plugin-typescript',\n      options: this.getTypeScriptOptions(config)\n    })\n\n    // Node 解析插件（优先浏览器分支，避免引入 Node 内置依赖）\n    plugins.push({\n      name: '@rollup/plugin-node-resolve',\n      options: {\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: '@rollup/plugin-commonjs',\n      options: {}\n    })\n\n    // JSON 插件（允许导入 JSON 文件）\n    plugins.push({\n      name: '@rollup/plugin-json',\n      options: {}\n    })\n\n    // 代码压缩插件（生产模式）\n    if (config.mode === 'production' && config.performance?.minify !== false) {\n      plugins.push({\n        name: '@rollup/plugin-terser',\n        options: {\n          compress: {\n            drop_console: true,\n            drop_debugger: true\n          },\n          format: {\n            comments: false\n          }\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      errors.push('TypeScript 策略需要指定入口文件')\n    } else if (typeof config.input === 'string') {\n      if (!config.input.endsWith('.ts') && !config.input.endsWith('.tsx')) {\n        warnings.push('入口文件不是 TypeScript 文件，建议使用 .ts 或 .tsx 扩展名')\n      }\n    }\n\n    // 检查输出配置\n    if (!config.output?.format) {\n      suggestions.push('建议指定输出格式，如 [\"esm\", \"cjs\"]')\n    }\n\n    // 检查 TypeScript 配置\n    if (!config.typescript?.declaration) {\n      suggestions.push('建议启用类型声明文件生成 (declaration: true)')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format) ? outputConfig.format : ['esm', 'cjs', 'umd']\n\n    // \u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\n    // \u0000d\u0000e\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\n    return {\n\n      format: formats, // \u0000d\u0000e\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\u0000f\n      sourcemap: outputConfig.sourcemap !== false,\n      exports: 'auto',\n      name: outputConfig.name,\n      globals: outputConfig.globals || {}\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private buildPlugins(config: BuilderConfig): any[] {\n    const plugins: any[] = []\n\n    // TypeScript 插件\n    plugins.push({\n      name: 'typescript',\n      plugin: async () => {\n        const typescript = await import('@rollup/plugin-typescript')\n        return typescript.default({\n          ...this.getTypeScriptOptions(config)\n        })\n      }\n    })\n\n    // Node 解析插件（优先浏览器分支）\n    plugins.push({\n      name: 'node-resolve',\n      plugin: async () => {\n        const nodeResolve = await import('@rollup/plugin-node-resolve')\n        return nodeResolve.nodeResolve({\n          preferBuiltins: false,\n          browser: true,\n          extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n        })\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: 'commonjs',\n      plugin: async () => {\n        const commonjs = await import('@rollup/plugin-commonjs')\n        return commonjs.default()\n      }\n    })\n\n    // JSON 插件\n    plugins.push({\n      name: 'json',\n      plugin: async () => {\n        const json = await import('@rollup/plugin-json')\n        return json.default()\n      }\n    })\n\n    // 代码压缩插件（生产模式）\n    if (config.mode === 'production' && config.performance?.minify !== false) {\n      plugins.push({\n        name: 'terser',\n        plugin: async () => {\n          const terser = await import('@rollup/plugin-terser')\n          return terser.default({\n            compress: {\n              drop_console: true,\n              drop_debugger: true\n            },\n            format: {\n              comments: false\n            }\n          })\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 获取 TypeScript 选项\n   */\n  private getTypeScriptOptions(config: BuilderConfig): any {\n    const tsConfig = config.typescript || {}\n    const options: any = {\n      target: tsConfig.target || 'ES2020',\n      module: tsConfig.module || 'ESNext',\n      strict: tsConfig.strict !== false,\n      skipLibCheck: tsConfig.skipLibCheck !== false,\n      esModuleInterop: true,\n      allowSyntheticDefaultImports: true,\n      moduleResolution: 'node',\n      resolveJsonModule: true,\n      isolatedModules: true,\n      noEmitOnError: false,\n      // 显式覆盖，避免上游 tsconfig 开启导致 TS5096\n      allowImportingTsExtensions: false,\n      exclude: ['**/*.test.ts', '**/*.spec.ts', 'node_modules/**']\n    }\n\n    // 只有在明确启用声明文件时才添加相关选项\n    if (tsConfig.declaration === true) {\n      options.declaration = true\n      // declarationDir 将由 RollupAdapter 动态设置，这里不设置固定值\n      if (tsConfig.declarationDir) {\n        options.declarationDir = tsConfig.declarationDir\n      }\n      if (tsConfig.declarationMap === true) {\n        options.declarationMap = true\n      }\n    }\n\n    return options\n  }\n\n\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n}\n","/**\n * 样式库构建策略\n *\n * 为样式库提供完整的构建策略，包括：\n * - Less/Sass 预处理器支持\n * - CSS 压缩和优化\n * - 自动添加浏览器前缀\n * - CSS 变量和主题支持\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\n/**\n * 样式库构建策略\n */\nexport class StyleStrategy implements ILibraryStrategy {\n  readonly name = 'style'\n  readonly supportedTypes: LibraryType[] = [LibraryType.STYLE]\n  readonly priority = 8\n\n  /**\n   * 应用样式策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: false, // CSS 不需要 Tree Shaking\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.STYLE\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.STYLE,\n      output: {\n        format: ['esm'], // 使用 ESM 格式，PostCSS 插件会提取 CSS\n        sourcemap: true\n      },\n      style: {\n        extract: true,\n        minimize: true,\n        autoprefixer: true,\n        modules: false,\n        preprocessor: {\n          less: {\n            enabled: true,\n            options: {\n              javascriptEnabled: true\n            }\n          },\n          sass: {\n            enabled: false\n          }\n        },\n        browserslist: [\n          '> 1%',\n          'last 2 versions',\n          'not dead'\n        ]\n      },\n      performance: {\n        treeshaking: false,\n        minify: true\n      }\n    }\n  }\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // PostCSS 插件\n    plugins.push({\n      name: 'postcss',\n      options: this.getPostCSSOptions(config)\n    })\n\n    // Less 插件\n    if (this.shouldUseLess(config)) {\n      plugins.push({\n        name: 'less',\n        options: this.getLessOptions(config)\n      })\n    }\n\n    // Sass 插件\n    if (this.shouldUseSass(config)) {\n      plugins.push({\n        name: 'sass',\n        options: this.getSassOptions(config)\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      errors.push('样式策略需要指定入口文件')\n    } else if (typeof config.input === 'string') {\n      const supportedExtensions = ['.css', '.less', '.scss', '.sass', '.styl']\n      const hasValidExtension = supportedExtensions.some(ext =>\n        config.input.toString().endsWith(ext)\n      )\n\n      if (!hasValidExtension) {\n        warnings.push('入口文件不是样式文件，建议使用 .css, .less, .scss 等扩展名')\n      }\n    }\n\n    // 检查输出配置\n    if (config.output?.format && !config.output.format.includes('css')) {\n      suggestions.push('样式库建议输出 CSS 格式')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      assetFileNames: '[name][extname]' // 确保 CSS 文件使用正确的名称\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private buildPlugins(config: BuilderConfig): any[] {\n    const plugins: any[] = []\n\n    // PostCSS 插件（用于处理 CSS）\n    plugins.push({\n      name: 'postcss',\n      plugin: async () => {\n        const postcss = await import('rollup-plugin-postcss')\n        const postCSSPlugins = await this.getPostCSSPlugins(config)\n        return postcss.default({\n          extract: true,\n          minimize: config.performance?.minify !== false,\n          sourceMap: config.output?.sourcemap !== false,\n          plugins: postCSSPlugins\n        })\n      }\n    })\n\n    return plugins\n  }\n\n  /**\n   * 获取 PostCSS 插件\n   */\n  private async getPostCSSPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    // Autoprefixer\n    if (config.style?.autoprefixer !== false) {\n      try {\n        const autoprefixer = await import('autoprefixer')\n        plugins.push(autoprefixer.default({\n          overrideBrowserslist: config.style?.browserslist || [\n            '> 1%',\n            'last 2 versions',\n            'not dead'\n          ]\n        }))\n      } catch (error) {\n        console.warn('Autoprefixer 未安装，跳过自动前缀功能')\n      }\n    }\n\n    return plugins\n  }\n\n  /**\n   * 获取 PostCSS 选项\n   */\n  private async getPostCSSOptions(config: BuilderConfig): Promise<any> {\n    return {\n      extract: config.style?.extract !== false,\n      minimize: config.style?.minimize !== false,\n      sourceMap: config.output?.sourcemap !== false,\n      modules: config.style?.modules || false,\n      plugins: await this.getPostCSSPlugins(config)\n    }\n  }\n\n  /**\n   * 获取 Less 选项\n   */\n  private getLessOptions(config: BuilderConfig): any {\n    const preprocessor = config.style?.preprocessor\n    const lessConfig = typeof preprocessor === 'object' ? preprocessor.less : undefined\n\n    return {\n      javascriptEnabled: lessConfig?.options?.javascriptEnabled !== false,\n      modifyVars: lessConfig?.options?.modifyVars || {},\n      ...lessConfig?.options\n    }\n  }\n\n  /**\n   * 获取 Sass 选项\n   */\n  private getSassOptions(config: BuilderConfig): any {\n    const preprocessor = config.style?.preprocessor\n    const sassConfig = typeof preprocessor === 'object' ? preprocessor.sass : undefined\n\n    return {\n      includePaths: ['node_modules'],\n      ...sassConfig?.options\n    }\n  }\n\n  /**\n   * 检查是否应该使用 Less\n   */\n  private shouldUseLess(config: BuilderConfig): boolean {\n    const preprocessor = config.style?.preprocessor\n\n    if (typeof preprocessor === 'object' && preprocessor.less?.enabled === false) {\n      return false\n    }\n\n    // 如果入口文件是 .less，自动启用\n    if (typeof config.input === 'string' && config.input.endsWith('.less')) {\n      return true\n    }\n\n    return typeof preprocessor === 'object' && preprocessor.less?.enabled === true\n  }\n\n  /**\n   * 检查是否应该使用 Sass\n   */\n  private shouldUseSass(config: BuilderConfig): boolean {\n    const preprocessor = config.style?.preprocessor\n\n    if (typeof preprocessor === 'object' && preprocessor.sass?.enabled === false) {\n      return false\n    }\n\n    // 如果入口文件是 .scss 或 .sass，自动启用\n    if (typeof config.input === 'string') {\n      if (config.input.endsWith('.scss') || config.input.endsWith('.sass')) {\n        return true\n      }\n    }\n\n    return typeof preprocessor === 'object' && preprocessor.sass?.enabled === true\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'EMPTY_BUNDLE') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有样式文件作为入口\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{css,less,scss,sass,styl}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.less'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n}\n","/**\n * Vue 3 组件库构建策略\n *\n * 为 Vue 3 组件库提供完整的构建策略，包括：\n * - Vue SFC 单文件组件编译\n * - TypeScript 支持\n * - 样式提取和处理\n * - 组件类型定义生成\n * - 插件式安装支持\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\n/**\n * Vue 3 组件库构建策略\n */\nexport class Vue3Strategy implements ILibraryStrategy {\n  readonly name = 'vue3'\n  readonly supportedTypes: LibraryType[] = [LibraryType.VUE3]\n  readonly priority = 10\n\n  /**\n   * 应用 Vue 3 策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: await this.buildPlugins(config),\n      external: this.buildExternals(config),\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.VUE3\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.VUE3,\n      output: {\n        format: ['esm', 'cjs'],\n        sourcemap: true\n      },\n      vue: {\n        version: 3,\n        jsx: {\n          enabled: true\n        },\n        template: {\n          precompile: true\n        }\n      },\n      typescript: {\n        declaration: true,\n        declarationDir: 'dist',\n        target: 'ES2020',\n        module: 'ESNext',\n        strict: true\n      },\n      style: {\n        extract: true,\n        minimize: true,\n        autoprefixer: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      },\n      external: ['vue']\n    }\n  }\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // Vue SFC 插件\n    plugins.push({\n      name: 'rollup-plugin-vue',\n      options: this.getVueOptions(config)\n    })\n\n    // TypeScript 插件\n    plugins.push({\n      name: '@rollup/plugin-typescript',\n      options: this.getTypeScriptOptions(config)\n    })\n\n    // Node 解析插件\n    plugins.push({\n      name: '@rollup/plugin-node-resolve',\n      options: {\n        preferBuiltins: false,\n        browser: true\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: '@rollup/plugin-commonjs',\n      options: {}\n    })\n\n    // 样式处理插件\n    if (config.style?.extract !== false) {\n      plugins.push({\n        name: 'rollup-plugin-postcss',\n        options: this.getPostCSSOptions(config)\n      })\n    }\n\n    // 代码压缩插件（生产模式）\n    if (config.mode === 'production' && config.performance?.minify !== false) {\n      plugins.push({\n        name: '@rollup/plugin-terser',\n        options: {\n          compress: {\n            drop_console: true,\n            drop_debugger: true\n          },\n          format: {\n            comments: false\n          }\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      errors.push('Vue 3 策略需要指定入口文件')\n    }\n\n    // 检查 Vue 版本\n    if (config.vue?.version && config.vue.version !== 3) {\n      warnings.push('当前策略针对 Vue 3 优化，建议使用 Vue 3')\n    }\n\n    // 检查外部依赖\n    if (Array.isArray(config.external) && !config.external.includes('vue')) {\n      suggestions.push('建议将 Vue 添加到外部依赖中以减少包体积')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      exports: 'named',\n      globals: {\n        vue: 'Vue',\n        ...outputConfig.globals\n      }\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    try {\n      // Node 解析插件（第一个）\n      const nodeResolve = await import('@rollup/plugin-node-resolve')\n      plugins.push(nodeResolve.default({\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx', '.vue']\n      }))\n\n      // Vue SFC 插件（使用 unplugin-vue，兼容 Rollup）\n      const { default: VuePlugin } = await import('unplugin-vue/rollup')\n      plugins.push(VuePlugin(this.getVueOptions(config)))\n\n      // 先用 TypeScript 插件处理纯 .ts 入口与模块（排除 Vue 虚拟模块）\n      const { default: tsPlugin } = await import('@rollup/plugin-typescript')\n      plugins.push({\n        name: 'typescript',\n        plugin: async () => tsPlugin({\n          ...this.getTypeScriptOptions(config),\n          include: ['src/**/*.ts', 'src/**/*.tsx'],\n          exclude: ['**/*.vue', '**/*.vue?*', 'node_modules/**'],\n          // 避免 @rollup/plugin-typescript 在缺失 rollup 顶层 sourcemap 时报错\n          sourceMap: config.output?.sourcemap !== false\n        } as any)\n      })\n\n      // 再用 Babel 去掉 TS 注解（特别是 Vue 虚拟模块）\n      const { default: babel } = await import('@rollup/plugin-babel')\n      plugins.push(babel({\n        babelrc: false,\n        configFile: false,\n        babelHelpers: 'bundled',\n        extensions: ['.ts', '.tsx', '.js', '.jsx'],\n        presets: [\n          ['@babel/preset-typescript', { allowDeclareFields: true }]\n        ],\n        // 仅处理脚本相关文件与 vue 的 script 虚拟模块\n        include: [\n          /\\.(ts|tsx|js|jsx)$/,\n          /\\?vue&type=script/,\n        ],\n        exclude: [\n          /\\?vue&type=style/,\n          /\\?vue&type=template/,\n          /\\.(css|less|scss|sass)$/\n        ]\n      }))\n\n      // 再用 esbuild 做转译与最小化（兼容 Vue 虚拟模块）\n      const { default: esbuild } = await import('rollup-plugin-esbuild')\n      plugins.push(esbuild({\n        include: /\\.(ts|tsx|js|jsx)(\\?|$)/,\n        exclude: [/node_modules/],\n        target: 'es2020',\n        jsx: 'preserve',\n        tsconfig: 'tsconfig.json',\n        minify: config.performance?.minify !== false,\n        sourceMap: config.output?.sourcemap !== false\n      }))\n\n      // CommonJS 插件\n      const commonjs = await import('@rollup/plugin-commonjs')\n      plugins.push(commonjs.default())\n\n      // 样式处理插件（接收 vue SFC 的 style 虚拟模块）\n      const postcss = await import('rollup-plugin-postcss')\n      plugins.push(postcss.default({\n        ...this.getPostCSSOptions(config),\n        include: [\n          /\\.(css|less|scss|sass)$/,\n          /\\?vue&type=style/\n        ]\n      }))\n    } catch (error) {\n      console.error('插件加载失败:', error)\n    }\n\n    return plugins\n  }\n\n  /**\n   * 构建外部依赖配置\n   */\n  private buildExternals(config: BuilderConfig): string[] {\n    let externals: string[] = []\n\n    if (Array.isArray(config.external)) {\n      externals = [...config.external]\n    } else if (typeof config.external === 'function') {\n      // 如果是函数，我们只能添加 Vue 作为默认外部依赖\n      externals = ['vue']\n    } else {\n      externals = []\n    }\n\n    // 确保 Vue 是外部依赖\n    if (!externals.includes('vue')) {\n      externals.push('vue')\n    }\n\n    return externals\n  }\n\n  /**\n   * 获取 Vue 选项\n   */\n  private getVueOptions(config: BuilderConfig): any {\n    const vueConfig = config.vue || {}\n\n    return {\n      include: /\\.vue$/,\n      template: {\n        compilerOptions: {\n          isCustomElement: (tag: string) => tag.startsWith('ld-')\n        },\n        ...vueConfig.template\n      },\n      ...vueConfig\n    }\n  }\n\n  /**\n   * 获取 TypeScript 选项\n   */\n  private getTypeScriptOptions(config: BuilderConfig): any {\n    const tsConfig = config.typescript || {}\n\n    return {\n      target: tsConfig.target || 'ES2020',\n      module: tsConfig.module || 'ESNext',\n      declaration: tsConfig.declaration !== false,\n      // declarationDir 将由 RollupAdapter 动态设置\n      strict: tsConfig.strict !== false,\n      esModuleInterop: true,\n      allowSyntheticDefaultImports: true,\n      skipLibCheck: true,\n      moduleResolution: 'node',\n      resolveJsonModule: true,\n      jsx: 'preserve',\n      ...tsConfig\n    }\n  }\n\n  /**\n   * 获取 PostCSS 选项\n   */\n  private getPostCSSOptions(config: BuilderConfig): any {\n    return {\n      extract: config.style?.extract !== false,\n      minimize: config.style?.minimize !== false,\n      sourceMap: config.output?.sourcemap !== false,\n      modules: config.style?.modules || false\n    }\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx,vue}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n}\n","/**\n * React 策略\n * 使用 esbuild 处理 TS/TSX，postcss 处理样式，rollup 输出 ESM/CJS\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\nexport class ReactStrategy implements ILibraryStrategy {\n  readonly name = 'react'\n  readonly supportedTypes = [LibraryType.REACT]\n  readonly priority = 10\n\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    return {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: await this.buildPlugins(config),\n      external: [...(config.external || []), 'react', 'react-dom'],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n  }\n\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.REACT\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.REACT,\n      output: { format: ['esm', 'cjs'], sourcemap: true },\n      performance: { treeshaking: true, minify: true }\n    }\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] { return [] }\n  validateConfig(_config: BuilderConfig): any { return { valid: true, errors: [], warnings: [], suggestions: [] } }\n\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    // Node resolve\n    const nodeResolve = await import('@rollup/plugin-node-resolve')\n    plugins.push(nodeResolve.default({ browser: true, extensions: ['.mjs', '.js', '.json', '.ts', '.tsx'] }))\n\n    // CommonJS\n    const commonjs = await import('@rollup/plugin-commonjs')\n    plugins.push(commonjs.default())\n\n    // TypeScript for DTS only\n    const ts = await import('@rollup/plugin-typescript')\n    plugins.push({\n      name: 'typescript',\n      plugin: async () => ts.default({\n        tsconfig: 'tsconfig.json',\n        declaration: true,\n        emitDeclarationOnly: true,\n        // declarationDir 将由 RollupAdapter 动态设置\n        jsx: 'react-jsx'\n      } as any)\n    })\n\n    // PostCSS (optional)\n    if (config.style?.extract !== false) {\n      const postcss = await import('rollup-plugin-postcss')\n      plugins.push(postcss.default({ extract: true, minimize: config.performance?.minify !== false }))\n    }\n\n    // esbuild for TS/TSX/JSX\n    const esbuild = await import('rollup-plugin-esbuild')\n    plugins.push(esbuild.default({\n      include: /\\.(tsx?|jsx?)$/, exclude: [/node_modules/], target: 'es2020',\n      jsx: 'automatic', jsxImportSource: 'react', tsconfig: 'tsconfig.json',\n      sourceMap: config.output?.sourcemap !== false, minify: config.performance?.minify !== false\n    }))\n\n    return plugins\n  }\n\n  private buildOutputConfig(config: BuilderConfig): any {\n    const out = config.output || {}\n    const formats = Array.isArray(out.format) ? out.format : ['esm', 'cjs']\n    return { dir: out.dir || 'dist', format: formats, sourcemap: out.sourcemap !== false, exports: 'auto' }\n  }\n\n  private createWarningHandler() {\n    return (warning: any) => { if (warning.code === 'THIS_IS_UNDEFINED' || warning.code === 'CIRCULAR_DEPENDENCY') return; console.warn(`Warning: ${warning.message}`) }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n}\n\n","/**\n * 混合策略\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\nexport class MixedStrategy implements ILibraryStrategy {\n  readonly name = 'mixed'\n  readonly supportedTypes: LibraryType[] = [LibraryType.MIXED]\n  readonly priority = 5\n\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: await this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.MIXED\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.MIXED,\n      output: {\n        format: ['esm', 'cjs'],\n        sourcemap: true\n      },\n      typescript: {\n        declaration: true\n      },\n      style: {\n        extract: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      }\n    }\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] {\n    return []\n  }\n\n  validateConfig(_config: BuilderConfig): any {\n    return {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: []\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx,vue,css,less,scss,sass}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      exports: 'named'\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    try {\n      // Node resolve\n      const nodeResolve = await import('@rollup/plugin-node-resolve')\n      plugins.push(nodeResolve.default({\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx', '.vue', '.css', '.less', '.scss']\n      }))\n\n      // CommonJS\n      const commonjs = await import('@rollup/plugin-commonjs')\n      plugins.push(commonjs.default())\n\n      // TypeScript\n      const ts = await import('@rollup/plugin-typescript')\n      plugins.push({\n        name: 'typescript',\n        plugin: async () => ts.default({\n          tsconfig: 'tsconfig.json',\n          declaration: config.typescript?.declaration !== false,\n          // declarationDir 将由 RollupAdapter 动态设置\n          target: config.typescript?.target || 'ES2020',\n          module: config.typescript?.module || 'ESNext',\n          strict: config.typescript?.strict !== false,\n          skipLibCheck: true,\n          sourceMap: config.output?.sourcemap !== false\n        } as any)\n      })\n\n      // PostCSS for styles\n      if (config.style?.extract !== false) {\n        const postcss = await import('rollup-plugin-postcss')\n        plugins.push(postcss.default({\n          extract: true,\n          minimize: config.performance?.minify !== false,\n          sourceMap: config.output?.sourcemap !== false,\n          modules: config.style?.modules || false\n        }))\n      }\n\n    } catch (error) {\n      console.error('插件加载失败:', error)\n    }\n\n    return plugins\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n}\n","/**\n * 策略管理器\n * \n * 负责管理不同库类型的构建策略\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type {\n  ILibraryStrategy,\n  StrategyManagerOptions,\n  StrategyDetectionResult,\n  StrategyApplicationResult\n} from '../types/strategy'\nimport { LibraryType } from '../types/library'\nimport type { BuilderConfig } from '../types/config'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler, BuilderError } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n// 导入具体策略实现\nimport { TypeScriptStrategy } from '../strategies/typescript/TypeScriptStrategy'\nimport { StyleStrategy } from '../strategies/style/StyleStrategy'\nimport { Vue3Strategy } from '../strategies/vue3/Vue3Strategy'\nimport { ReactStrategy } from '../strategies/react/ReactStrategy'\nimport { MixedStrategy } from '../strategies/mixed/MixedStrategy'\n\n/**\n * 基础策略实现（临时）\n */\nclass BaseStrategy implements ILibraryStrategy {\n  readonly name: string\n  readonly supportedTypes: LibraryType[]\n  readonly priority: number\n\n  constructor(name: string, supportedTypes: LibraryType[], priority: number = 1) {\n    this.name = name\n    this.supportedTypes = supportedTypes\n    this.priority = priority\n  }\n\n  async applyStrategy(config: BuilderConfig): Promise<any> {\n    // 基础实现，返回原配置\n    return config\n  }\n\n  isApplicable(_config: BuilderConfig): boolean {\n    return this.supportedTypes.includes(_config.libraryType as LibraryType)\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {}\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] {\n    return []\n  }\n\n  validateConfig(_config: BuilderConfig): any {\n    return {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: []\n    }\n  }\n}\n\n/**\n * 策略管理器类\n */\nexport class StrategyManager {\n  private logger: Logger\n  private errorHandler: ErrorHandler\n  private strategies: Map<LibraryType, ILibraryStrategy> = new Map()\n\n  constructor(_options: StrategyManagerOptions = {}) {\n    this.logger = (_options as any).logger || new Logger()\n    this.errorHandler = new ErrorHandler({ logger: this.logger })\n\n    // 注册默认策略\n    this.registerDefaultStrategies()\n  }\n\n  /**\n   * 注册策略\n   */\n  registerStrategy(strategy: ILibraryStrategy): void {\n    for (const type of strategy.supportedTypes) {\n      this.strategies.set(type, strategy)\n    }\n\n    this.logger.debug(`注册策略: ${strategy.name}`)\n  }\n\n  /**\n   * 获取策略\n   */\n  getStrategy(libraryType: LibraryType): ILibraryStrategy {\n    const strategy = this.strategies.get(libraryType)\n\n    if (!strategy) {\n      throw new BuilderError(\n        ErrorCode.CONFIG_VALIDATION_ERROR,\n        `未找到库类型 ${libraryType} 的策略`\n      )\n    }\n\n    return strategy\n  }\n\n  /**\n   * 检测最佳策略\n   */\n  async detectStrategy(_projectPath: string): Promise<StrategyDetectionResult> {\n    // TODO: 实现策略检测逻辑\n    // 这里先返回一个默认结果\n    return {\n      strategy: LibraryType.TYPESCRIPT,\n      confidence: 0.8,\n      evidence: [],\n      alternatives: []\n    }\n  }\n\n  /**\n   * 应用策略\n   */\n  async applyStrategy(\n    libraryType: LibraryType,\n    config: BuilderConfig\n  ): Promise<StrategyApplicationResult> {\n    const startTime = Date.now()\n\n    try {\n      const strategy = this.getStrategy(libraryType)\n\n      // 验证策略是否适用\n      if (!strategy.isApplicable(config)) {\n        throw new BuilderError(\n          ErrorCode.CONFIG_VALIDATION_ERROR,\n          `策略 ${strategy.name} 不适用于当前配置`\n        )\n      }\n\n      // 应用策略\n      const transformedConfig = await strategy.applyStrategy(config)\n      const plugins = strategy.getRecommendedPlugins(config)\n\n      const duration = Date.now() - startTime\n\n      return {\n        strategy,\n        config: transformedConfig,\n        plugins,\n        duration,\n        warnings: [],\n        optimizations: []\n      }\n\n    } catch (error) {\n      this.errorHandler.handle(error as Error, 'applyStrategy')\n      throw error\n    }\n  }\n\n  /**\n   * 获取所有已注册的策略\n   */\n  getAllStrategies(): ILibraryStrategy[] {\n    return Array.from(this.strategies.values())\n  }\n\n  /**\n   * 获取支持的库类型\n   */\n  getSupportedTypes(): LibraryType[] {\n    return Array.from(this.strategies.keys())\n  }\n\n  /**\n   * 注册默认策略\n   */\n  private registerDefaultStrategies(): void {\n    // TypeScript 策略\n    this.registerStrategy(new TypeScriptStrategy())\n\n    // Vue3 策略\n    this.registerStrategy(new Vue3Strategy())\n\n    // Vue2 策略\n    this.registerStrategy(new BaseStrategy(\n      'vue2',\n      [LibraryType.VUE2],\n      10\n    ))\n\n    // 样式策略\n    this.registerStrategy(new StyleStrategy())\n\n    // React 策略\n    this.registerStrategy(new ReactStrategy())\n\n    // 混合策略\n    this.registerStrategy(new MixedStrategy())\n  }\n}\n","/**\n * 插件管理器\n * \n * 负责插件的加载、管理和执行\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport type {\n  UnifiedPlugin,\n  PluginManagerOptions,\n  PluginLoadResult,\n  PluginPerformanceStats\n} from '../types/plugin'\nimport { Logger } from '../utils/logger'\nimport { BuilderError } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 插件管理器类\n */\nexport class PluginManager extends EventEmitter {\n  private logger: Logger\n  private options: PluginManagerOptions\n  private plugins: Map<string, UnifiedPlugin> = new Map()\n  private performanceStats: Map<string, PluginPerformanceStats> = new Map()\n\n  constructor(options: PluginManagerOptions = {}) {\n    super()\n\n    this.options = {\n      cache: true,\n      hotReload: false,\n      timeout: 30000,\n      maxPlugins: 100,\n      whitelist: [],\n      blacklist: [],\n      ...options\n    }\n\n    this.logger = (options as any).logger || new Logger()\n  }\n\n  /**\n   * 加载插件\n   */\n  async loadPlugin(plugin: UnifiedPlugin): Promise<PluginLoadResult> {\n    const startTime = Date.now()\n\n    try {\n      // 检查插件是否已加载\n      if (this.plugins.has(plugin.name)) {\n        this.logger.warn(`插件 ${plugin.name} 已存在，将被覆盖`)\n      }\n\n      // 检查黑名单\n      if (this.options.blacklist?.includes(plugin.name)) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `插件 ${plugin.name} 在黑名单中`\n        )\n      }\n\n      // 检查白名单\n      if (this.options.whitelist?.length && !this.options.whitelist.includes(plugin.name)) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `插件 ${plugin.name} 不在白名单中`\n        )\n      }\n\n      // 检查插件数量限制\n      if (this.plugins.size >= (this.options.maxPlugins || 100)) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `插件数量超过限制 (${this.options.maxPlugins})`\n        )\n      }\n\n      // 验证插件\n      this.validatePlugin(plugin)\n\n      // 初始化插件\n      if (plugin.onInit) {\n        await plugin.onInit({\n          buildId: 'init',\n          pluginName: plugin.name,\n          cwd: process.cwd(),\n          mode: 'production',\n          platform: 'browser',\n          env: process.env as any,\n          config: {},\n          cacheDir: '',\n          tempDir: '',\n          logger: this.logger,\n          performanceMonitor: null as any\n        })\n      }\n\n      // 注册插件\n      this.plugins.set(plugin.name, plugin)\n\n      const loadTime = Date.now() - startTime\n\n      // 初始化性能统计\n      this.performanceStats.set(plugin.name, {\n        name: plugin.name,\n        totalTime: 0,\n        callCount: 0,\n        averageTime: 0,\n        maxTime: 0,\n        hookPerformance: {}\n      })\n\n      this.logger.success(`插件 ${plugin.name} 加载成功 (${loadTime}ms)`)\n\n      return {\n        plugin,\n        loadTime,\n        success: true\n      }\n\n    } catch (error) {\n      const loadTime = Date.now() - startTime\n\n      this.logger.error(`插件 ${plugin.name} 加载失败:`, error)\n\n      return {\n        plugin,\n        loadTime,\n        success: false,\n        error: error as Error\n      }\n    }\n  }\n\n  /**\n   * 批量加载插件\n   */\n  async loadPlugins(plugins: UnifiedPlugin[]): Promise<PluginLoadResult[]> {\n    const results: PluginLoadResult[] = []\n\n    for (const plugin of plugins) {\n      const result = await this.loadPlugin(plugin)\n      results.push(result)\n\n      // 如果加载失败且不是可选插件，抛出错误\n      if (!result.success && !plugin.enabled) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_LOAD_ERROR,\n          `必需插件 ${plugin.name} 加载失败`,\n          { cause: result.error }\n        )\n      }\n    }\n\n    return results\n  }\n\n  /**\n   * 获取插件\n   */\n  getPlugin(name: string): UnifiedPlugin | undefined {\n    return this.plugins.get(name)\n  }\n\n  /**\n   * 获取所有插件\n   */\n  getAllPlugins(): UnifiedPlugin[] {\n    return Array.from(this.plugins.values())\n  }\n\n  /**\n   * 移除插件\n   */\n  async removePlugin(name: string): Promise<boolean> {\n    const plugin = this.plugins.get(name)\n\n    if (!plugin) {\n      return false\n    }\n\n    try {\n      // 调用插件销毁钩子\n      if (plugin.onDestroy) {\n        await plugin.onDestroy({\n          buildId: 'destroy',\n          pluginName: plugin.name,\n          cwd: process.cwd(),\n          mode: 'production',\n          platform: 'browser',\n          env: process.env as any,\n          config: {},\n          cacheDir: '',\n          tempDir: '',\n          logger: this.logger,\n          performanceMonitor: null as any\n        })\n      }\n\n      this.plugins.delete(name)\n      this.performanceStats.delete(name)\n\n      this.logger.info(`插件 ${name} 已移除`)\n      return true\n\n    } catch (error) {\n      this.logger.error(`移除插件 ${name} 失败:`, error)\n      return false\n    }\n  }\n\n  /**\n   * 清空所有插件\n   */\n  async clear(): Promise<void> {\n    const pluginNames = Array.from(this.plugins.keys())\n\n    for (const name of pluginNames) {\n      await this.removePlugin(name)\n    }\n  }\n\n  /**\n   * 获取插件性能统计\n   */\n  getPerformanceStats(name?: string): PluginPerformanceStats | PluginPerformanceStats[] {\n    if (name) {\n      const stats = this.performanceStats.get(name)\n      if (!stats) {\n        throw new BuilderError(\n          ErrorCode.PLUGIN_NOT_FOUND,\n          `插件 ${name} 不存在`\n        )\n      }\n      return stats\n    }\n\n    return Array.from(this.performanceStats.values())\n  }\n\n  /**\n   * 验证插件\n   */\n  private validatePlugin(plugin: UnifiedPlugin): void {\n    if (!plugin.name) {\n      throw new BuilderError(\n        ErrorCode.PLUGIN_LOAD_ERROR,\n        '插件必须有名称'\n      )\n    }\n\n    if (typeof plugin.name !== 'string') {\n      throw new BuilderError(\n        ErrorCode.PLUGIN_LOAD_ERROR,\n        '插件名称必须是字符串'\n      )\n    }\n\n    // 检查插件依赖\n    if (plugin.dependencies) {\n      for (const dep of plugin.dependencies) {\n        if (!this.plugins.has(dep)) {\n          throw new BuilderError(\n            ErrorCode.PLUGIN_DEPENDENCY_ERROR,\n            `插件 ${plugin.name} 依赖的插件 ${dep} 未找到`\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 销毁资源\n   */\n  async dispose(): Promise<void> {\n    await this.clear()\n    this.removeAllListeners()\n  }\n}\n","/**\n * 库类型相关常量\n */\n\nimport { LibraryType } from '../types/library'\n\n/**\n * 库类型检测模式\n */\nexport const LIBRARY_TYPE_PATTERNS = {\n  [LibraryType.TYPESCRIPT]: {\n    // TypeScript 库检测模式\n    files: [\n      'src/**/*.ts',\n      'src/**/*.tsx',\n      'lib/**/*.ts',\n      'lib/**/*.tsx',\n      'index.ts',\n      'main.ts'\n    ],\n    dependencies: [\n      'typescript',\n      '@types/node'\n    ],\n    configs: [\n      'tsconfig.json',\n      'tsconfig.build.json'\n    ],\n    packageJsonFields: [\n      'types',\n      'typings'\n    ],\n    weight: 0.8\n  },\n\n  [LibraryType.STYLE]: {\n    // 样式库检测模式\n    files: [\n      'src/**/*.css',\n      'src/**/*.less',\n      'src/**/*.scss',\n      'src/**/*.sass',\n      'src/**/*.styl',\n      'lib/**/*.css',\n      'styles/**/*'\n    ],\n    dependencies: [\n      'less',\n      'sass',\n      'stylus',\n      'postcss'\n    ],\n    configs: [\n      'postcss.config.js',\n      '.stylelintrc'\n    ],\n    packageJsonFields: [\n      'style',\n      'sass',\n      'less'\n    ],\n    weight: 0.9\n  },\n\n  [LibraryType.VUE2]: {\n    // Vue2 组件库检测模式\n    files: [\n      'src/**/*.vue',\n      'lib/**/*.vue',\n      'components/**/*.vue'\n    ],\n    dependencies: [\n      'vue@^2',\n      '@vue/composition-api',\n      'vue-template-compiler'\n    ],\n    devDependencies: [\n      '@vue/cli-service',\n      'vue-loader'\n    ],\n    configs: [\n      'vue.config.js'\n    ],\n    packageJsonFields: [],\n    weight: 0.95\n  },\n\n  [LibraryType.VUE3]: {\n    // Vue3 组件库检测模式\n    files: [\n      'src/**/*.vue',\n      'lib/**/*.vue',\n      'components/**/*.vue'\n    ],\n    dependencies: [\n      'vue@^3',\n      '@vue/runtime-core',\n      '@vue/runtime-dom'\n    ],\n    devDependencies: [\n      '@vitejs/plugin-vue',\n      '@vue/compiler-sfc'\n    ],\n    configs: [\n      'vite.config.ts',\n      'vite.config.js'\n    ],\n    packageJsonFields: [],\n    weight: 0.95\n  },\n\n  [LibraryType.REACT]: {\n    // React 组件库检测模式\n    files: [\n      'src/**/*.tsx',\n      'src/**/*.jsx',\n      'lib/**/*.tsx',\n      'components/**/*.tsx'\n    ],\n    dependencies: [\n      'react',\n      'react-dom'\n    ],\n    devDependencies: [\n      '@vitejs/plugin-react'\n    ],\n    configs: [\n      'vite.config.ts',\n      'vite.config.js'\n    ],\n    packageJsonFields: [],\n    weight: 0.95\n  },\n\n  [LibraryType.MIXED]: {\n    // 混合库检测模式（多种类型混合）\n    files: [\n      'src/**/*.{ts,tsx,vue,css,less,scss}'\n    ],\n    dependencies: [],\n    configs: [],\n    packageJsonFields: [],\n    weight: 0.6 // 较低权重，作为兜底选项\n  }\n} as const\n\n/**\n * 库类型描述\n */\nexport const LIBRARY_TYPE_DESCRIPTIONS = {\n  [LibraryType.TYPESCRIPT]: 'TypeScript 库 - 使用 TypeScript 编写的库，支持类型声明和现代 JavaScript 特性',\n  [LibraryType.STYLE]: '样式库 - 包含 CSS、Less、Sass 等样式文件的库',\n  [LibraryType.VUE2]: 'Vue2 组件库 - 基于 Vue 2.x 的组件库',\n  [LibraryType.VUE3]: 'Vue3 组件库 - 基于 Vue 3.x 的组件库，支持 Composition API',\n  [LibraryType.REACT]: 'React 组件库 - 基于 React 18+ 的组件库，支持 JSX/TSX 与 Hooks',\n  [LibraryType.MIXED]: '混合库 - 包含多种类型文件的复合库'\n} as const\n\n/**\n * 库类型推荐配置\n */\nexport const LIBRARY_TYPE_RECOMMENDED_CONFIG = {\n  [LibraryType.TYPESCRIPT]: {\n    output: {\n      format: ['esm', 'cjs'],\n      sourcemap: true\n    },\n    typescript: {\n      declaration: true,\n      isolatedDeclarations: true\n    },\n    external: [],\n    bundleless: false\n  },\n\n  [LibraryType.STYLE]: {\n    output: {\n      format: ['esm'],\n      sourcemap: false\n    },\n    style: {\n      extract: true,\n      minimize: true,\n      autoprefixer: true\n    },\n    external: [],\n    bundleless: true\n  },\n\n  [LibraryType.VUE2]: {\n    output: {\n      format: ['esm', 'cjs', 'umd'],\n      sourcemap: true\n    },\n    vue: {\n      version: 2,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    bundleless: false\n  },\n\n  [LibraryType.VUE3]: {\n    output: {\n      format: ['esm', 'cjs', 'umd'],\n      sourcemap: true\n    },\n    vue: {\n      version: 3,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    bundleless: false\n  },\n\n  [LibraryType.REACT]: {\n    output: {\n      format: ['esm', 'cjs'],\n      sourcemap: true\n    },\n    external: ['react', 'react-dom'],\n    bundleless: false\n  },\n\n  [LibraryType.MIXED]: {\n    output: {\n      format: ['esm', 'cjs'],\n      sourcemap: true\n    },\n    typescript: {\n      declaration: true\n    },\n    style: {\n      extract: true\n    },\n    external: [],\n    bundleless: false\n  }\n} as const\n\n/**\n * 库类型优先级\n */\nexport const LIBRARY_TYPE_PRIORITY = {\n  [LibraryType.VUE2]: 10,\n  [LibraryType.VUE3]: 10,\n  [LibraryType.REACT]: 10,\n  [LibraryType.STYLE]: 8,\n  [LibraryType.TYPESCRIPT]: 6,\n  [LibraryType.MIXED]: 2\n} as const\n\n/**\n * 库类型兼容性\n */\nexport const LIBRARY_TYPE_COMPATIBILITY = {\n  [LibraryType.TYPESCRIPT]: {\n    rollup: 'excellent',\n    rolldown: 'excellent',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: true\n  },\n\n  [LibraryType.STYLE]: {\n    rollup: 'good',\n    rolldown: 'good',\n    treeshaking: false,\n    codeSplitting: false,\n    bundleless: true\n  },\n\n  [LibraryType.VUE2]: {\n    rollup: 'excellent',\n    rolldown: 'good',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: false\n  },\n\n  [LibraryType.VUE3]: {\n    rollup: 'excellent',\n    rolldown: 'excellent',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: false\n  },\n\n  [LibraryType.MIXED]: {\n    rollup: 'good',\n    rolldown: 'good',\n    treeshaking: true,\n    codeSplitting: true,\n    bundleless: false\n  }\n} as const\n\n/**\n * 库类型所需插件\n */\nexport const LIBRARY_TYPE_PLUGINS = {\n  [LibraryType.TYPESCRIPT]: [\n    'typescript',\n    'dts'\n  ],\n\n  [LibraryType.STYLE]: [\n    'postcss',\n    'less',\n    'sass',\n    'stylus'\n  ],\n\n  [LibraryType.VUE2]: [\n    'vue2',\n    'vue-jsx',\n    'typescript',\n    'postcss'\n  ],\n\n  [LibraryType.VUE3]: [\n    'vue3',\n    'vue-jsx',\n    'typescript',\n    'postcss'\n  ],\n\n  [LibraryType.MIXED]: [\n    'typescript',\n    'vue3',\n    'postcss',\n    'dts'\n  ]\n} as const\n\n/**\n * 库类型检测权重\n */\nexport const DETECTION_WEIGHTS = {\n  // 文件模式权重\n  files: 0.4,\n\n  // 依赖权重\n  dependencies: 0.3,\n\n  // 配置文件权重\n  configs: 0.2,\n\n  // package.json 字段权重\n  packageJsonFields: 0.1\n} as const\n\n/**\n * 最小置信度阈值\n */\nexport const MIN_CONFIDENCE_THRESHOLD = 0.6\n\n/**\n * 库类型检测缓存配置\n */\nexport const DETECTION_CACHE_CONFIG = {\n  enabled: true,\n  ttl: 5 * 60 * 1000, // 5 minutes\n  maxSize: 100\n} as const\n\n/**\n * 库类型特定的文件扩展名\n */\nexport const LIBRARY_TYPE_EXTENSIONS = {\n  [LibraryType.TYPESCRIPT]: ['.ts', '.tsx', '.d.ts'],\n  [LibraryType.STYLE]: ['.css', '.less', '.scss', '.sass', '.styl'],\n  [LibraryType.VUE2]: ['.vue', '.ts', '.tsx', '.js', '.jsx'],\n  [LibraryType.VUE3]: ['.vue', '.ts', '.tsx', '.js', '.jsx'],\n  [LibraryType.MIXED]: ['.ts', '.tsx', '.vue', '.css', '.less', '.scss', '.sass']\n} as const\n\n/**\n * 库类型排除模式\n */\nexport const LIBRARY_TYPE_EXCLUDE_PATTERNS = {\n  common: [\n    'node_modules/**',\n    'dist/**',\n    'build/**',\n    '**/*.test.*',\n    '**/*.spec.*',\n    '**/*.d.ts'\n  ],\n\n  [LibraryType.TYPESCRIPT]: [\n    '**/*.js',\n    '**/*.jsx'\n  ],\n\n  [LibraryType.STYLE]: [\n    '**/*.ts',\n    '**/*.tsx',\n    '**/*.js',\n    '**/*.jsx',\n    '**/*.vue'\n  ],\n\n  [LibraryType.VUE2]: [],\n\n  [LibraryType.VUE3]: [],\n\n  [LibraryType.MIXED]: []\n} as const\n","/**\n * 库类型检测器\n * \n * 负责自动检测项目的库类型\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport path from 'path'\nimport {\n  LibraryType,\n  LibraryDetectionResult\n} from '../types/library'\nimport type { DetectionEvidence } from '../types/strategy'\nimport { LIBRARY_TYPE_PATTERNS, LIBRARY_TYPE_PRIORITY } from '../constants/library-types'\nimport { findFiles, exists, readFile } from '../utils/file-system'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\n\n/**\n * 库类型检测器选项\n */\nexport interface LibraryDetectorOptions {\n  logger?: Logger\n  confidence?: number\n  cache?: boolean\n}\n\n/**\n * 库类型检测器类\n */\nexport class LibraryDetector {\n  private logger: Logger\n  private errorHandler: ErrorHandler\n  private options: LibraryDetectorOptions\n\n  constructor(options: LibraryDetectorOptions = {}) {\n    this.options = {\n      confidence: 0.6,\n      cache: true,\n      ...options\n    }\n\n    this.logger = options.logger || new Logger()\n    this.errorHandler = new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 检测库类型\n   */\n  async detect(projectPath: string): Promise<LibraryDetectionResult> {\n    try {\n      this.logger.info(`开始检测项目类型: ${projectPath}`)\n\n      const scores: Record<LibraryType, number> = {\n        typescript: 0,\n        style: 0,\n        vue2: 0,\n        vue3: 0,\n        react: 0,\n        mixed: 0\n      }\n\n      const evidence: Record<LibraryType, DetectionEvidence[]> = {\n        typescript: [],\n        style: [],\n        vue2: [],\n        vue3: [],\n        react: [],\n        mixed: []\n      }\n\n      // 检测文件模式\n      await this.detectFilePatterns(projectPath, scores, evidence)\n\n      // 检测依赖\n      await this.detectDependencies(projectPath, scores, evidence)\n\n      // 检测配置文件\n      await this.detectConfigFiles(projectPath, scores, evidence)\n\n      // 检测 package.json 字段\n      await this.detectPackageJsonFields(projectPath, scores, evidence)\n\n      // 计算最终分数\n      const finalScores = this.calculateFinalScores(scores)\n\n      // 找到最高分的类型\n      const detectedType = this.getBestMatch(finalScores)\n      const confidence = finalScores[detectedType]\n\n      const result: LibraryDetectionResult = {\n        type: detectedType,\n        confidence,\n        evidence: evidence[detectedType]\n      }\n\n      this.logger.success(`检测完成: ${detectedType} (置信度: ${(confidence * 100).toFixed(1)}%)`)\n\n      return result\n\n    } catch (error) {\n      this.errorHandler.handle(error as Error, 'detect')\n\n      // 返回默认结果\n      return {\n        type: LibraryType.TYPESCRIPT,\n        confidence: 0.5,\n        evidence: []\n      }\n    }\n  }\n\n  /**\n   * 检测文件模式\n   */\n  private async detectFilePatterns(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n      const libraryType = type as LibraryType\n\n      try {\n        const files = await findFiles([...pattern.files], {\n          cwd: projectPath,\n          ignore: ['node_modules/**', 'dist/**', '**/*.test.*', '**/*.spec.*']\n        })\n\n        if (files.length > 0) {\n          const score = Math.min(files.length * 0.1, 1) * pattern.weight\n          scores[libraryType] += score\n\n          evidence[libraryType].push({\n            type: 'file',\n            description: `找到 ${files.length} 个 ${libraryType} 文件 (模式: ${pattern.files.join(', ')})`,\n            weight: score,\n            source: files.slice(0, 3).join(', ')\n          })\n        }\n      } catch (error) {\n        this.logger.debug(`检测 ${libraryType} 文件模式失败:`, error)\n      }\n    }\n  }\n\n  /**\n   * 检测依赖\n   */\n  private async detectDependencies(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    try {\n      const packageJsonPath = path.join(projectPath, 'package.json')\n\n      if (await exists(packageJsonPath)) {\n        const packageContent = await readFile(packageJsonPath, 'utf-8')\n        const packageJson = JSON.parse(packageContent)\n\n        const allDeps = {\n          ...packageJson.dependencies,\n          ...packageJson.devDependencies,\n          ...packageJson.peerDependencies\n        }\n\n        for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n          const libraryType = type as LibraryType\n          const matchedDeps: string[] = []\n\n          for (const dep of pattern.dependencies) {\n            if (this.matchDependency(dep, allDeps)) {\n              matchedDeps.push(dep)\n            }\n          }\n\n          if (matchedDeps.length > 0) {\n            const score = (matchedDeps.length / pattern.dependencies.length) * pattern.weight * 0.8\n            scores[libraryType] += score\n\n            evidence[libraryType].push({\n              type: 'dependency',\n              description: `找到相关依赖: ${matchedDeps.join(', ')}`,\n              weight: score,\n              source: 'package.json'\n            })\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.debug('检测依赖失败:', error)\n    }\n  }\n\n  /**\n   * 检测配置文件\n   */\n  private async detectConfigFiles(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n      const libraryType = type as LibraryType\n      const foundConfigs: string[] = []\n\n      for (const configFile of pattern.configs) {\n        const configPath = path.join(projectPath, configFile)\n\n        if (await exists(configPath)) {\n          foundConfigs.push(configFile)\n        }\n      }\n\n      if (foundConfigs.length > 0) {\n        const score = (foundConfigs.length / pattern.configs.length) * pattern.weight * 0.6\n        scores[libraryType] += score\n\n        evidence[libraryType].push({\n          type: 'config',\n          description: `找到配置文件: ${foundConfigs.join(', ')}`,\n          weight: score,\n          source: foundConfigs.join(', ')\n        })\n      }\n    }\n  }\n\n  /**\n   * 检测 package.json 字段\n   */\n  private async detectPackageJsonFields(\n    projectPath: string,\n    scores: Record<LibraryType, number>,\n    evidence: Record<LibraryType, DetectionEvidence[]>\n  ): Promise<void> {\n    try {\n      const packageJsonPath = path.join(projectPath, 'package.json')\n\n      if (await exists(packageJsonPath)) {\n        const packageContent = await readFile(packageJsonPath, 'utf-8')\n        const packageJson = JSON.parse(packageContent)\n\n        for (const [type, pattern] of Object.entries(LIBRARY_TYPE_PATTERNS)) {\n          const libraryType = type as LibraryType\n          const foundFields: string[] = []\n\n          for (const field of pattern.packageJsonFields) {\n            if (packageJson[field]) {\n              foundFields.push(field)\n            }\n          }\n\n          if (foundFields.length > 0) {\n            const score = (foundFields.length / pattern.packageJsonFields.length) * pattern.weight * 0.4\n            scores[libraryType] += score\n\n            evidence[libraryType].push({\n              type: 'config',\n              description: `找到 package.json 字段: ${foundFields.join(', ')}`,\n              weight: score,\n              source: 'package.json'\n            })\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.debug('检测 package.json 字段失败:', error)\n    }\n  }\n\n  /**\n   * 计算最终分数\n   */\n  private calculateFinalScores(scores: Record<LibraryType, number>): Record<LibraryType, number> {\n    const finalScores: Record<LibraryType, number> = { ...scores }\n\n    // 应用优先级权重\n    for (const [type, priority] of Object.entries(LIBRARY_TYPE_PRIORITY)) {\n      const libraryType = type as LibraryType\n      finalScores[libraryType] *= (priority / 10)\n    }\n\n    // 归一化分数\n    const maxScore = Math.max(...Object.values(finalScores))\n    if (maxScore > 0) {\n      for (const type of Object.keys(finalScores) as LibraryType[]) {\n        finalScores[type] = Math.min(finalScores[type] / maxScore, 1)\n      }\n    }\n\n    return finalScores\n  }\n\n  /**\n   * 获取最佳匹配\n   */\n  private getBestMatch(scores: Record<LibraryType, number>): LibraryType {\n    let bestType: LibraryType = LibraryType.TYPESCRIPT\n    let bestScore = 0\n\n    for (const [type, score] of Object.entries(scores)) {\n      if (score > bestScore) {\n        bestScore = score\n        bestType = type as LibraryType\n      }\n    }\n\n    // 如果最高分数低于阈值，返回默认类型\n    if (bestScore < this.options.confidence!) {\n      return LibraryType.MIXED\n    }\n\n    return bestType\n  }\n\n  /**\n   * 匹配依赖\n   */\n  private matchDependency(pattern: string, dependencies: Record<string, string>): boolean {\n    // 支持版本范围匹配\n    if (pattern.includes('@')) {\n      const [name, version] = pattern.split('@')\n      return !!(dependencies[name] && dependencies[name].includes(version))\n    }\n\n    return !!dependencies[pattern]\n  }\n}\n","/**\n * 性能监控器\n * \n * 负责监控构建过程的性能指标\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport type {\n  PerformanceMetrics,\n  PerformanceReport,\n  MemoryUsage,\n  CacheStats,\n  FileProcessingStats,\n  SystemResourceUsage\n} from '../types/performance'\nimport { Logger } from '../utils/logger'\n\n/**\n * 性能监控器选项\n */\nexport interface PerformanceMonitorOptions {\n  logger?: Logger\n  enabled?: boolean\n  sampleInterval?: number\n  maxSamples?: number\n}\n\n/**\n * 构建会话\n */\ninterface BuildSession {\n  buildId: string\n  startTime: number\n  endTime?: number\n  memorySnapshots: MemoryUsage[]\n  fileStats: FileProcessingStats\n  errors: Error[]\n}\n\n/**\n * 性能监控器类\n */\nexport class PerformanceMonitor extends EventEmitter {\n  private logger: Logger\n  private options: PerformanceMonitorOptions\n  private sessions: Map<string, BuildSession> = new Map()\n  private globalStats: {\n    totalBuilds: number\n    totalTime: number\n    averageTime: number\n    cacheStats: CacheStats\n  }\n\n  constructor(options: PerformanceMonitorOptions = {}) {\n    super()\n\n    this.options = {\n      enabled: true,\n      sampleInterval: 1000,\n      maxSamples: 100,\n      ...options\n    }\n\n    this.logger = options.logger || new Logger()\n\n    this.globalStats = {\n      totalBuilds: 0,\n      totalTime: 0,\n      averageTime: 0,\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      }\n    }\n  }\n\n  /**\n   * 开始构建监控\n   */\n  startBuild(buildId: string): void {\n    if (!this.options.enabled) return\n\n    const session: BuildSession = {\n      buildId,\n      startTime: Date.now(),\n      memorySnapshots: [],\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      errors: []\n    }\n\n    this.sessions.set(buildId, session)\n\n    // 开始内存监控\n    this.startMemoryMonitoring(buildId)\n\n    this.logger.debug(`开始监控构建: ${buildId}`)\n    this.emit('build:start', { buildId, timestamp: session.startTime })\n  }\n\n  /**\n   * 结束构建监控\n   */\n  endBuild(buildId: string): PerformanceMetrics {\n    if (!this.options.enabled) {\n      return this.createEmptyMetrics()\n    }\n\n    const session = this.sessions.get(buildId)\n    if (!session) {\n      this.logger.warn(`构建会话不存在: ${buildId}`)\n      return this.createEmptyMetrics()\n    }\n\n    session.endTime = Date.now()\n    const buildTime = session.endTime - session.startTime\n\n    // 更新全局统计\n    this.globalStats.totalBuilds++\n    this.globalStats.totalTime += buildTime\n    this.globalStats.averageTime = this.globalStats.totalTime / this.globalStats.totalBuilds\n\n    // 生成性能指标\n    const metrics = this.generateMetrics(session, buildTime)\n\n    this.logger.info(`构建监控完成: ${buildId} (${buildTime}ms)`)\n    this.emit('build:end', { buildId, metrics, timestamp: session.endTime })\n\n    // 清理会话\n    this.sessions.delete(buildId)\n\n    return metrics\n  }\n\n  /**\n   * 记录错误\n   */\n  recordError(buildId: string, error: Error): void {\n    const session = this.sessions.get(buildId)\n    if (session) {\n      session.errors.push(error)\n    }\n  }\n\n  /**\n   * 记录文件处理\n   */\n  recordFileProcessing(buildId: string, filePath: string, processingTime: number): void {\n    const session = this.sessions.get(buildId)\n    if (!session) return\n\n    session.fileStats.totalFiles++\n\n    // 按类型统计\n    const ext = this.getFileExtension(filePath)\n    session.fileStats.filesByType[ext] = (session.fileStats.filesByType[ext] || 0) + 1\n\n    // 记录慢文件\n    if (session.fileStats.slowestFiles.length < 10) {\n      session.fileStats.slowestFiles.push({\n        path: filePath,\n        processingTime,\n        size: 0, // TODO: 获取文件大小\n        phases: []\n      })\n    } else {\n      // 替换最快的文件\n      const slowest = session.fileStats.slowestFiles\n      const minIndex = slowest.findIndex(f => f.processingTime === Math.min(...slowest.map(f => f.processingTime)))\n      if (processingTime > slowest[minIndex].processingTime) {\n        slowest[minIndex] = {\n          path: filePath,\n          processingTime,\n          size: 0,\n          phases: []\n        }\n      }\n    }\n  }\n\n  /**\n   * 记录缓存命中\n   */\n  recordCacheHit(saved: boolean, timeSaved: number = 0): void {\n    if (saved) {\n      this.globalStats.cacheStats.hits++\n      this.globalStats.cacheStats.timeSaved += timeSaved\n    } else {\n      this.globalStats.cacheStats.misses++\n    }\n\n    const total = this.globalStats.cacheStats.hits + this.globalStats.cacheStats.misses\n    this.globalStats.cacheStats.hitRate = this.globalStats.cacheStats.hits / total\n  }\n\n  /**\n   * 获取性能报告\n   */\n  getPerformanceReport(): PerformanceReport {\n    const timestamp = Date.now()\n\n    return {\n      timestamp,\n      buildSummary: {\n        bundler: 'rollup', // TODO: 从配置获取\n        mode: 'production',\n        entryCount: 1,\n        outputCount: 1,\n        totalSize: 0,\n        buildTime: this.globalStats.averageTime\n      },\n      metrics: this.createEmptyMetrics(), // TODO: 实现\n      recommendations: [],\n      analysis: {\n        bottlenecks: [],\n        resourceAnalysis: {\n          cpuEfficiency: 0.8,\n          memoryEfficiency: 0.7,\n          ioEfficiency: 0.9,\n          wastePoints: []\n        },\n        cacheAnalysis: {\n          overallEfficiency: this.globalStats.cacheStats.hitRate,\n          strategyRecommendations: [],\n          configOptimizations: {}\n        },\n        parallelizationOpportunities: []\n      }\n    }\n  }\n\n  /**\n   * 开始内存监控\n   */\n  private startMemoryMonitoring(buildId: string): void {\n    const session = this.sessions.get(buildId)\n    if (!session) return\n\n    const interval = setInterval(() => {\n      if (!this.sessions.has(buildId)) {\n        clearInterval(interval)\n        return\n      }\n\n      const memoryUsage = this.getCurrentMemoryUsage()\n      session.memorySnapshots.push(memoryUsage)\n\n      // 限制快照数量\n      if (session.memorySnapshots.length > (this.options.maxSamples || 100)) {\n        session.memorySnapshots.shift()\n      }\n    }, this.options.sampleInterval)\n  }\n\n  /**\n   * 获取当前内存使用情况\n   */\n  private getCurrentMemoryUsage(): MemoryUsage {\n    const usage = process.memoryUsage()\n\n    return {\n      heapUsed: usage.heapUsed,\n      heapTotal: usage.heapTotal,\n      external: usage.external,\n      rss: usage.rss,\n      peak: Math.max(usage.heapUsed, usage.heapTotal),\n      trend: []\n    }\n  }\n\n  /**\n   * 生成性能指标\n   */\n  private generateMetrics(session: BuildSession, buildTime: number): PerformanceMetrics {\n    const memoryUsage = this.calculateMemoryUsage(session.memorySnapshots)\n\n    return {\n      buildTime,\n      memoryUsage,\n      cacheStats: this.globalStats.cacheStats,\n      fileStats: session.fileStats,\n      pluginPerformance: [], // TODO: 实现插件性能统计\n      systemResources: this.getSystemResources()\n    }\n  }\n\n  /**\n   * 计算内存使用情况\n   */\n  private calculateMemoryUsage(snapshots: MemoryUsage[]): MemoryUsage {\n    if (snapshots.length === 0) {\n      return this.getCurrentMemoryUsage()\n    }\n\n    const latest = snapshots[snapshots.length - 1]\n    const peak = Math.max(...snapshots.map(s => s.heapUsed))\n\n    return {\n      ...latest,\n      peak,\n      trend: snapshots.map((snapshot, index) => ({\n        timestamp: Date.now() - (snapshots.length - index) * (this.options.sampleInterval || 1000),\n        usage: snapshot.heapUsed,\n        phase: 'building'\n      }))\n    }\n  }\n\n  /**\n   * 获取系统资源使用情况\n   */\n  private getSystemResources(): SystemResourceUsage {\n    // TODO: 实现系统资源监控\n    return {\n      cpuUsage: 0,\n      availableMemory: 0,\n      diskUsage: {\n        total: 0,\n        used: 0,\n        available: 0,\n        usagePercent: 0\n      }\n    }\n  }\n\n  /**\n   * 获取文件扩展名\n   */\n  private getFileExtension(filePath: string): string {\n    const ext = filePath.split('.').pop()\n    return ext ? `.${ext}` : 'unknown'\n  }\n\n  /**\n   * 创建空的性能指标\n   */\n  private createEmptyMetrics(): PerformanceMetrics {\n    return {\n      buildTime: 0,\n      memoryUsage: this.getCurrentMemoryUsage(),\n      cacheStats: this.globalStats.cacheStats,\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: this.getSystemResources()\n    }\n  }\n}\n","/**\n * 测试运行器\n * \n * 负责检测测试框架、安装依赖和运行测试用例\n * 支持多种测试框架的自动检测和运行\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport * as path from 'path'\nimport * as fs from 'fs-extra'\nimport { spawn } from 'child_process'\nimport type {\n  ITestRunner,\n  ValidationContext,\n  TestRunResult,\n  TestError,\n  TestPerformanceMetrics\n} from '../types/validation'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 支持的测试框架配置\n */\nconst TEST_FRAMEWORKS = {\n  vitest: {\n    configFiles: ['vitest.config.ts', 'vitest.config.js', 'vite.config.ts', 'vite.config.js'],\n    command: 'vitest',\n    args: ['run', '--reporter=json'],\n    dependencies: ['vitest']\n  },\n  jest: {\n    configFiles: ['jest.config.js', 'jest.config.ts', 'jest.config.json'],\n    command: 'jest',\n    args: ['--json', '--coverage=false'],\n    dependencies: ['jest']\n  },\n  mocha: {\n    configFiles: ['.mocharc.json', '.mocharc.js', '.mocharc.yaml'],\n    command: 'mocha',\n    args: ['--reporter', 'json'],\n    dependencies: ['mocha']\n  }\n}\n\n/**\n * 包管理器配置\n */\nconst PACKAGE_MANAGERS = {\n  npm: {\n    installCommand: 'npm',\n    installArgs: ['install'],\n    runCommand: 'npx'\n  },\n  yarn: {\n    installCommand: 'yarn',\n    installArgs: ['install'],\n    runCommand: 'yarn'\n  },\n  pnpm: {\n    installCommand: 'pnpm',\n    installArgs: ['install'],\n    runCommand: 'pnpm'\n  }\n}\n\n/**\n * 测试运行器实现\n */\nexport class TestRunner implements ITestRunner {\n  /** 日志记录器 */\n  private logger: Logger\n\n  /** 错误处理器 */\n  private errorHandler: ErrorHandler\n\n  /**\n   * 构造函数\n   */\n  constructor(options: {\n    logger?: Logger\n    errorHandler?: ErrorHandler\n  } = {}) {\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'TestRunner' })\n    this.errorHandler = options.errorHandler || new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 运行测试\n   */\n  async runTests(context: ValidationContext): Promise<TestRunResult> {\n    const startTime = Date.now()\n    this.logger.info('开始运行测试...')\n\n    try {\n      // 检测测试框架\n      const framework = await this.detectFramework(context.projectRoot)\n      this.logger.info(`检测到测试框架: ${framework}`)\n\n      // 获取框架配置\n      const frameworkConfig = TEST_FRAMEWORKS[framework as keyof typeof TEST_FRAMEWORKS]\n      if (!frameworkConfig) {\n        throw new Error(`不支持的测试框架: ${framework}`)\n      }\n\n      // 构建测试命令\n      const packageManager = await this.detectPackageManager(context.projectRoot)\n      const runCommand = PACKAGE_MANAGERS[packageManager as keyof typeof PACKAGE_MANAGERS].runCommand\n\n      // 运行测试\n      const testOutput = await this.executeTests(\n        context.tempDir,\n        runCommand,\n        frameworkConfig.command,\n        frameworkConfig.args,\n        context.config.timeout || 60000\n      )\n\n      // 解析测试结果\n      const result = await this.parseTestOutput(testOutput, framework)\n\n      // 计算性能指标\n      const duration = Date.now() - startTime\n      const performance: TestPerformanceMetrics = {\n        setupTime: 0,\n        executionTime: duration,\n        teardownTime: 0,\n        peakMemoryUsage: process.memoryUsage().heapUsed / 1024 / 1024,\n        cpuUsage: 0\n      }\n\n      const testResult: TestRunResult = {\n        success: result.success ?? false,\n        totalTests: result.totalTests ?? 0,\n        passedTests: result.passedTests ?? 0,\n        failedTests: result.failedTests ?? 0,\n        skippedTests: result.skippedTests ?? 0,\n        output: result.output ?? '',\n        errors: result.errors ?? [],\n        duration,\n        performance\n      }\n\n      this.logger.success(`测试运行完成: ${testResult.passedTests}/${testResult.totalTests} 通过`)\n\n      return testResult\n\n    } catch (error) {\n      const testError = this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '测试运行失败',\n        { cause: error as Error }\n      )\n\n      // 返回失败结果\n      return {\n        success: false,\n        totalTests: 0,\n        passedTests: 0,\n        failedTests: 0,\n        skippedTests: 0,\n        duration: Date.now() - startTime,\n        output: error instanceof Error ? error.message : String(error),\n        errors: [{\n          message: testError.message,\n          stack: testError.stack,\n          type: 'runtime'\n        }],\n        performance: {\n          setupTime: 0,\n          executionTime: Date.now() - startTime,\n          teardownTime: 0,\n          peakMemoryUsage: 0,\n          cpuUsage: 0\n        }\n      }\n    }\n  }\n\n  /**\n   * 检测测试框架\n   */\n  async detectFramework(projectRoot: string): Promise<string> {\n    this.logger.info('检测测试框架...')\n\n    // 检查 package.json 中的依赖\n    const packageJsonPath = path.join(projectRoot, 'package.json')\n    if (await fs.pathExists(packageJsonPath)) {\n      const packageJson = await fs.readJson(packageJsonPath)\n      const allDeps = {\n        ...packageJson.dependencies,\n        ...packageJson.devDependencies\n      }\n\n      // 按优先级检测\n      if (allDeps.vitest) return 'vitest'\n      if (allDeps.jest) return 'jest'\n      if (allDeps.mocha) return 'mocha'\n    }\n\n    // 检查配置文件\n    for (const [framework, config] of Object.entries(TEST_FRAMEWORKS)) {\n      for (const configFile of config.configFiles) {\n        if (await fs.pathExists(path.join(projectRoot, configFile))) {\n          return framework\n        }\n      }\n    }\n\n    // 默认返回 vitest\n    this.logger.warn('未检测到测试框架，使用默认的 vitest')\n    return 'vitest'\n  }\n\n  /**\n   * 安装依赖\n   */\n  async installDependencies(context: ValidationContext): Promise<void> {\n    this.logger.info('安装依赖...')\n\n    const packageManager = await this.detectPackageManager(context.projectRoot)\n    const pmConfig = PACKAGE_MANAGERS[packageManager as keyof typeof PACKAGE_MANAGERS]\n\n    try {\n      await this.executeCommand(\n        context.tempDir,\n        pmConfig.installCommand,\n        pmConfig.installArgs,\n        context.config.environment?.installTimeout || 300000\n      )\n\n      this.logger.success('依赖安装完成')\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '依赖安装失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    this.logger.info('TestRunner 资源清理完成')\n  }\n\n  /**\n   * 检测包管理器\n   */\n  private async detectPackageManager(projectRoot: string): Promise<string> {\n    // 检查锁文件\n    if (await fs.pathExists(path.join(projectRoot, 'pnpm-lock.yaml'))) {\n      return 'pnpm'\n    }\n    if (await fs.pathExists(path.join(projectRoot, 'yarn.lock'))) {\n      return 'yarn'\n    }\n    if (await fs.pathExists(path.join(projectRoot, 'package-lock.json'))) {\n      return 'npm'\n    }\n\n    // 默认使用 npm\n    return 'npm'\n  }\n\n  /**\n   * 执行测试命令\n   */\n  private async executeTests(\n    cwd: string,\n    runCommand: string,\n    testCommand: string,\n    args: string[],\n    timeout: number\n  ): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const fullCommand = [testCommand, ...args]\n      const child = spawn(runCommand, fullCommand, {\n        cwd,\n        stdio: 'pipe',\n        shell: true\n      })\n\n      let stdout = ''\n      let stderr = ''\n\n      child.stdout?.on('data', (data) => {\n        stdout += data.toString()\n      })\n\n      child.stderr?.on('data', (data) => {\n        stderr += data.toString()\n      })\n\n      const timer = setTimeout(() => {\n        child.kill('SIGTERM')\n        reject(new Error(`测试超时 (${timeout}ms)`))\n      }, timeout)\n\n      child.on('close', (code) => {\n        clearTimeout(timer)\n        if (code === 0) {\n          resolve(stdout)\n        } else {\n          reject(new Error(`测试失败 (退出码: ${code})\\n${stderr}`))\n        }\n      })\n\n      child.on('error', (error) => {\n        clearTimeout(timer)\n        reject(error)\n      })\n    })\n  }\n\n  /**\n   * 执行命令\n   */\n  private async executeCommand(\n    cwd: string,\n    command: string,\n    args: string[],\n    timeout: number\n  ): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const child = spawn(command, args, {\n        cwd,\n        stdio: 'pipe',\n        shell: true\n      })\n\n      let stdout = ''\n      let stderr = ''\n\n      child.stdout?.on('data', (data) => {\n        stdout += data.toString()\n      })\n\n      child.stderr?.on('data', (data) => {\n        stderr += data.toString()\n      })\n\n      const timer = setTimeout(() => {\n        child.kill('SIGTERM')\n        reject(new Error(`命令超时 (${timeout}ms)`))\n      }, timeout)\n\n      child.on('close', (code) => {\n        clearTimeout(timer)\n        if (code === 0) {\n          resolve(stdout)\n        } else {\n          reject(new Error(`命令失败 (退出码: ${code})\\n${stderr}`))\n        }\n      })\n\n      child.on('error', (error) => {\n        clearTimeout(timer)\n        reject(error)\n      })\n    })\n  }\n\n  /**\n   * 解析测试输出\n   */\n  private async parseTestOutput(output: string, framework: string): Promise<Partial<TestRunResult>> {\n    try {\n      // 尝试解析 JSON 输出\n      const result = JSON.parse(output)\n\n      // 根据不同框架解析结果\n      switch (framework) {\n        case 'vitest':\n          return this.parseVitestOutput(result)\n        case 'jest':\n          return this.parseJestOutput(result)\n        case 'mocha':\n          return this.parseMochaOutput(result)\n        default:\n          return this.parseGenericOutput(result)\n      }\n    } catch (error) {\n      // 如果无法解析 JSON，返回基本结果\n      return {\n        success: output.includes('PASS') || output.includes('✓'),\n        totalTests: 0,\n        passedTests: 0,\n        failedTests: 0,\n        skippedTests: 0,\n        output,\n        errors: []\n      }\n    }\n  }\n\n  /**\n   * 解析 Vitest 输出\n   */\n  private parseVitestOutput(result: any): Partial<TestRunResult> {\n    return {\n      success: result.success || false,\n      totalTests: result.numTotalTests || 0,\n      passedTests: result.numPassedTests || 0,\n      failedTests: result.numFailedTests || 0,\n      skippedTests: result.numPendingTests || 0,\n      output: JSON.stringify(result, null, 2),\n      errors: this.extractVitestErrors(result)\n    }\n  }\n\n  /**\n   * 解析 Jest 输出\n   */\n  private parseJestOutput(result: any): Partial<TestRunResult> {\n    return {\n      success: result.success || false,\n      totalTests: result.numTotalTests || 0,\n      passedTests: result.numPassedTests || 0,\n      failedTests: result.numFailedTests || 0,\n      skippedTests: result.numPendingTests || 0,\n      output: JSON.stringify(result, null, 2),\n      errors: this.extractJestErrors(result)\n    }\n  }\n\n  /**\n   * 解析 Mocha 输出\n   */\n  private parseMochaOutput(result: any): Partial<TestRunResult> {\n    const tests = result.tests || []\n    const passed = tests.filter((t: any) => t.state === 'passed').length\n    const failed = tests.filter((t: any) => t.state === 'failed').length\n    const pending = tests.filter((t: any) => t.pending).length\n\n    return {\n      success: failed === 0,\n      totalTests: tests.length,\n      passedTests: passed,\n      failedTests: failed,\n      skippedTests: pending,\n      output: JSON.stringify(result, null, 2),\n      errors: this.extractMochaErrors(result)\n    }\n  }\n\n  /**\n   * 解析通用输出\n   */\n  private parseGenericOutput(result: any): Partial<TestRunResult> {\n    return {\n      success: result.success || false,\n      totalTests: result.totalTests || 0,\n      passedTests: result.passedTests || 0,\n      failedTests: result.failedTests || 0,\n      skippedTests: result.skippedTests || 0,\n      output: JSON.stringify(result, null, 2),\n      errors: []\n    }\n  }\n\n  /**\n   * 提取 Vitest 错误\n   */\n  private extractVitestErrors(result: any): TestError[] {\n    const errors: TestError[] = []\n    // 简化实现，实际应该解析具体的错误信息\n    if (result.testResults) {\n      result.testResults.forEach((testResult: any) => {\n        if (testResult.assertionResults) {\n          testResult.assertionResults.forEach((assertion: any) => {\n            if (assertion.status === 'failed') {\n              errors.push({\n                message: assertion.failureMessages?.[0] || '测试失败',\n                type: 'assertion',\n                file: testResult.name\n              })\n            }\n          })\n        }\n      })\n    }\n    return errors\n  }\n\n  /**\n   * 提取 Jest 错误\n   */\n  private extractJestErrors(result: any): TestError[] {\n    const errors: TestError[] = []\n    // 简化实现\n    if (result.testResults) {\n      result.testResults.forEach((testResult: any) => {\n        if (testResult.message) {\n          errors.push({\n            message: testResult.message,\n            type: 'assertion',\n            file: testResult.name\n          })\n        }\n      })\n    }\n    return errors\n  }\n\n  /**\n   * 提取 Mocha 错误\n   */\n  private extractMochaErrors(result: any): TestError[] {\n    const errors: TestError[] = []\n    if (result.failures) {\n      result.failures.forEach((failure: any) => {\n        errors.push({\n          message: failure.err?.message || '测试失败',\n          stack: failure.err?.stack,\n          type: 'assertion',\n          file: failure.file\n        })\n      })\n    }\n    return errors\n  }\n}\n","/**\n * 验证报告生成器\n * \n * 负责生成和输出验证报告\n * 支持多种格式的报告输出\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport * as path from 'path'\nimport * as fs from 'fs-extra'\nimport type {\n  IValidationReporter,\n  ValidationReport,\n  ValidationReportingConfig,\n  ValidationResult,\n  ValidationSummary\n} from '../types/validation'\nimport { Logger } from '../utils/logger'\n\n/**\n * 验证报告生成器实现\n */\nexport class ValidationReporter implements IValidationReporter {\n  /** 日志记录器 */\n  private logger: Logger\n\n  /**\n   * 构造函数\n   */\n  constructor(options: {\n    logger?: Logger\n  } = {}) {\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'ValidationReporter' })\n  }\n\n  /**\n   * 生成报告\n   */\n  async generateReport(\n    result: ValidationResult,\n    _config: ValidationReportingConfig\n  ): Promise<ValidationReport> {\n    this.logger.info('生成验证报告...')\n\n    const report: ValidationReport = {\n      title: `构建验证报告 - ${result.validationId}`,\n      summary: this.generateSummary(result),\n      details: {\n        fileResults: [],\n        formatResults: [],\n        typeResults: [],\n        styleResults: []\n      },\n      recommendations: this.generateRecommendations(result),\n      generatedAt: Date.now(),\n      version: '1.0.0'\n    }\n\n    return report\n  }\n\n  /**\n   * 输出报告\n   */\n  async outputReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    this.logger.info(`输出验证报告 (格式: ${config.format})`)\n\n    switch (config.format) {\n      case 'console':\n        await this.outputConsoleReport(report, config)\n        break\n      case 'json':\n        await this.outputJsonReport(report, config)\n        break\n      case 'html':\n        await this.outputHtmlReport(report, config)\n        break\n      case 'markdown':\n        await this.outputMarkdownReport(report, config)\n        break\n      default:\n        await this.outputConsoleReport(report, config)\n    }\n  }\n\n  /**\n   * 生成摘要\n   */\n  private generateSummary(result: ValidationResult): ValidationSummary {\n    return {\n      status: result.success ? 'passed' : 'failed',\n      totalFiles: result.stats.totalFiles,\n      passedFiles: result.success ? result.stats.totalFiles : 0,\n      failedFiles: result.success ? 0 : result.stats.totalFiles,\n      totalTests: result.testResult.totalTests,\n      passedTests: result.testResult.passedTests,\n      failedTests: result.testResult.failedTests,\n      duration: result.duration\n    }\n  }\n\n  /**\n   * 生成建议\n   */\n  private generateRecommendations(result: ValidationResult): any[] {\n    const recommendations: any[] = []\n\n    // 如果验证失败，添加建议\n    if (!result.success) {\n      recommendations.push({\n        type: 'error',\n        title: '验证失败',\n        description: '打包后的代码验证失败，请检查构建配置和测试用例',\n        solution: '检查构建输出和测试日志，修复相关问题',\n        priority: 'high'\n      })\n    }\n\n    // 如果有错误，添加具体建议\n    if (result.errors.length > 0) {\n      recommendations.push({\n        type: 'error',\n        title: '发现错误',\n        description: `发现 ${result.errors.length} 个错误`,\n        solution: '查看详细错误信息并逐一修复',\n        priority: 'high'\n      })\n    }\n\n    // 如果有警告，添加建议\n    if (result.warnings.length > 0) {\n      recommendations.push({\n        type: 'warning',\n        title: '发现警告',\n        description: `发现 ${result.warnings.length} 个警告`,\n        solution: '查看警告信息并考虑优化',\n        priority: 'medium'\n      })\n    }\n\n    // 性能建议\n    if (result.duration > 60000) {\n      recommendations.push({\n        type: 'optimization',\n        title: '验证耗时较长',\n        description: `验证耗时 ${Math.round(result.duration / 1000)}s，建议优化`,\n        solution: '考虑减少测试用例数量或优化测试性能',\n        priority: 'low'\n      })\n    }\n\n    return recommendations\n  }\n\n  /**\n   * 输出控制台报告\n   */\n  private async outputConsoleReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const { summary } = report\n\n    console.log('\\n' + '='.repeat(60))\n    console.log(`📋 ${report.title}`)\n    console.log('='.repeat(60))\n\n    // 状态\n    const statusIcon = summary.status === 'passed' ? '✅' : '❌'\n    const statusText = summary.status === 'passed' ? '通过' : '失败'\n    console.log(`\\n${statusIcon} 验证状态: ${statusText}`)\n\n    // 统计信息\n    console.log('\\n📊 统计信息:')\n    console.log(`   总测试数: ${summary.totalTests}`)\n    console.log(`   通过测试: ${summary.passedTests}`)\n    console.log(`   失败测试: ${summary.failedTests}`)\n    console.log(`   验证耗时: ${Math.round(summary.duration / 1000)}s`)\n\n    // 建议\n    if (report.recommendations.length > 0) {\n      console.log('\\n💡 建议:')\n      report.recommendations.forEach((rec, index) => {\n        const icon = this.getRecommendationIcon(rec.type)\n        console.log(`   ${index + 1}. ${icon} ${rec.title}`)\n        if (config.verbose) {\n          console.log(`      ${rec.description}`)\n          if (rec.solution) {\n            console.log(`      解决方案: ${rec.solution}`)\n          }\n        }\n      })\n    }\n\n    console.log('\\n' + '='.repeat(60) + '\\n')\n  }\n\n  /**\n   * 输出 JSON 报告\n   */\n  private async outputJsonReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const outputPath = config.outputPath || 'validation-report.json'\n    const reportJson = JSON.stringify(report, null, 2)\n\n    await fs.ensureDir(path.dirname(outputPath))\n    await fs.writeFile(outputPath, reportJson, 'utf8')\n\n    this.logger.success(`JSON 报告已保存到: ${outputPath}`)\n  }\n\n  /**\n   * 输出 HTML 报告\n   */\n  private async outputHtmlReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const outputPath = config.outputPath || 'validation-report.html'\n    const html = this.generateHtmlReport(report)\n\n    await fs.ensureDir(path.dirname(outputPath))\n    await fs.writeFile(outputPath, html, 'utf8')\n\n    this.logger.success(`HTML 报告已保存到: ${outputPath}`)\n  }\n\n  /**\n   * 输出 Markdown 报告\n   */\n  private async outputMarkdownReport(\n    report: ValidationReport,\n    config: ValidationReportingConfig\n  ): Promise<void> {\n    const outputPath = config.outputPath || 'validation-report.md'\n    const markdown = this.generateMarkdownReport(report)\n\n    await fs.ensureDir(path.dirname(outputPath))\n    await fs.writeFile(outputPath, markdown, 'utf8')\n\n    this.logger.success(`Markdown 报告已保存到: ${outputPath}`)\n  }\n\n  /**\n   * 生成 HTML 报告\n   */\n  private generateHtmlReport(report: ValidationReport): string {\n    const { summary } = report\n    const statusClass = summary.status === 'passed' ? 'success' : 'error'\n\n    return `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>${report.title}</title>\n    <style>\n        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; }\n        .header { border-bottom: 2px solid #eee; padding-bottom: 20px; margin-bottom: 30px; }\n        .status { padding: 10px 20px; border-radius: 5px; margin: 20px 0; }\n        .success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }\n        .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }\n        .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 20px 0; }\n        .stat-card { background: #f8f9fa; padding: 15px; border-radius: 5px; text-align: center; }\n        .stat-number { font-size: 2em; font-weight: bold; color: #007bff; }\n        .recommendations { margin-top: 30px; }\n        .recommendation { margin: 10px 0; padding: 15px; border-left: 4px solid #007bff; background: #f8f9fa; }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>${report.title}</h1>\n        <p>生成时间: ${new Date(report.generatedAt).toLocaleString()}</p>\n    </div>\n\n    <div class=\"status ${statusClass}\">\n        <h2>验证状态: ${summary.status === 'passed' ? '✅ 通过' : '❌ 失败'}</h2>\n    </div>\n\n    <div class=\"stats\">\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${summary.totalTests}</div>\n            <div>总测试数</div>\n        </div>\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${summary.passedTests}</div>\n            <div>通过测试</div>\n        </div>\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${summary.failedTests}</div>\n            <div>失败测试</div>\n        </div>\n        <div class=\"stat-card\">\n            <div class=\"stat-number\">${Math.round(summary.duration / 1000)}s</div>\n            <div>验证耗时</div>\n        </div>\n    </div>\n\n    ${report.recommendations.length > 0 ? `\n    <div class=\"recommendations\">\n        <h2>💡 建议</h2>\n        ${report.recommendations.map(rec => `\n        <div class=\"recommendation\">\n            <h3>${this.getRecommendationIcon(rec.type)} ${rec.title}</h3>\n            <p>${rec.description}</p>\n            ${rec.solution ? `<p><strong>解决方案:</strong> ${rec.solution}</p>` : ''}\n        </div>\n        `).join('')}\n    </div>\n    ` : ''}\n</body>\n</html>\n    `.trim()\n  }\n\n  /**\n   * 生成 Markdown 报告\n   */\n  private generateMarkdownReport(report: ValidationReport): string {\n    const { summary } = report\n\n    return `\n# ${report.title}\n\n**生成时间:** ${new Date(report.generatedAt).toLocaleString()}\n\n## 验证状态\n\n${summary.status === 'passed' ? '✅ **通过**' : '❌ **失败**'}\n\n## 统计信息\n\n| 项目 | 数量 |\n|------|------|\n| 总测试数 | ${summary.totalTests} |\n| 通过测试 | ${summary.passedTests} |\n| 失败测试 | ${summary.failedTests} |\n| 验证耗时 | ${Math.round(summary.duration / 1000)}s |\n\n${report.recommendations.length > 0 ? `\n## 💡 建议\n\n${report.recommendations.map((rec, index) => `\n### ${index + 1}. ${this.getRecommendationIcon(rec.type)} ${rec.title}\n\n${rec.description}\n\n${rec.solution ? `**解决方案:** ${rec.solution}` : ''}\n`).join('')}\n` : ''}\n    `.trim()\n  }\n\n  /**\n   * 获取建议图标\n   */\n  private getRecommendationIcon(type: string): string {\n    switch (type) {\n      case 'error': return '❌'\n      case 'warning': return '⚠️'\n      case 'info': return 'ℹ️'\n      case 'optimization': return '⚡'\n      default: return '💡'\n    }\n  }\n}\n","/**\n * 临时环境管理器\n * \n * 负责创建、管理和清理验证过程中的临时环境\n * 包括临时目录创建、文件复制、依赖替换等功能\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport * as path from 'path'\nimport * as fs from 'fs-extra'\nimport * as os from 'os'\nimport { randomUUID } from 'crypto'\nimport type { ValidationContext } from '../types/validation'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 临时环境管理器实现\n */\nexport class TemporaryEnvironment {\n  /** 日志记录器 */\n  private logger: Logger\n\n  /** 错误处理器 */\n  private errorHandler: ErrorHandler\n\n  /** 创建的临时目录列表 */\n  private tempDirs: Set<string> = new Set()\n\n  /**\n   * 构造函数\n   */\n  constructor(options: {\n    logger?: Logger\n    errorHandler?: ErrorHandler\n  } = {}) {\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'TemporaryEnvironment' })\n    this.errorHandler = options.errorHandler || new ErrorHandler({ logger: this.logger })\n  }\n\n  /**\n   * 创建临时环境\n   */\n  async create(context: ValidationContext): Promise<void> {\n    this.logger.info('创建临时验证环境...')\n\n    try {\n      // 创建临时目录\n      const tempDir = await this.createTempDirectory(context)\n      context.tempDir = tempDir\n      this.tempDirs.add(tempDir)\n\n      // 复制项目文件到临时目录\n      await this.copyProjectFiles(context)\n\n      // 修改 package.json 以使用构建产物\n      await this.updatePackageJson(context)\n\n      this.logger.success(`临时环境创建完成: ${tempDir}`)\n\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '创建临时环境失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 复制构建产物到临时环境\n   */\n  async copyBuildOutputs(context: ValidationContext): Promise<void> {\n    this.logger.info('复制构建产物到临时环境...')\n\n    try {\n      // 复制构建输出文件\n      for (const output of context.buildResult.outputs) {\n        // 假设输出文件在输出目录中\n        const sourcePath = path.join(context.outputDir, output.fileName)\n        const targetPath = path.join(context.tempDir, output.fileName)\n\n        if (await fs.pathExists(sourcePath)) {\n          await fs.ensureDir(path.dirname(targetPath))\n          await fs.copy(sourcePath, targetPath)\n          this.logger.debug(`复制文件: ${sourcePath} -> ${targetPath}`)\n        }\n      }\n\n      this.logger.success('构建产物复制完成')\n\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '复制构建产物失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 清理临时环境\n   */\n  async cleanup(context: ValidationContext): Promise<void> {\n    this.logger.info('清理临时环境...')\n\n    try {\n      if (context.tempDir && this.tempDirs.has(context.tempDir)) {\n        await fs.remove(context.tempDir)\n        this.tempDirs.delete(context.tempDir)\n        this.logger.success(`临时目录已删除: ${context.tempDir}`)\n      }\n    } catch (error) {\n      this.logger.warn(`清理临时目录失败: ${error}`)\n    }\n  }\n\n  /**\n   * 清理所有临时环境\n   */\n  async dispose(): Promise<void> {\n    this.logger.info('清理所有临时环境...')\n\n    const cleanupPromises = Array.from(this.tempDirs).map(async (tempDir) => {\n      try {\n        await fs.remove(tempDir)\n        this.logger.debug(`临时目录已删除: ${tempDir}`)\n      } catch (error) {\n        this.logger.warn(`清理临时目录失败: ${tempDir}, 错误: ${error}`)\n      }\n    })\n\n    await Promise.all(cleanupPromises)\n    this.tempDirs.clear()\n\n    this.logger.success('所有临时环境清理完成')\n  }\n\n  /**\n   * 创建临时目录\n   */\n  private async createTempDirectory(context: ValidationContext): Promise<string> {\n    const tempDirName = `ldesign-builder-validation-${randomUUID().slice(0, 8)}`\n\n    // 优先使用配置中指定的临时目录\n    const baseTempDir = context.config.environment?.tempDir\n      ? path.resolve(context.projectRoot, context.config.environment.tempDir)\n      : path.join(os.tmpdir(), 'ldesign-builder')\n\n    const tempDir = path.join(baseTempDir, tempDirName)\n\n    await fs.ensureDir(tempDir)\n    this.logger.debug(`创建临时目录: ${tempDir}`)\n\n    return tempDir\n  }\n\n  /**\n   * 复制项目文件到临时目录\n   */\n  private async copyProjectFiles(context: ValidationContext): Promise<void> {\n    this.logger.info('复制项目文件到临时目录...')\n\n    const filesToCopy = [\n      'package.json',\n      'package-lock.json',\n      'yarn.lock',\n      'pnpm-lock.yaml',\n      'tsconfig.json',\n      'vitest.config.ts',\n      'vitest.config.js',\n      'jest.config.js',\n      'jest.config.ts',\n      '.mocharc.json',\n      '.mocharc.js'\n    ]\n\n    // 复制配置文件\n    for (const file of filesToCopy) {\n      const sourcePath = path.join(context.projectRoot, file)\n      if (await fs.pathExists(sourcePath)) {\n        const targetPath = path.join(context.tempDir, file)\n        await fs.copy(sourcePath, targetPath)\n        this.logger.debug(`复制配置文件: ${file}`)\n      }\n    }\n\n    // 复制测试文件\n    await this.copyTestFiles(context)\n\n    // 复制源码文件（如果需要）\n    await this.copySourceFiles(context)\n  }\n\n  /**\n   * 复制测试文件\n   */\n  private async copyTestFiles(context: ValidationContext): Promise<void> {\n    const testPatterns = Array.isArray(context.config.testPattern)\n      ? context.config.testPattern\n      : [context.config.testPattern || '**/*.test.{js,ts}']\n\n    const glob = await import('fast-glob')\n\n    for (const pattern of testPatterns) {\n      const testFiles = await glob.default(pattern, {\n        cwd: context.projectRoot,\n        absolute: false\n      })\n\n      for (const testFile of testFiles) {\n        const sourcePath = path.join(context.projectRoot, testFile)\n        const targetPath = path.join(context.tempDir, testFile)\n\n        await fs.ensureDir(path.dirname(targetPath))\n        await fs.copy(sourcePath, targetPath)\n\n        this.logger.debug(`复制测试文件: ${testFile}`)\n      }\n    }\n  }\n\n  /**\n   * 复制源码文件\n   */\n  private async copySourceFiles(context: ValidationContext): Promise<void> {\n    // 如果测试需要访问源码，复制 src 目录\n    const srcDir = path.join(context.projectRoot, 'src')\n    if (await fs.pathExists(srcDir)) {\n      const targetSrcDir = path.join(context.tempDir, 'src')\n      await fs.copy(srcDir, targetSrcDir)\n      this.logger.debug('复制源码目录: src')\n    }\n  }\n\n  /**\n   * 更新 package.json 以使用构建产物\n   */\n  private async updatePackageJson(context: ValidationContext): Promise<void> {\n    const packageJsonPath = path.join(context.tempDir, 'package.json')\n\n    if (!(await fs.pathExists(packageJsonPath))) {\n      this.logger.warn('临时环境中未找到 package.json')\n      return\n    }\n\n    try {\n      const packageJson = await fs.readJson(packageJsonPath)\n\n      // 更新主入口点指向构建产物\n      const outputs = context.buildResult.outputs\n\n      // 查找主要的输出文件（基于文件名模式）\n      const esmOutput = outputs.find(o => o.fileName.includes('.js') && !o.fileName.includes('.cjs'))\n      const cjsOutput = outputs.find(o => o.fileName.includes('.cjs'))\n      const typesOutput = outputs.find(o => o.fileName.endsWith('.d.ts'))\n\n      // 更新入口点\n      if (esmOutput) {\n        packageJson.module = esmOutput.fileName\n        packageJson.exports = packageJson.exports || {}\n        packageJson.exports['.'] = packageJson.exports['.'] || {}\n        packageJson.exports['.'].import = esmOutput.fileName\n      }\n\n      if (cjsOutput) {\n        packageJson.main = cjsOutput.fileName\n        packageJson.exports = packageJson.exports || {}\n        packageJson.exports['.'] = packageJson.exports['.'] || {}\n        packageJson.exports['.'].require = cjsOutput.fileName\n      }\n\n      if (typesOutput) {\n        packageJson.types = typesOutput.fileName\n        packageJson.typings = typesOutput.fileName\n      }\n\n      // 保存更新后的 package.json\n      await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 })\n\n      this.logger.success('package.json 已更新为使用构建产物')\n\n    } catch (error) {\n      this.logger.warn(`更新 package.json 失败: ${error}`)\n    }\n  }\n\n  /**\n   * 获取临时目录列表\n   */\n  getTempDirectories(): string[] {\n    return Array.from(this.tempDirs)\n  }\n\n  /**\n   * 检查临时目录是否存在\n   */\n  async exists(tempDir: string): Promise<boolean> {\n    return fs.pathExists(tempDir)\n  }\n\n  /**\n   * 获取临时目录大小\n   */\n  async getSize(tempDir: string): Promise<number> {\n    try {\n      const stats = await this.getDirectoryStats(tempDir)\n      return stats.size\n    } catch (error) {\n      return 0\n    }\n  }\n\n  /**\n   * 获取目录统计信息\n   */\n  private async getDirectoryStats(dirPath: string): Promise<{ size: number; files: number }> {\n    let totalSize = 0\n    let totalFiles = 0\n\n    const items = await fs.readdir(dirPath)\n\n    for (const item of items) {\n      const itemPath = path.join(dirPath, item)\n      const stats = await fs.stat(itemPath)\n\n      if (stats.isDirectory()) {\n        const subStats = await this.getDirectoryStats(itemPath)\n        totalSize += subStats.size\n        totalFiles += subStats.files\n      } else {\n        totalSize += stats.size\n        totalFiles += 1\n      }\n    }\n\n    return { size: totalSize, files: totalFiles }\n  }\n}\n","/**\n * 打包后验证器\n * \n * 负责在构建完成后验证打包产物的正确性\n * 通过运行测试用例确保打包前后功能一致性\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport { randomUUID } from 'crypto'\nimport type {\n  IPostBuildValidator,\n  PostBuildValidationConfig,\n  ValidationContext,\n  ValidationResult,\n  ValidationReport,\n  ValidationStats,\n  ValidationSummary,\n  ValidationDetails\n} from '../types/validation'\nimport { TestRunner } from './TestRunner'\nimport { ValidationReporter } from './ValidationReporter'\nimport { TemporaryEnvironment } from './TemporaryEnvironment'\nimport { Logger } from '../utils/logger'\nimport { ErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\n\n/**\n * 默认验证配置\n */\nconst DEFAULT_VALIDATION_CONFIG: Required<PostBuildValidationConfig> = {\n  enabled: true,\n  testFramework: 'auto',\n  testPattern: ['**/*.test.{js,ts}', '**/*.spec.{js,ts}'],\n  timeout: 60000,\n  failOnError: true,\n  environment: {\n    tempDir: '.validation-temp',\n    keepTempFiles: false,\n    env: {},\n    nodeVersion: process.version,\n    packageManager: 'auto',\n    installDependencies: true,\n    installTimeout: 300000\n  },\n  reporting: {\n    format: 'console',\n    outputPath: 'validation-report',\n    verbose: false,\n    logLevel: 'info',\n    includePerformance: true,\n    includeCoverage: false\n  },\n  hooks: {},\n  scope: {\n    formats: ['esm', 'cjs'],\n    fileTypes: ['js', 'ts', 'dts'],\n    exclude: ['**/*.d.ts', '**/node_modules/**'],\n    include: ['**/*'],\n    validateTypes: true,\n    validateStyles: false,\n    validateSourceMaps: false\n  }\n}\n\n/**\n * 打包后验证器实现\n */\nexport class PostBuildValidator extends EventEmitter implements IPostBuildValidator {\n  /** 验证配置 */\n  private config: PostBuildValidationConfig\n\n  /** 测试运行器 */\n  private testRunner: TestRunner\n\n  /** 验证报告生成器 */\n  private reporter: ValidationReporter\n\n  /** 临时环境管理器 */\n  private tempEnvironment: TemporaryEnvironment\n\n  /** 日志记录器 */\n  private logger: Logger\n\n  /** 错误处理器 */\n  private errorHandler: ErrorHandler\n\n  /**\n   * 构造函数\n   */\n  constructor(\n    config: PostBuildValidationConfig = {},\n    options: {\n      logger?: Logger\n      errorHandler?: ErrorHandler\n    } = {}\n  ) {\n    super()\n\n    // 合并配置\n    this.config = this.mergeConfig(DEFAULT_VALIDATION_CONFIG, config)\n\n    // 初始化依赖\n    this.logger = options.logger || new Logger({ level: 'info', prefix: 'PostBuildValidator' })\n    this.errorHandler = options.errorHandler || new ErrorHandler({ logger: this.logger })\n\n    // 初始化组件\n    this.testRunner = new TestRunner({\n      logger: this.logger,\n      errorHandler: this.errorHandler\n    })\n\n    this.reporter = new ValidationReporter({\n      logger: this.logger\n    })\n\n    this.tempEnvironment = new TemporaryEnvironment({\n      logger: this.logger,\n      errorHandler: this.errorHandler\n    })\n\n    this.logger.info('PostBuildValidator 初始化完成')\n  }\n\n  /**\n   * 执行验证\n   */\n  async validate(context: ValidationContext): Promise<ValidationResult> {\n    const validationId = randomUUID()\n    const startTime = Date.now()\n\n    this.logger.info(`开始打包后验证 (ID: ${validationId})`)\n\n    // 发出验证开始事件\n    this.emit('validation:start', { context, validationId, startTime })\n\n    try {\n      // 执行验证前钩子\n      if (this.config.hooks?.beforeValidation) {\n        await this.config.hooks.beforeValidation(context)\n      }\n\n      // 创建验证统计对象\n      const stats: ValidationStats = {\n        startTime,\n        endTime: 0,\n        totalDuration: 0,\n        setupDuration: 0,\n        testDuration: 0,\n        reportDuration: 0,\n        cleanupDuration: 0,\n        totalFiles: 0,\n        totalTests: 0,\n        peakMemoryUsage: 0\n      }\n\n      // 1. 准备验证环境\n      const setupStartTime = Date.now()\n      await this.setupValidationEnvironment(context)\n      stats.setupDuration = Date.now() - setupStartTime\n\n      // 执行环境准备后钩子\n      if (this.config.hooks?.afterEnvironmentSetup) {\n        await this.config.hooks.afterEnvironmentSetup(context)\n      }\n\n      // 2. 运行测试\n      const testStartTime = Date.now()\n      const testResult = await this.runValidationTests(context)\n      stats.testDuration = Date.now() - testStartTime\n      stats.totalTests = testResult.totalTests\n\n      // 3. 生成验证结果\n      const endTime = Date.now()\n      stats.endTime = endTime\n      stats.totalDuration = endTime - startTime\n\n      const validationResult: ValidationResult = {\n        success: testResult.success,\n        duration: stats.totalDuration,\n        testResult,\n        report: await this.generateValidationReport(context, testResult, stats),\n        errors: [],\n        warnings: [],\n        stats,\n        timestamp: endTime,\n        validationId\n      }\n\n      // 4. 生成报告\n      const reportStartTime = Date.now()\n      await this.outputValidationReport(validationResult)\n      stats.reportDuration = Date.now() - reportStartTime\n\n      // 5. 清理环境\n      const cleanupStartTime = Date.now()\n      await this.cleanupValidationEnvironment(context)\n      stats.cleanupDuration = Date.now() - cleanupStartTime\n\n      // 执行验证完成后钩子\n      if (this.config.hooks?.afterValidation) {\n        await this.config.hooks.afterValidation(context, validationResult)\n      }\n\n      // 发出验证完成事件\n      this.emit('validation:complete', { context, result: validationResult })\n\n      this.logger.success(`验证完成 (ID: ${validationId}), 耗时: ${stats.totalDuration}ms`)\n\n      return validationResult\n\n    } catch (error) {\n      const validationError = this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '验证过程失败',\n        { cause: error as Error }\n      )\n\n      // 执行验证失败钩子\n      if (this.config.hooks?.onValidationError) {\n        await this.config.hooks.onValidationError(context, validationError)\n      }\n\n      // 发出验证失败事件\n      this.emit('validation:error', { context, error: validationError, validationId })\n\n      // 清理环境\n      try {\n        await this.cleanupValidationEnvironment(context)\n      } catch (cleanupError) {\n        this.logger.warn('清理验证环境时出错:', cleanupError)\n      }\n\n      throw validationError\n    }\n  }\n\n  /**\n   * 设置配置\n   */\n  setConfig(config: PostBuildValidationConfig): void {\n    this.config = this.mergeConfig(this.config, config)\n    this.logger.info('验证配置已更新')\n  }\n\n  /**\n   * 获取配置\n   */\n  getConfig(): PostBuildValidationConfig {\n    return { ...this.config }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    this.logger.info('正在清理 PostBuildValidator 资源...')\n\n    // 清理组件\n    await this.testRunner.dispose()\n    await this.tempEnvironment.dispose()\n\n    // 移除所有事件监听器\n    this.removeAllListeners()\n\n    this.logger.info('PostBuildValidator 资源清理完成')\n  }\n\n  /**\n   * 准备验证环境\n   */\n  private async setupValidationEnvironment(context: ValidationContext): Promise<void> {\n    this.logger.info('准备验证环境...')\n\n    // 创建临时目录\n    await this.tempEnvironment.create(context)\n\n    // 复制构建产物到临时环境\n    await this.tempEnvironment.copyBuildOutputs(context)\n\n    // 安装依赖（如果需要）\n    if (this.config.environment?.installDependencies) {\n      await this.testRunner.installDependencies(context)\n    }\n\n    this.logger.success('验证环境准备完成')\n  }\n\n  /**\n   * 运行验证测试\n   */\n  private async runValidationTests(context: ValidationContext): Promise<any> {\n    this.logger.info('运行验证测试...')\n\n    // 执行测试前钩子\n    if (this.config.hooks?.beforeTestRun) {\n      await this.config.hooks.beforeTestRun(context)\n    }\n\n    // 运行测试\n    const testResult = await this.testRunner.runTests(context)\n\n    // 执行测试后钩子\n    if (this.config.hooks?.afterTestRun) {\n      await this.config.hooks.afterTestRun(context, testResult)\n    }\n\n    this.logger.success(`测试运行完成: ${testResult.passedTests}/${testResult.totalTests} 通过`)\n\n    return testResult\n  }\n\n  /**\n   * 生成验证报告\n   */\n  private async generateValidationReport(\n    context: ValidationContext,\n    testResult: any,\n    stats: ValidationStats\n  ): Promise<ValidationReport> {\n    this.logger.info('生成验证报告...')\n\n    const summary: ValidationSummary = {\n      status: testResult.success ? 'passed' : 'failed',\n      totalFiles: stats.totalFiles,\n      passedFiles: stats.totalFiles, // 简化实现\n      failedFiles: 0,\n      totalTests: testResult.totalTests,\n      passedTests: testResult.passedTests,\n      failedTests: testResult.failedTests,\n      duration: stats.totalDuration\n    }\n\n    const details: ValidationDetails = {\n      fileResults: [],\n      formatResults: [],\n      typeResults: [],\n      styleResults: []\n    }\n\n    const report: ValidationReport = {\n      title: `构建验证报告 - ${context.buildContext.buildId}`,\n      summary,\n      details,\n      recommendations: [],\n      generatedAt: Date.now(),\n      version: '1.0.0'\n    }\n\n    return report\n  }\n\n  /**\n   * 输出验证报告\n   */\n  private async outputValidationReport(result: ValidationResult): Promise<void> {\n    if (this.config.reporting) {\n      await this.reporter.outputReport(result.report, this.config.reporting)\n    }\n  }\n\n  /**\n   * 清理验证环境\n   */\n  private async cleanupValidationEnvironment(context: ValidationContext): Promise<void> {\n    this.logger.info('清理验证环境...')\n\n    if (!this.config.environment?.keepTempFiles) {\n      await this.tempEnvironment.cleanup(context)\n    }\n\n    this.logger.success('验证环境清理完成')\n  }\n\n  /**\n   * 合并配置\n   */\n  private mergeConfig(\n    base: PostBuildValidationConfig,\n    override: PostBuildValidationConfig\n  ): PostBuildValidationConfig {\n    return {\n      ...base,\n      ...override,\n      environment: {\n        ...base.environment,\n        ...override.environment\n      },\n      reporting: {\n        ...base.reporting,\n        ...override.reporting\n      },\n      hooks: {\n        ...base.hooks,\n        ...override.hooks\n      },\n      scope: {\n        ...base.scope,\n        ...override.scope\n      }\n    }\n  }\n}\n","/**\n * Rollup 适配器\n *\n * 提供 Rollup 打包器的适配实现\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type {\n  IBundlerAdapter,\n  UnifiedConfig,\n  AdapterOptions,\n  BundlerSpecificConfig,\n  BundlerSpecificPlugin\n} from '../../types/adapter'\nimport type { BuildResult, BuildWatcher } from '../../types/builder'\nimport type { PerformanceMetrics } from '../../types/performance'\nimport { Logger } from '../../utils/logger'\nimport { BuilderError } from '../../utils/error-handler'\nimport { ErrorCode } from '../../constants/errors'\n\n/**\n * Rollup 适配器类\n */\nexport class RollupAdapter implements IBundlerAdapter {\n  readonly name = 'rollup' as const\n  readonly version: string\n  readonly available: boolean\n\n  private logger: Logger\n  private performanceMonitor: any\n  private multiConfigs?: any[]\n\n  constructor(options: Partial<AdapterOptions> = {}) {\n    this.logger = options.logger || new Logger()\n    this.performanceMonitor = options.performanceMonitor\n\n    // 初始化时假设可用，在实际使用时再检查\n    this.version = 'unknown'\n    this.available = true\n\n    this.logger.debug('Rollup 适配器初始化')\n  }\n\n  /**\n   * 执行构建\n   */\n  async build(config: UnifiedConfig): Promise<BuildResult> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rollup 适配器不可用'\n      )\n    }\n\n    try {\n      const rollup = await this.loadRollup()\n      const rollupConfig = await this.transformConfig(config)\n\n      this.logger.info('开始 Rollup 构建...')\n      const startTime = Date.now()\n\n      let results: any[] = []\n\n      // 如果有多个配置，分别构建每个配置\n      if (this.multiConfigs && this.multiConfigs.length > 1) {\n        for (const singleConfig of this.multiConfigs) {\n          // 创建 bundle\n          const bundle = await rollup.rollup(singleConfig)\n\n          // 生成输出\n          const { output } = await bundle.generate(singleConfig.output)\n          results.push(...output)\n\n          // 写入文件\n          await bundle.write(singleConfig.output)\n          await bundle.close()\n        }\n      } else {\n        // 单配置构建\n        const bundle = await rollup.rollup(rollupConfig)\n\n        // 生成输出\n        const outputs = Array.isArray(rollupConfig.output)\n          ? rollupConfig.output\n          : [rollupConfig.output]\n\n        for (const outputConfig of outputs) {\n          const { output } = await bundle.generate(outputConfig)\n          results.push(...output)\n        }\n\n        // 写入文件\n        for (const outputConfig of outputs) {\n          await bundle.write(outputConfig)\n        }\n\n        await bundle.close()\n      }\n\n      const duration = Date.now() - startTime\n\n      // 构建结果\n      const buildResult: BuildResult = {\n        success: true,\n        outputs: results.map(chunk => ({\n          fileName: chunk.fileName,\n          size: chunk.type === 'chunk' ? chunk.code.length : chunk.source.length,\n          source: chunk.type === 'chunk' ? chunk.code : chunk.source,\n          type: chunk.type,\n          format: 'esm', // TODO: 从配置获取\n          gzipSize: 0 // TODO: 计算 gzip 大小\n        })),\n        duration,\n        stats: {\n          buildTime: duration,\n          fileCount: results.length,\n          totalSize: {\n            raw: results.reduce((total, chunk) =>\n              total + (chunk.type === 'chunk' ? chunk.code.length : chunk.source.length), 0\n            ),\n            gzip: 0,\n            brotli: 0,\n            byType: {},\n            byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 },\n            largest: { file: '', size: 0 },\n            fileCount: results.length\n          },\n          byFormat: {\n            esm: {\n              fileCount: results.length,\n              size: {\n                raw: results.reduce((total, chunk) =>\n                  total + (chunk.type === 'chunk' ? chunk.code.length : chunk.source.length), 0\n                ),\n                gzip: 0,\n                brotli: 0,\n                byType: {},\n                byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 },\n                largest: { file: '', size: 0 },\n                fileCount: results.length\n              }\n            },\n            cjs: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n            umd: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n            iife: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n            css: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } }\n          },\n          modules: {\n            total: 0,\n            external: 0,\n            internal: 0,\n            largest: {\n              id: '',\n              size: 0,\n              renderedLength: 0,\n              originalLength: 0,\n              isEntry: false,\n              isExternal: false,\n              importedIds: [],\n              dynamicallyImportedIds: [],\n              importers: [],\n              dynamicImporters: []\n            }\n          },\n          dependencies: {\n            total: 0,\n            external: [],\n            bundled: [],\n            circular: []\n          }\n        },\n        performance: this.getPerformanceMetrics(),\n        warnings: [],\n        errors: [],\n        buildId: `rollup-${Date.now()}`,\n        timestamp: Date.now(),\n        bundler: 'rollup',\n        mode: 'production'\n      }\n\n      this.logger.success(`Rollup 构建完成 (${duration}ms)`)\n      return buildResult\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `Rollup 构建失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 启动监听模式\n   */\n  async watch(config: UnifiedConfig): Promise<BuildWatcher> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rollup 适配器不可用'\n      )\n    }\n\n    try {\n      const rollup = await this.loadRollup()\n      const rollupConfig = await this.transformConfig(config)\n\n      // 添加监听配置\n      const watchOptions = config.watch || {}\n      const watchConfig = {\n        ...rollupConfig,\n        watch: {\n          include: (watchOptions as any).include || ['src/**/*'],\n          exclude: (watchOptions as any).exclude || ['node_modules/**/*'],\n          ...(typeof watchOptions === 'object' ? watchOptions : {})\n        }\n      }\n\n      const watcher = rollup.watch(watchConfig)\n\n      // 创建统一的监听器接口\n      const buildWatcher = {\n        patterns: watchConfig.watch.include,\n        watching: true,\n\n        async close() {\n          await watcher.close()\n        },\n\n        on(event: string, listener: (...args: any[]) => void) {\n          watcher.on(event, listener)\n          return this\n        },\n\n        off(event: string, listener: (...args: any[]) => void) {\n          watcher.off(event, listener)\n          return this\n        },\n\n        emit(_event: string, ..._args: any[]) {\n          return false // Rollup watcher 不支持 emit\n        }\n      } as BuildWatcher\n\n      this.logger.info('Rollup 监听模式已启动')\n      return buildWatcher\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `启动 Rollup 监听模式失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 转换配置\n   */\n  async transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig> {\n    // 转换为 Rollup 配置格式\n    const basePlugins = await this.getBasePlugins(config)\n\n    const rollupConfig: any = {\n      input: config.input,\n      external: config.external\n    }\n\n    // 转换输出配置\n    if (config.output) {\n      const outputConfig = config.output\n\n      // 处理多格式输出\n      if (Array.isArray(outputConfig.format)) {\n        // 检查是否为多入口构建\n        const isMultiEntry = this.isMultiEntryBuild(config.input)\n\n        // 处理 UMD 格式的特殊逻辑\n        let formats = outputConfig.format\n        let umdConfig: any = null\n\n        if (isMultiEntry) {\n          const originalFormats = [...formats]\n\n          // 检查是否有 UMD 配置且强制启用\n          const hasUMD = formats.includes('umd')\n          const forceUMD = (config as any).umd?.forceMultiEntry || false\n          const umdEnabled = (config as any).umd?.enabled\n\n          this.logger.info(`多入口项目UMD检查: hasUMD=${hasUMD}, forceUMD=${forceUMD}, umdEnabled=${umdEnabled}`)\n\n          if (hasUMD && forceUMD) {\n            // 保留 UMD 格式，但使用特殊的入口配置\n            umdConfig = await this.createUMDConfig(config)\n            this.logger.info('多入口项目强制启用 UMD 构建')\n          } else if (hasUMD) {\n            // 正常情况下过滤 UMD 格式\n            formats = formats.filter(format => format !== 'umd' && format !== 'iife')\n\n            // 但如果启用了 UMD 配置，仍然创建 UMD 构建\n            if ((config as any).umd?.enabled !== false) {\n              umdConfig = await this.createUMDConfig(config)\n              this.logger.info('为多入口项目创建独立的 UMD 构建')\n            }\n          } else {\n            // 即使没有在format中指定umd，也检查umd配置\n            if ((config as any).umd?.enabled) {\n              umdConfig = await this.createUMDConfig(config)\n              this.logger.info('根据UMD配置为多入口项目创建 UMD 构建')\n            }\n            formats = formats.filter(format => format !== 'umd' && format !== 'iife')\n          }\n\n          // 如果过滤了格式，记录警告\n          const filteredFormats = originalFormats.filter(format => !formats.includes(format))\n          if (filteredFormats.length > 0 && !umdConfig) {\n            this.logger.warn(`多入口构建不支持 ${filteredFormats.join(', ')} 格式，已自动过滤`)\n          }\n        } else {\n          // 单入口项目，检查是否需要创建 UMD 构建\n          if (formats.includes('umd') || (config as any).umd?.enabled) {\n            umdConfig = await this.createUMDConfig(config)\n          }\n        }\n\n        // 为多格式输出创建多个配置\n        const configs = []\n\n        for (const format of formats) {\n          const mapped = this.mapFormat(format)\n          const isESM = format === 'esm'\n          const isCJS = format === 'cjs'\n\n          const dir = isESM ? 'es' : isCJS ? 'lib' : 'dist'\n          const entryFileNames = isESM\n            ? '[name].js'\n            : isCJS\n              ? '[name].cjs'\n              : '[name].umd.js'\n          const chunkFileNames = entryFileNames\n\n          // 为每个格式创建独立的插件配置\n          const formatPlugins = await this.transformPluginsForFormat(config.plugins || [], dir)\n\n          configs.push({\n            input: config.input,\n            external: config.external,\n            plugins: [...basePlugins, ...formatPlugins],\n            output: {\n              dir,\n              format: mapped,\n              name: outputConfig.name,\n              sourcemap: outputConfig.sourcemap,\n              globals: outputConfig.globals,\n              entryFileNames,\n              chunkFileNames,\n              exports: (outputConfig as any).exports ?? 'auto',\n              preserveModules: isESM || isCJS,\n              preserveModulesRoot: (isESM || isCJS) ? 'src' : undefined\n            },\n            treeshake: config.treeshake\n          })\n        }\n\n        // 如果有 UMD 配置，添加到配置列表中\n        if (umdConfig) {\n          configs.push(umdConfig)\n        }\n\n        // 返回第一个配置，但保存所有配置供后续使用\n        this.multiConfigs = configs\n        return configs[0] as any\n      } else {\n        const format = (outputConfig as any).format\n        const mapped = this.mapFormat(format)\n        const isESM = format === 'esm'\n        const isCJS = format === 'cjs'\n        const dir = isESM ? 'es' : isCJS ? 'lib' : 'dist'\n        const entryFileNames = isESM\n          ? '[name].js'\n          : isCJS\n            ? '[name].cjs'\n            : '[name].umd.js'\n        const chunkFileNames = entryFileNames\n\n        // 为单格式输出创建插件配置\n        const userPlugins = await this.transformPluginsForFormat(config.plugins || [], dir)\n\n        rollupConfig.plugins = [...basePlugins, ...userPlugins]\n        rollupConfig.output = {\n          dir,\n          format: mapped,\n          name: outputConfig.name,\n          sourcemap: outputConfig.sourcemap,\n          globals: outputConfig.globals,\n          entryFileNames,\n          chunkFileNames,\n          exports: (outputConfig as any).exports ?? 'auto',\n          preserveModules: isESM || isCJS,\n          preserveModulesRoot: (isESM || isCJS) ? 'src' : undefined\n        }\n      }\n    }\n\n    // 转换其他选项\n    if (config.treeshake !== undefined) {\n      rollupConfig.treeshake = config.treeshake\n    }\n\n    return rollupConfig\n  }\n\n  /**\n   * 转换插件\n   */\n  async transformPlugins(plugins: any[]): Promise<BundlerSpecificPlugin[]> {\n    const transformedPlugins: BundlerSpecificPlugin[] = []\n\n    for (const plugin of plugins) {\n      try {\n        // 如果插件有 plugin 函数，调用它来获取实际插件\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\n          const actualPlugin = await plugin.plugin()\n          transformedPlugins.push(actualPlugin)\n        }\n        // 如果插件有 rollup 特定配置，使用它\n        else if (plugin.rollup) {\n          transformedPlugins.push({ ...plugin, ...plugin.rollup })\n        }\n        // 直接使用插件\n        else {\n          transformedPlugins.push(plugin)\n        }\n      } catch (error) {\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\n      }\n    }\n\n    return transformedPlugins\n  }\n\n  /**\n   * 为特定格式转换插件，动态设置TypeScript插件的declarationDir\n   */\n  async transformPluginsForFormat(plugins: any[], outputDir: string): Promise<BundlerSpecificPlugin[]> {\n    const transformedPlugins: BundlerSpecificPlugin[] = []\n\n    for (const plugin of plugins) {\n      try {\n        // 如果插件有 plugin 函数，调用它来获取实际插件\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\n          // 如果是TypeScript插件，需要特殊处理\n          if (plugin.name === 'typescript') {\n            // 重新创建TypeScript插件，设置正确的declarationDir\n            const typescript = await import('@rollup/plugin-typescript')\n\n            // 获取原始的TypeScript选项\n            const originalPlugin = await plugin.plugin()\n            let originalOptions = {}\n\n            // 尝试从原始插件中提取选项\n            if (originalPlugin && typeof originalPlugin === 'object') {\n              // 从插件的内部状态中获取选项（这是一个hack，但是必要的）\n              originalOptions = (originalPlugin as any).options || {}\n            }\n\n            // 创建新的TypeScript插件，覆盖declarationDir和outDir\n            const newPlugin = typescript.default({\n              ...originalOptions,\n              declaration: true,\n              declarationDir: outputDir,\n              outDir: outputDir\n            })\n\n            transformedPlugins.push(newPlugin)\n          } else {\n            // 其他插件正常处理\n            const actualPlugin = await plugin.plugin()\n            transformedPlugins.push(actualPlugin)\n          }\n        }\n        // 如果插件有 rollup 特定配置，使用它\n        else if (plugin.rollup) {\n          transformedPlugins.push({ ...plugin, ...plugin.rollup })\n        }\n        // 直接使用插件\n        else {\n          transformedPlugins.push(plugin)\n        }\n      } catch (error) {\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\n      }\n    }\n\n    return transformedPlugins\n  }\n\n  /**\n   * 检查功能支持\n   */\n  supportsFeature(feature: any): boolean {\n    // Rollup 支持的功能\n    const supportedFeatures = [\n      'treeshaking',\n      'code-splitting',\n      'dynamic-import',\n      'sourcemap',\n      'plugin-system',\n      'config-file',\n      'cache-support'\n    ]\n\n    return supportedFeatures.includes(feature)\n  }\n\n  /**\n   * 获取功能支持映射\n   */\n  getFeatureSupport(): any {\n    return {\n      treeshaking: true,\n      'code-splitting': true,\n      'dynamic-import': true,\n      'worker-support': false,\n      'css-bundling': false,\n      'asset-processing': true,\n      sourcemap: true,\n      minification: false,\n      'hot-reload': false,\n      'module-federation': false,\n      'incremental-build': false,\n      'parallel-build': false,\n      'cache-support': true,\n      'plugin-system': true,\n      'config-file': true\n    }\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getPerformanceMetrics(): PerformanceMetrics {\n    if (this.performanceMonitor && typeof this.performanceMonitor.getMetrics === 'function') {\n      return this.performanceMonitor.getMetrics()\n    }\n\n    // 返回默认指标\n    return {\n      buildTime: 0,\n      memoryUsage: {\n        heapUsed: process.memoryUsage().heapUsed,\n        heapTotal: process.memoryUsage().heapTotal,\n        external: process.memoryUsage().external,\n        rss: process.memoryUsage().rss,\n        peak: 0,\n        trend: []\n      },\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      },\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: {\n        cpuUsage: 0,\n        availableMemory: 0,\n        diskUsage: {\n          total: 0,\n          used: 0,\n          available: 0,\n          usagePercent: 0\n        }\n      }\n    }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    // Rollup 适配器没有需要清理的资源\n  }\n\n  /**\n   * 加载 Rollup\n   */\n  private async loadRollup(): Promise<any> {\n    try {\n      // 使用动态 import 加载 Rollup\n      return await import('rollup')\n    } catch (error) {\n      throw new Error('Rollup 未安装，请运行: npm install rollup --save-dev')\n    }\n  }\n\n  /**\n   * 获取基础插件（内置）\n   * - node-resolve: 解决第三方包解析，并优先浏览器分支\n   * - commonjs: 兼容 CommonJS 包\n   * - json: 允许 import JSON（如某些包内的 package.json 或配置 JSON）\n   */\n  private async getBasePlugins(config: UnifiedConfig): Promise<BundlerSpecificPlugin[]> {\n    try {\n      const { nodeResolve } = await import('@rollup/plugin-node-resolve')\n      const commonjs = (await import('@rollup/plugin-commonjs')).default\n      const json = (await import('@rollup/plugin-json')).default\n\n      const resolvePlugin = nodeResolve({\n        browser: true,\n        preferBuiltins: false,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n      })\n\n      const commonjsPlugin = commonjs({\n        include: /node_modules/,\n        ignoreDynamicRequires: false\n      })\n\n      const jsonPlugin = json()\n\n      const plugins = [\n        resolvePlugin as unknown as BundlerSpecificPlugin,\n        commonjsPlugin as unknown as BundlerSpecificPlugin,\n        jsonPlugin as unknown as BundlerSpecificPlugin\n      ]\n\n      // 添加 Babel 插件（如果启用）\n      const babelPlugin = await this.getBabelPlugin(config)\n      if (babelPlugin) {\n        plugins.push(babelPlugin)\n      }\n\n      return plugins\n    } catch (error) {\n      this.logger.warn('基础插件加载失败，将尝试继续构建', (error as Error).message)\n      return []\n    }\n  }\n\n  /**\n   * 获取 Babel 插件\n   */\n  private async getBabelPlugin(config: UnifiedConfig): Promise<BundlerSpecificPlugin | null> {\n    const babelConfig = (config as any).babel\n\n    if (!babelConfig?.enabled) {\n      return null\n    }\n\n    try {\n      const { getBabelOutputPlugin } = await import('@rollup/plugin-babel')\n\n      const babelOptions: any = {\n        babelHelpers: babelConfig.runtime ? 'runtime' : 'bundled',\n        exclude: babelConfig.exclude || /node_modules/,\n        include: babelConfig.include,\n        extensions: ['.js', '.jsx', '.ts', '.tsx'],\n        presets: babelConfig.presets || [],\n        plugins: babelConfig.plugins || []\n      }\n\n      // 添加默认预设（如果没有指定）\n      if (babelOptions.presets.length === 0) {\n        babelOptions.presets = [\n          ['@babel/preset-env', {\n            targets: babelConfig.targets || 'defaults',\n            useBuiltIns: babelConfig.polyfill === 'usage' ? 'usage' : false,\n            corejs: babelConfig.polyfill ? 3 : false\n          }]\n        ]\n      }\n\n      // 添加运行时插件（如果启用）\n      if (babelConfig.runtime && !babelOptions.plugins.some((p: any) =>\n        (Array.isArray(p) ? p[0] : p).includes('@babel/plugin-transform-runtime')\n      )) {\n        babelOptions.plugins.push(['@babel/plugin-transform-runtime', {\n          corejs: false,\n          helpers: true,\n          regenerator: true,\n          useESModules: true\n        }])\n      }\n\n      // 使用配置文件（如果指定）\n      if (babelConfig.configFile !== false) {\n        babelOptions.configFile = babelConfig.configFile\n      }\n\n      if (babelConfig.babelrc !== false) {\n        babelOptions.babelrc = babelConfig.babelrc\n      }\n\n      return getBabelOutputPlugin(babelOptions) as unknown as BundlerSpecificPlugin\n    } catch (error) {\n      this.logger.warn('Babel 插件加载失败，将跳过 Babel 转换', (error as Error).message)\n      return null\n    }\n  }\n\n  /**\n   * 映射输出格式\n   */\n  private mapFormat(format: any): string {\n    if (typeof format === 'string') {\n      const formatMap: Record<string, string> = {\n        esm: 'es',\n        cjs: 'cjs',\n        umd: 'umd',\n        iife: 'iife'\n      }\n      return formatMap[format] || format\n    }\n    return 'es'\n  }\n\n  /**\n   * 检查是否为多入口构建\n   */\n  private isMultiEntryBuild(input: any): boolean {\n    // 如果input是数组，则为多入口\n    if (Array.isArray(input)) {\n      return input.length > 1\n    }\n\n    // 如果input是对象，则为多入口\n    if (typeof input === 'object' && input !== null) {\n      return Object.keys(input).length > 1\n    }\n\n    // 如果input是字符串且包含glob模式，可能为多入口\n    if (typeof input === 'string') {\n      // 检查是否包含glob通配符\n      return input.includes('*') || input.includes('?') || input.includes('[')\n    }\n\n    return false\n  }\n\n  /**\n   * 创建 UMD 配置\n   */\n  private async createUMDConfig(config: UnifiedConfig): Promise<any> {\n    const umdConfig = (config as any).umd || {}\n    const outputConfig = config.output || {}\n\n    // 确定 UMD 入口文件\n    let umdEntry = umdConfig.entry || 'src/index.ts'\n\n    // 如果入口文件不存在，尝试其他常见的入口文件\n    const fs = await import('fs')\n    const path = await import('path')\n\n    const possibleEntries = [\n      umdEntry,\n      'src/index.ts',\n      'src/index.js',\n      'src/main.ts',\n      'src/main.js',\n      'index.ts',\n      'index.js'\n    ]\n\n    for (const entry of possibleEntries) {\n      if (fs.existsSync(path.resolve(process.cwd(), entry))) {\n        umdEntry = entry\n        break\n      }\n    }\n\n    // 确定 UMD 全局变量名\n    let umdName = umdConfig.name || outputConfig.name\n    if (!umdName) {\n      // 尝试从 package.json 推断\n      try {\n        const packageJson = JSON.parse(fs.readFileSync(path.resolve(process.cwd(), 'package.json'), 'utf-8'))\n        umdName = this.generateUMDName(packageJson.name)\n      } catch {\n        umdName = 'MyLibrary'\n      }\n    }\n\n    // 创建 UMD 构建配置\n    const basePlugins = await this.getBasePlugins(config)\n    const userPlugins = await this.transformPluginsForFormat(config.plugins || [], 'dist')\n\n    // 应用 Banner 和 Footer 配置\n    const bannerConfig = (config as any).banner || {}\n    const banner = await this.resolveBanner(bannerConfig)\n    const footer = await this.resolveFooter(bannerConfig)\n\n    this.logger.info(`UMD Banner配置: ${JSON.stringify(bannerConfig)}`)\n    this.logger.info(`解析后的Banner: ${banner}`)\n\n    return {\n      input: umdEntry,\n      external: config.external,\n      plugins: [...basePlugins, ...userPlugins],\n      output: {\n        format: 'umd',\n        name: umdName,\n        file: `dist/${umdConfig.fileName || 'index.umd.js'}`,\n        sourcemap: outputConfig.sourcemap,\n        globals: { ...outputConfig.globals, ...umdConfig.globals },\n        exports: 'auto',\n        banner,\n        footer,\n        intro: await this.resolveIntro(bannerConfig),\n        outro: await this.resolveOutro(bannerConfig)\n      },\n      treeshake: config.treeshake\n    }\n  }\n\n  /**\n   * 生成 UMD 全局变量名\n   */\n  private generateUMDName(packageName: string): string {\n    if (!packageName) return 'MyLibrary'\n\n    // 移除作用域前缀 (@scope/package -> package)\n    const name = packageName.replace(/^@[^/]+\\//, '')\n\n    // 转换为 PascalCase\n    return name\n      .split(/[-_]/)\n      .map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase())\n      .join('')\n  }\n\n  /**\n   * 解析 Banner\n   */\n  private async resolveBanner(bannerConfig: any): Promise<string | undefined> {\n    const banners: string[] = []\n\n    // 自定义 Banner\n    if (typeof bannerConfig.banner === 'function') {\n      const customBanner = await bannerConfig.banner()\n      if (customBanner) banners.push(customBanner)\n    } else if (typeof bannerConfig.banner === 'string' && bannerConfig.banner) {\n      banners.push(bannerConfig.banner)\n    }\n\n    // 自动生成版权信息\n    if (bannerConfig.copyright) {\n      const copyright = this.generateCopyright(bannerConfig.copyright)\n      if (copyright) banners.push(copyright)\n    }\n\n    // 自动生成构建信息\n    if (bannerConfig.buildInfo) {\n      const buildInfo = this.generateBuildInfo(bannerConfig.buildInfo)\n      if (buildInfo) banners.push(buildInfo)\n    }\n\n    return banners.length > 0 ? banners.join('\\n') : undefined\n  }\n\n  /**\n   * 解析 Footer\n   */\n  private async resolveFooter(bannerConfig: any): Promise<string | undefined> {\n    if (typeof bannerConfig.footer === 'function') {\n      return await bannerConfig.footer()\n    }\n    if (typeof bannerConfig.footer === 'string') {\n      return bannerConfig.footer\n    }\n    return undefined\n  }\n\n  /**\n   * 解析 Intro\n   */\n  private async resolveIntro(bannerConfig: any): Promise<string | undefined> {\n    if (typeof bannerConfig.intro === 'function') {\n      return await bannerConfig.intro()\n    }\n    if (typeof bannerConfig.intro === 'string') {\n      return bannerConfig.intro\n    }\n    return undefined\n  }\n\n  /**\n   * 解析 Outro\n   */\n  private async resolveOutro(bannerConfig: any): Promise<string | undefined> {\n    if (typeof bannerConfig.outro === 'function') {\n      return await bannerConfig.outro()\n    }\n    if (typeof bannerConfig.outro === 'string') {\n      return bannerConfig.outro\n    }\n    return undefined\n  }\n\n  /**\n   * 生成版权信息\n   */\n  private generateCopyright(copyrightConfig: any): string {\n    const config = typeof copyrightConfig === 'object' ? copyrightConfig : {}\n    const year = config.year || new Date().getFullYear()\n    const owner = config.owner || 'Unknown'\n    const license = config.license || 'MIT'\n\n    if (config.template) {\n      return config.template\n        .replace(/\\{year\\}/g, year)\n        .replace(/\\{owner\\}/g, owner)\n        .replace(/\\{license\\}/g, license)\n    }\n\n    return `/*!\\n * Copyright (c) ${year} ${owner}\\n * Licensed under ${license}\\n */`\n  }\n\n  /**\n   * 生成构建信息\n   */\n  private generateBuildInfo(buildInfoConfig: any): string {\n    const config = typeof buildInfoConfig === 'object' ? buildInfoConfig : {}\n    const parts: string[] = []\n\n    if (config.version !== false) {\n      try {\n        const fs = require('fs')\n        const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf-8'))\n        parts.push(`Version: ${packageJson.version}`)\n      } catch {\n        // 忽略错误\n      }\n    }\n\n    if (config.buildTime !== false) {\n      parts.push(`Built: ${new Date().toISOString()}`)\n    }\n\n    if (config.environment !== false) {\n      parts.push(`Environment: ${process.env.NODE_ENV || 'development'}`)\n    }\n\n    if (config.git !== false) {\n      try {\n        const { execSync } = require('child_process')\n        const commit = execSync('git rev-parse --short HEAD', { encoding: 'utf-8' }).trim()\n        parts.push(`Commit: ${commit}`)\n      } catch {\n        // 忽略错误\n      }\n    }\n\n    if (config.template) {\n      return config.template\n    }\n\n    return parts.length > 0 ? `/*!\\n * ${parts.join('\\n * ')}\\n */` : ''\n  }\n\n}\n","/**\n * Rolldown 适配器\n * \n * 提供 Rolldown 打包器的适配实现\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type {\n  IBundlerAdapter,\n  UnifiedConfig,\n  AdapterOptions,\n  BundlerSpecificConfig,\n  BundlerSpecificPlugin\n} from '../../types/adapter'\nimport type { BuildResult, BuildWatcher } from '../../types/builder'\nimport type { PerformanceMetrics } from '../../types/performance'\nimport { Logger } from '../../utils/logger'\nimport { BuilderError } from '../../utils/error-handler'\nimport { ErrorCode } from '../../constants/errors'\n\n/**\n * Rolldown 适配器类\n */\nexport class RolldownAdapter implements IBundlerAdapter {\n  readonly name = 'rolldown' as const\n  readonly version: string\n  readonly available: boolean\n\n  private logger: Logger\n  private performanceMonitor: any\n\n  constructor(options: Partial<AdapterOptions> = {}) {\n    this.logger = options.logger || new Logger()\n    this.performanceMonitor = options.performanceMonitor\n\n    // 在 ES 模块环境中，我们无法在构造函数中同步加载 rolldown\n    // 所以我们假设它是可用的，并在实际使用时进行检查\n    try {\n      const rolldown = this.loadRolldown()\n      this.version = rolldown.VERSION || 'unknown'\n      this.available = true\n      this.logger.debug(`Rolldown 适配器初始化成功 (v${this.version})`)\n    } catch (error) {\n      // 同步加载失败，但这在 ES 模块环境中是预期的\n      // 我们将在实际使用时尝试异步加载\n      this.version = 'unknown'\n      this.available = true // 假设可用，在使用时验证\n      this.logger.debug('Rolldown 同步加载失败，将在使用时异步加载')\n    }\n  }\n\n  /**\n   * 执行构建\n   */\n  async build(config: UnifiedConfig): Promise<BuildResult> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rolldown 适配器不可用'\n      )\n    }\n\n    try {\n      // 尝试加载 rolldown，支持异步加载\n      const rolldown = await this.ensureRolldownLoaded()\n      const rolldownConfig = await this.transformConfig(config)\n\n      this.logger.info('开始 Rolldown 构建...')\n      const startTime = Date.now()\n\n      // 执行构建\n      const result = await rolldown.build(rolldownConfig)\n\n      const duration = Date.now() - startTime\n\n      // 构建结果\n      const buildResult: BuildResult = {\n        success: true,\n        outputs: result.outputs || [],\n        duration,\n        stats: result.stats || {\n          totalSize: 0,\n          gzipSize: 0,\n          files: [],\n          chunks: [],\n          assets: [],\n          modules: [],\n          dependencies: [],\n          warnings: [],\n          errors: []\n        },\n        performance: this.getPerformanceMetrics(),\n        warnings: result.warnings || [],\n        errors: [],\n        buildId: `rolldown-${Date.now()}`,\n        timestamp: Date.now(),\n        bundler: 'rolldown',\n        mode: 'production'\n      }\n\n      this.logger.success(`Rolldown 构建完成 (${duration}ms)`)\n      return buildResult\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `Rolldown 构建失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 启动监听模式\n   */\n  async watch(config: UnifiedConfig): Promise<BuildWatcher> {\n    if (!this.available) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        'Rolldown 适配器不可用'\n      )\n    }\n\n    try {\n      const rolldown = await this.ensureRolldownLoaded()\n      const rolldownConfig = await this.transformConfig(config)\n\n      // 启动监听\n      const watcher = await rolldown.watch(rolldownConfig)\n\n      // 创建统一的监听器接口\n      const watchOptions = config.watch || {}\n      const buildWatcher = {\n        patterns: (typeof watchOptions === 'object' && (watchOptions as any).include) || ['src/**/*'],\n        watching: true,\n\n        async close() {\n          if (watcher && typeof watcher.close === 'function') {\n            await watcher.close()\n          }\n        },\n\n        on(event: string, listener: (...args: any[]) => void) {\n          if (watcher && typeof watcher.on === 'function') {\n            watcher.on(event, listener)\n          }\n          return this\n        },\n\n        off(event: string, listener: (...args: any[]) => void) {\n          if (watcher && typeof watcher.off === 'function') {\n            watcher.off(event, listener)\n          }\n          return this\n        },\n\n        emit(event: string, ...args: any[]) {\n          if (watcher && typeof watcher.emit === 'function') {\n            return watcher.emit(event, ...args)\n          }\n          return false\n        }\n      } as BuildWatcher\n\n      this.logger.info('Rolldown 监听模式已启动')\n      return buildWatcher\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.BUILD_FAILED,\n        `启动 Rolldown 监听模式失败: ${(error as Error).message}`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 转换配置\n   */\n  async transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig> {\n    // 转换为 Rolldown 配置格式\n    const rolldownConfig: any = {\n      input: config.input,\n      external: config.external,\n      plugins: [] // 暂时禁用所有插件来测试基本功能\n    }\n\n    // 转换输出配置\n    if (config.output) {\n      rolldownConfig.output = {\n        dir: config.output.dir,\n        file: config.output.file,\n        // Rolldown 不支持数组格式，只取第一个格式\n        format: Array.isArray(config.output.format) ? config.output.format[0] : config.output.format,\n        name: config.output.name,\n        sourcemap: config.output.sourcemap,\n        globals: config.output.globals\n      }\n    }\n\n    // Rolldown 特有配置\n    if (config.platform) {\n      rolldownConfig.platform = config.platform\n    }\n\n    // 转换其他选项\n    if (config.treeshake !== undefined) {\n      rolldownConfig.treeshake = config.treeshake\n    }\n\n    return rolldownConfig\n  }\n\n  /**\n   * 转换插件\n   */\n  async transformPlugins(plugins: any[]): Promise<BundlerSpecificPlugin[]> {\n    const transformedPlugins: BundlerSpecificPlugin[] = []\n\n    for (const plugin of plugins) {\n      try {\n        // 如果插件有 plugin 函数，调用它来获取实际插件\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\n          const actualPlugin = await plugin.plugin()\n          transformedPlugins.push(actualPlugin)\n        }\n        // 如果插件有 rolldown 特定配置，使用它\n        else if (plugin.rolldown) {\n          transformedPlugins.push({ ...plugin, ...plugin.rolldown })\n        }\n        // 如果插件有 setup 方法，保持原样\n        else if (plugin.setup) {\n          transformedPlugins.push(plugin)\n        }\n        // 尝试转换 Rollup 插件为 Rolldown 格式\n        else {\n          transformedPlugins.push(this.convertRollupPlugin(plugin))\n        }\n      } catch (error) {\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\n      }\n    }\n\n    return transformedPlugins\n  }\n\n  /**\n   * 检查功能支持\n   */\n  supportsFeature(feature: any): boolean {\n    // Rolldown 支持的功能\n    const supportedFeatures = [\n      'treeshaking',\n      'code-splitting',\n      'dynamic-import',\n      'sourcemap',\n      'minification',\n      'plugin-system',\n      'config-file',\n      'cache-support',\n      'parallel-build',\n      'incremental-build'\n    ]\n\n    return supportedFeatures.includes(feature)\n  }\n\n  /**\n   * 获取功能支持映射\n   */\n  getFeatureSupport(): any {\n    return {\n      treeshaking: true,\n      'code-splitting': true,\n      'dynamic-import': true,\n      'worker-support': true,\n      'css-bundling': true,\n      'asset-processing': true,\n      sourcemap: true,\n      minification: true,\n      'hot-reload': false,\n      'module-federation': false,\n      'incremental-build': true,\n      'parallel-build': true,\n      'cache-support': true,\n      'plugin-system': true,\n      'config-file': true\n    }\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getPerformanceMetrics(): PerformanceMetrics {\n    if (this.performanceMonitor) {\n      return this.performanceMonitor.getPerformanceMetrics()\n    }\n\n    // 返回默认指标\n    return {\n      buildTime: 0,\n      memoryUsage: {\n        heapUsed: process.memoryUsage().heapUsed,\n        heapTotal: process.memoryUsage().heapTotal,\n        external: process.memoryUsage().external,\n        rss: process.memoryUsage().rss,\n        peak: 0,\n        trend: []\n      },\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      },\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: {\n        cpuUsage: 0,\n        availableMemory: 0,\n        diskUsage: {\n          total: 0,\n          used: 0,\n          available: 0,\n          usagePercent: 0\n        }\n      }\n    }\n  }\n\n  /**\n   * 清理资源\n   */\n  async dispose(): Promise<void> {\n    // Rolldown 适配器没有需要清理的资源\n  }\n\n  /**\n   * 确保 Rolldown 已加载（支持异步）\n   */\n  private async ensureRolldownLoaded(): Promise<any> {\n    try {\n      // 首先尝试同步加载\n      return this.loadRolldown()\n    } catch (error) {\n      // 同步加载失败，尝试异步加载\n      try {\n        this.logger.debug('尝试异步加载 rolldown...')\n        const rolldown = await import('rolldown')\n        if (rolldown && (rolldown.VERSION || typeof rolldown.build === 'function')) {\n          this.logger.debug(`Rolldown 异步加载成功: ${rolldown.VERSION || 'unknown'}`)\n          return rolldown\n        }\n        throw new Error('Rolldown 模块无效')\n      } catch (asyncError) {\n        throw new BuilderError(\n          ErrorCode.ADAPTER_NOT_AVAILABLE,\n          'Rolldown 未安装或无法加载，请运行: npm install rolldown --save-dev',\n          { cause: asyncError as Error }\n        )\n      }\n    }\n  }\n\n  /**\n   * 加载 Rolldown（同步方式）\n   */\n  private loadRolldown(): any {\n    try {\n      // 方式1: 在 CommonJS 环境中直接使用 require\n      if (typeof require !== 'undefined') {\n        return require('rolldown')\n      }\n\n      // 方式2: 在 ES 模块环境中，尝试使用 createRequire\n      // 由于这是一个同步方法，我们不能使用 async import\n      // 但我们可以尝试访问全局的 require 函数\n\n      // 检查是否在 Node.js 环境中\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // 尝试通过 globalThis 访问 require\n        const globalRequire = (globalThis as any).require\n        if (globalRequire) {\n          return globalRequire('rolldown')\n        }\n\n        // 尝试通过 global 访问 require\n        const nodeGlobal = (global as any)\n        if (nodeGlobal && nodeGlobal.require) {\n          return nodeGlobal.require('rolldown')\n        }\n      }\n\n      throw new Error('无法在当前环境中加载 rolldown 模块')\n    } catch (error) {\n      throw new Error('Rolldown 未安装，请运行: npm install rolldown --save-dev')\n    }\n  }\n\n  /**\n   * 转换 Rollup 插件为 Rolldown 格式\n   */\n  private convertRollupPlugin(plugin: any): any {\n    // 如果插件已经是 Rolldown 格式，直接返回\n    if (plugin.setup) {\n      return plugin\n    }\n\n    // 尝试转换 Rollup 插件\n    return {\n      name: plugin.name || 'unknown',\n      setup(build: any) {\n        // 转换 Rollup 钩子为 Rolldown 钩子\n        if (plugin.resolveId) {\n          build.onResolve({ filter: /.*/ }, plugin.resolveId)\n        }\n\n        if (plugin.load) {\n          build.onLoad({ filter: /.*/ }, plugin.load)\n        }\n\n        if (plugin.transform) {\n          build.onTransform({ filter: /.*/ }, plugin.transform)\n        }\n      }\n    }\n  }\n}\n","/**\n * 适配器工厂\n * \n * 负责创建和管理不同的打包器适配器\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { IBundlerAdapter, AdapterOptions } from '../../types/adapter'\nimport type { BundlerType } from '../../types/bundler'\nimport { ErrorCode } from '../../constants/errors'\nimport { BuilderError } from '../../utils/error-handler'\n\n/**\n * 基础适配器实现（临时）\n */\nclass BaseAdapter implements IBundlerAdapter {\n  readonly name: BundlerType\n  readonly version: string = '1.0.0'\n  readonly available: boolean = true\n\n  constructor(name: BundlerType) {\n    this.name = name\n  }\n\n  async build(_config: any): Promise<any> {\n    // 临时实现，返回模拟结果\n    return {\n      success: true,\n      outputs: [],\n      duration: 1000,\n      stats: {\n        totalSize: 0,\n        gzipSize: 0,\n        files: [],\n        chunks: [],\n        assets: [],\n        modules: [],\n        dependencies: [],\n        warnings: [],\n        errors: []\n      },\n      warnings: [],\n      errors: []\n    }\n  }\n\n  async watch(_config: any): Promise<any> {\n    // 临时实现\n    const mockWatcher = {\n      patterns: ['src/**/*'],\n      watching: true,\n      close: async () => { },\n      on: () => { },\n      off: () => { },\n      emit: () => { }\n    }\n\n    return mockWatcher\n  }\n\n  async transformConfig(config: any): Promise<any> {\n    return config\n  }\n\n  async transformPlugins(plugins: any[]): Promise<any[]> {\n    return plugins\n  }\n\n  supportsFeature(_feature: any): boolean {\n    return true\n  }\n\n  getFeatureSupport(): any {\n    return {}\n  }\n\n  getPerformanceMetrics(): any {\n    return {\n      buildTime: 0,\n      memoryUsage: {\n        heapUsed: 0,\n        heapTotal: 0,\n        external: 0,\n        rss: 0,\n        peak: 0,\n        trend: []\n      },\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        size: 0,\n        entries: 0,\n        timeSaved: 0\n      },\n      fileStats: {\n        totalFiles: 0,\n        filesByType: {},\n        averageProcessingTime: 0,\n        slowestFiles: [],\n        processingRate: 0\n      },\n      pluginPerformance: [],\n      systemResources: {\n        cpuUsage: 0,\n        availableMemory: 0,\n        diskUsage: {\n          total: 0,\n          used: 0,\n          available: 0,\n          usagePercent: 0\n        }\n      }\n    }\n  }\n\n  async dispose(): Promise<void> {\n    // 清理资源\n  }\n}\n\n/**\n * 适配器工厂类\n */\nexport class BundlerAdapterFactory {\n  private static adapters: Map<BundlerType, new (options: AdapterOptions) => IBundlerAdapter> = new Map()\n  private static instances: Map<string, IBundlerAdapter> = new Map()\n\n  /**\n   * 注册适配器\n   */\n  static register(\n    bundler: BundlerType,\n    adapterClass: new (options: AdapterOptions) => IBundlerAdapter\n  ): void {\n    this.adapters.set(bundler, adapterClass)\n  }\n\n  /**\n   * 创建适配器实例\n   */\n  static create(bundler: BundlerType, options: Partial<AdapterOptions> = {}): IBundlerAdapter {\n    // 检查是否已有实例\n    const instanceKey = `${bundler}-${JSON.stringify(options)}`\n    const existingInstance = this.instances.get(instanceKey)\n    if (existingInstance) {\n      return existingInstance\n    }\n\n    // 获取适配器类\n    const AdapterClass = this.adapters.get(bundler)\n\n    if (!AdapterClass) {\n      // 如果没有注册的适配器，使用基础适配器\n      const adapter = new BaseAdapter(bundler)\n      this.instances.set(instanceKey, adapter)\n      return adapter\n    }\n\n    try {\n      // 创建新实例\n      const adapter = new AdapterClass(options as AdapterOptions)\n\n      // 检查适配器是否可用\n      if (!adapter.available) {\n        throw new BuilderError(\n          ErrorCode.ADAPTER_NOT_AVAILABLE,\n          `适配器 ${bundler} 不可用`\n        )\n      }\n\n      this.instances.set(instanceKey, adapter)\n      return adapter\n\n    } catch (error) {\n      throw new BuilderError(\n        ErrorCode.ADAPTER_INIT_ERROR,\n        `创建适配器 ${bundler} 失败`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 获取可用的适配器列表\n   */\n  static getAvailableAdapters(): BundlerType[] {\n    const available: BundlerType[] = []\n\n    for (const bundler of ['rollup', 'rolldown'] as BundlerType[]) {\n      try {\n        const adapter = this.create(bundler)\n        if (adapter.available) {\n          available.push(bundler)\n        }\n      } catch {\n        // 忽略不可用的适配器\n      }\n    }\n\n    return available\n  }\n\n  /**\n   * 检查适配器是否可用\n   */\n  static isAvailable(bundler: BundlerType): boolean {\n    try {\n      const adapter = this.create(bundler)\n      return adapter.available\n    } catch {\n      return false\n    }\n  }\n\n  /**\n   * 清理所有实例\n   */\n  static async dispose(): Promise<void> {\n    const disposePromises = Array.from(this.instances.values()).map(adapter =>\n      adapter.dispose()\n    )\n\n    await Promise.all(disposePromises)\n    this.instances.clear()\n  }\n\n  /**\n   * 获取适配器信息\n   */\n  static getAdapterInfo(bundler: BundlerType): {\n    name: BundlerType\n    version: string\n    available: boolean\n  } {\n    try {\n      const adapter = this.create(bundler)\n      return {\n        name: adapter.name,\n        version: adapter.version,\n        available: adapter.available\n      }\n    } catch {\n      return {\n        name: bundler,\n        version: 'unknown',\n        available: false\n      }\n    }\n  }\n}\n\n// 导入真实的适配器\nimport { RollupAdapter } from '../rollup/RollupAdapter'\nimport { RolldownAdapter } from '../rolldown/RolldownAdapter'\n\n// 注册真实的适配器\nBundlerAdapterFactory.register('rollup', RollupAdapter)\nBundlerAdapterFactory.register('rolldown', RolldownAdapter)\n","/**\n * 库构建器主控制器类\n * \n * 这是 @ldesign/builder 的核心类，负责协调各个组件完成库的构建工作\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { EventEmitter } from 'events'\nimport {\n  ILibraryBuilder,\n  BuilderOptions,\n  BuilderStatus,\n  BuildResult,\n  BuildWatcher\n} from '../types/builder'\nimport type { BuilderConfig } from '../types/config'\nimport type { ValidationResult } from '../types/common'\nimport type { LibraryType } from '../types/library'\nimport type {\n  ValidationResult as PostBuildValidationResult,\n  ValidationContext\n} from '../types/validation'\nimport { ConfigManager } from './ConfigManager'\nimport { StrategyManager } from './StrategyManager'\nimport { PluginManager } from './PluginManager'\nimport { LibraryDetector } from './LibraryDetector'\nimport { PerformanceMonitor } from './PerformanceMonitor'\nimport { PostBuildValidator } from './PostBuildValidator'\nimport { BundlerAdapterFactory } from '../adapters/base/AdapterFactory'\nimport type { IBundlerAdapter } from '../types/adapter'\nimport { Logger, createLogger } from '../utils/logger'\nimport { ErrorHandler, createErrorHandler } from '../utils/error-handler'\nimport { ErrorCode } from '../constants/errors'\nimport { DEFAULT_BUILDER_CONFIG } from '../constants/defaults'\n\n/**\n * 库构建器主控制器类\n * \n * 采用依赖注入模式，统一管理各种服务组件\n * 继承 EventEmitter，支持事件驱动的构建流程\n */\nexport class LibraryBuilder extends EventEmitter implements ILibraryBuilder {\n  /** 当前状态 */\n  private status: BuilderStatus = BuilderStatus.IDLE\n\n  /** 当前配置 */\n  private config: BuilderConfig\n\n  /** 打包核心适配器 */\n  private bundlerAdapter!: IBundlerAdapter\n\n  /** 策略管理器 */\n  private strategyManager!: StrategyManager\n\n  /** 配置管理器 */\n  private configManager!: ConfigManager\n\n  /** 插件管理器 */\n  private pluginManager!: PluginManager\n\n  /** 日志记录器 */\n  private logger!: Logger\n\n  /** 错误处理器 */\n  private errorHandler!: ErrorHandler\n\n  /** 性能监控器 */\n  private performanceMonitor!: PerformanceMonitor\n\n  /** 库类型检测器 */\n  private libraryDetector!: LibraryDetector\n\n  /** 打包后验证器 */\n  private postBuildValidator!: PostBuildValidator\n\n  /** 当前构建统计 */\n  private currentStats: any = null\n\n  /** 当前性能指标 */\n  private currentMetrics: any = null\n\n  constructor(options: BuilderOptions = {}) {\n    super()\n\n    // 初始化各种服务\n    this.initializeServices(options)\n\n    // 设置事件监听器\n    this.setupEventListeners()\n\n    // 设置错误处理\n    this.setupErrorHandling()\n\n    // 初始化配置\n    this.config = { ...DEFAULT_BUILDER_CONFIG, ...options.config }\n  }\n\n  /**\n   * 执行库构建\n   * \n   * @param config 可选的配置覆盖\n   * @returns 构建结果\n   */\n  async build(config?: BuilderConfig): Promise<BuildResult> {\n    const buildId = this.generateBuildId()\n\n    try {\n      // 设置构建状态\n      this.setStatus(BuilderStatus.BUILDING)\n\n      // 合并配置\n      const mergedConfig = config ? this.mergeConfig(this.config, config) : this.config\n\n      // 发出构建开始事件\n      this.emit('build:start', {\n        config: mergedConfig,\n        timestamp: Date.now(),\n        buildId\n      })\n\n      // 开始性能监控\n      this.performanceMonitor.startBuild(buildId)\n\n      // 获取库类型（优先使用配置中指定的类型）\n      let libraryType = mergedConfig.libraryType || await this.detectLibraryType(mergedConfig.input as string)\n\n      // 确保 libraryType 是正确的枚举值\n      if (typeof libraryType === 'string') {\n        libraryType = libraryType as LibraryType\n      }\n\n      // 获取构建策略\n      const strategy = this.strategyManager.getStrategy(libraryType)\n\n      // 应用策略配置\n      const strategyConfig = await strategy.applyStrategy(mergedConfig)\n\n      // 执行构建\n      const result = await this.bundlerAdapter.build(strategyConfig)\n\n      // 执行打包后验证（如果启用）\n      let validationResult: PostBuildValidationResult | undefined\n      if (mergedConfig.postBuildValidation?.enabled) {\n        validationResult = await this.runPostBuildValidation(mergedConfig, result, buildId)\n      }\n\n      // 结束性能监控\n      const metrics = this.performanceMonitor.endBuild(buildId)\n\n      // 构建成功\n      const buildResult: BuildResult = {\n        success: true,\n        outputs: result.outputs,\n        duration: metrics.buildTime,\n        stats: result.stats,\n        performance: metrics,\n        warnings: result.warnings || [],\n        errors: [],\n        buildId,\n        timestamp: Date.now(),\n        bundler: this.bundlerAdapter.name,\n        mode: mergedConfig.mode || 'production',\n        libraryType,\n        validation: validationResult\n      }\n\n      // 保存统计信息\n      this.currentStats = buildResult.stats\n      this.currentMetrics = buildResult.performance\n\n      // 发出构建结束事件\n      this.emit('build:end', {\n        result: buildResult,\n        duration: buildResult.duration,\n        timestamp: Date.now()\n      })\n\n      // 重置状态\n      this.setStatus(BuilderStatus.IDLE)\n\n      return buildResult\n\n    } catch (error) {\n      // 处理构建错误\n      const buildError = this.handleBuildError(error as Error, buildId)\n\n      // 发出错误事件\n      this.emit('build:error', {\n        error: buildError,\n        phase: 'build',\n        timestamp: Date.now()\n      })\n\n      // 重置状态\n      this.setStatus(BuilderStatus.ERROR)\n\n      throw buildError\n    }\n  }\n\n  /**\n   * 启动监听构建模式\n   * \n   * @param config 可选的配置覆盖\n   * @returns 构建监听器\n   */\n  async buildWatch(config?: BuilderConfig): Promise<BuildWatcher> {\n    try {\n      // 设置监听状态\n      this.setStatus(BuilderStatus.WATCHING)\n\n      // 合并配置\n      const mergedConfig = config ? this.mergeConfig(this.config, config) : this.config\n\n      // 获取库类型（优先使用配置中指定的类型）\n      let libraryType = mergedConfig.libraryType || await this.detectLibraryType(mergedConfig.input as string)\n\n      // 确保 libraryType 是正确的枚举值\n      if (typeof libraryType === 'string') {\n        libraryType = libraryType as LibraryType\n      }\n\n      // 获取构建策略\n      const strategy = this.strategyManager.getStrategy(libraryType)\n\n      // 应用策略配置\n      const strategyConfig = await strategy.applyStrategy(mergedConfig)\n\n      // 启动监听\n      const watcher = await this.bundlerAdapter.watch(strategyConfig)\n\n      // 发出监听开始事件\n      this.emit('watch:start', {\n        patterns: watcher.patterns,\n        timestamp: Date.now()\n      })\n\n      return watcher\n\n    } catch (error) {\n      this.setStatus(BuilderStatus.ERROR)\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '启动监听模式失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 合并配置\n   */\n  mergeConfig(base: BuilderConfig, override: BuilderConfig): BuilderConfig {\n    return this.configManager.mergeConfigs(base, override)\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): ValidationResult {\n    return this.configManager.validateConfig(config)\n  }\n\n  /**\n   * 加载配置文件\n   */\n  async loadConfig(configPath?: string): Promise<BuilderConfig> {\n    const config = await this.configManager.loadConfig(configPath ? { configFile: configPath } : {})\n    this.config = config\n    return config\n  }\n\n  /**\n   * 切换打包核心\n   */\n  setBundler(bundler: 'rollup' | 'rolldown'): void {\n    try {\n      this.bundlerAdapter = BundlerAdapterFactory.create(bundler, {\n        logger: this.logger,\n        performanceMonitor: this.performanceMonitor\n      })\n\n      this.logger.info(`已切换到 ${bundler} 打包核心`)\n    } catch (error) {\n      throw this.errorHandler.createError(\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\n        `切换到 ${bundler} 失败`,\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 获取当前打包核心\n   */\n  getBundler(): 'rollup' | 'rolldown' {\n    return this.bundlerAdapter.name\n  }\n\n  /**\n   * 设置库类型\n   */\n  setLibraryType(type: LibraryType): void {\n    this.config.libraryType = type\n    this.logger.info(`已设置库类型为: ${type}`)\n  }\n\n  /**\n   * 检测库类型\n   */\n  async detectLibraryType(projectPath: string): Promise<LibraryType> {\n    const result = await this.libraryDetector.detect(projectPath)\n    return result.type\n  }\n\n  /**\n   * 获取当前状态\n   */\n  getStatus(): BuilderStatus {\n    return this.status\n  }\n\n  /**\n   * 是否正在构建\n   */\n  isBuilding(): boolean {\n    return this.status === 'building'\n  }\n\n  /**\n   * 是否正在监听\n   */\n  isWatching(): boolean {\n    return this.status === 'watching'\n  }\n\n  /**\n   * 初始化\n   */\n  async initialize(): Promise<void> {\n    this.setStatus(BuilderStatus.INITIALIZING)\n\n    try {\n      // 加载配置\n      await this.loadConfig()\n\n      // 初始化适配器\n      this.setBundler(this.config.bundler || 'rollup')\n\n      this.setStatus(BuilderStatus.IDLE)\n      this.logger.success('LibraryBuilder 初始化完成')\n    } catch (error) {\n      this.setStatus(BuilderStatus.ERROR)\n      throw this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        '初始化失败',\n        { cause: error as Error }\n      )\n    }\n  }\n\n  /**\n   * 销毁资源\n   */\n  async dispose(): Promise<void> {\n    this.setStatus(BuilderStatus.DISPOSED)\n\n    // 清理适配器\n    if (this.bundlerAdapter) {\n      await this.bundlerAdapter.dispose()\n    }\n\n    // 清理插件管理器\n    if (this.pluginManager) {\n      await this.pluginManager.dispose()\n    }\n\n    // 清理验证器\n    if (this.postBuildValidator) {\n      await this.postBuildValidator.dispose()\n    }\n\n    // 移除所有事件监听器\n    this.removeAllListeners()\n\n    this.logger.info('LibraryBuilder 已销毁')\n  }\n\n  /**\n   * 获取构建统计信息\n   */\n  getStats(): any {\n    return this.currentStats\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getPerformanceMetrics(): any {\n    return this.currentMetrics\n  }\n\n  /**\n   * 初始化各种服务\n   */\n  private initializeServices(options: BuilderOptions): void {\n    // 初始化日志记录器\n    this.logger = options.logger || createLogger({\n      level: 'info',\n      prefix: '@ldesign/builder'\n    })\n\n    // 初始化错误处理器\n    this.errorHandler = createErrorHandler({\n      logger: this.logger,\n      showSuggestions: true\n    })\n\n    // 初始化性能监控器\n    this.performanceMonitor = new PerformanceMonitor({\n      logger: this.logger\n    })\n\n    // 初始化配置管理器\n    this.configManager = new ConfigManager({\n      logger: this.logger\n    })\n\n    // 初始化策略管理器\n    this.strategyManager = new StrategyManager({\n      autoDetection: true,\n      cache: true\n    } as any)\n\n    // 初始化插件管理器\n    this.pluginManager = new PluginManager({\n      cache: true,\n      hotReload: false\n    } as any)\n\n    // 初始化库类型检测器\n    this.libraryDetector = new LibraryDetector({\n      logger: this.logger\n    })\n\n    // 初始化打包后验证器\n    this.postBuildValidator = new PostBuildValidator({}, {\n      logger: this.logger,\n      errorHandler: this.errorHandler\n    })\n\n    // 初始化默认适配器\n    this.bundlerAdapter = BundlerAdapterFactory.create('rollup', {\n      logger: this.logger,\n      performanceMonitor: this.performanceMonitor\n    })\n  }\n\n  /**\n   * 设置事件监听器\n   */\n  private setupEventListeners(): void {\n    // 监听配置变化\n    this.configManager.on('config:change', (config: BuilderConfig) => {\n      this.config = config\n      this.emit('config:change', {\n        config,\n        oldConfig: this.config,\n        timestamp: Date.now()\n      })\n    })\n  }\n\n  /**\n   * 设置错误处理\n   */\n  private setupErrorHandling(): void {\n    // 处理未捕获的错误\n    this.on('error', (error) => {\n      this.errorHandler.handle(error, 'LibraryBuilder')\n    })\n  }\n\n  /**\n   * 设置状态\n   */\n  private setStatus(status: BuilderStatus): void {\n    const oldStatus = this.status\n    this.status = status\n\n    this.emit('status:change', {\n      status,\n      oldStatus,\n      timestamp: Date.now()\n    })\n  }\n\n  /**\n   * 生成构建 ID\n   */\n  private generateBuildId(): string {\n    return `build-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`\n  }\n\n\n\n\n\n  /**\n   * 处理构建错误\n   */\n  private handleBuildError(error: Error, buildId: string): Error {\n    this.performanceMonitor.recordError(buildId, error)\n\n    if (error instanceof Error) {\n      return this.errorHandler.createError(\n        ErrorCode.BUILD_FAILED,\n        `构建失败: ${error.message}`,\n        { cause: error }\n      )\n    }\n\n    return this.errorHandler.createError(\n      ErrorCode.BUILD_FAILED,\n      '构建失败: 未知错误'\n    )\n  }\n\n  /**\n   * 运行打包后验证\n   */\n  private async runPostBuildValidation(\n    config: BuilderConfig,\n    buildResult: any,\n    buildId: string\n  ): Promise<PostBuildValidationResult> {\n    this.logger.info('开始打包后验证...')\n\n    try {\n      // 创建验证上下文\n      const validationContext: ValidationContext = {\n        buildContext: {\n          buildId,\n          startTime: Date.now(),\n          config,\n          cwd: process.cwd(),\n          cacheDir: '.cache',\n          tempDir: '.temp',\n          watch: false,\n          env: process.env as Record<string, string>,\n          logger: this.logger,\n          performanceMonitor: this.performanceMonitor\n        },\n        buildResult: {\n          success: true,\n          outputs: buildResult.outputs,\n          duration: 0,\n          stats: buildResult.stats,\n          performance: this.currentMetrics || {} as any,\n          warnings: buildResult.warnings || [],\n          errors: [],\n          buildId,\n          timestamp: Date.now(),\n          bundler: this.bundlerAdapter.name,\n          mode: config.mode || 'production',\n          libraryType: config.libraryType\n        },\n        config: config.postBuildValidation || {},\n        tempDir: '',\n        startTime: Date.now(),\n        validationId: `validation-${buildId}`,\n        projectRoot: process.cwd(),\n        outputDir: config.output?.dir || 'dist'\n      }\n\n      // 更新验证器配置\n      if (config.postBuildValidation) {\n        this.postBuildValidator.setConfig(config.postBuildValidation)\n      }\n\n      // 执行验证\n      const validationResult = await this.postBuildValidator.validate(validationContext)\n\n      // 如果验证失败且配置为失败时停止构建\n      if (!validationResult.success && config.postBuildValidation?.failOnError) {\n        throw this.errorHandler.createError(\n          ErrorCode.BUILD_FAILED,\n          '打包后验证失败',\n          {\n            cause: new Error(`验证失败: ${validationResult.errors.length} 个错误`)\n          }\n        )\n      }\n\n      this.logger.success('打包后验证完成')\n      return validationResult\n\n    } catch (error) {\n      this.logger.error('打包后验证失败:', error)\n      throw error\n    }\n  }\n}\n","/**\n * Vue2 策略\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\n\nexport class Vue2Strategy implements ILibraryStrategy {\n  readonly name = 'vue2'\n  readonly supportedTypes: LibraryType[] = [LibraryType.VUE2]\n  readonly priority = 10\n\n  async applyStrategy(config: BuilderConfig): Promise<any> {\n    return config\n  }\n\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.VUE2\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {}\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] {\n    return []\n  }\n\n  validateConfig(_config: BuilderConfig): any {\n    return {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: []\n    }\n  }\n}\n","/**\n * 适配器相关类型定义\n */\n\nimport type { BuildResult, BuildWatcher } from './builder'\nimport type { PerformanceMetrics } from './performance'\nimport type { UnifiedPlugin, PluginBuild } from './plugin'\nimport type { WatchOptions } from './common'\n\n/**\n * 打包器功能枚举\n */\nexport enum BundlerFeature {\n  TREE_SHAKING = 'treeshaking',\n  CODE_SPLITTING = 'code-splitting',\n  DYNAMIC_IMPORT = 'dynamic-import',\n  WORKER_SUPPORT = 'worker-support',\n  CSS_BUNDLING = 'css-bundling',\n  ASSET_PROCESSING = 'asset-processing',\n  SOURCEMAP = 'sourcemap',\n  MINIFICATION = 'minification',\n  HOT_RELOAD = 'hot-reload',\n  MODULE_FEDERATION = 'module-federation',\n  INCREMENTAL_BUILD = 'incremental-build',\n  PARALLEL_BUILD = 'parallel-build',\n  CACHE_SUPPORT = 'cache-support',\n  PLUGIN_SYSTEM = 'plugin-system',\n  CONFIG_FILE = 'config-file'\n}\n\n/**\n * 功能支持映射\n */\nexport type FeatureSupportMap = Record<BundlerFeature, boolean>\n\n/**\n * 统一配置接口\n */\nexport interface UnifiedConfig {\n  // 基础配置\n  input: string | string[] | Record<string, string>\n  output: UnifiedOutputConfig\n\n  // 外部依赖\n  external?: string[] | ((id: string) => boolean)\n  globals?: Record<string, string>\n\n  // 插件配置\n  plugins?: UnifiedPlugin[]\n\n  // 优化配置\n  treeshake?: boolean | TreeshakeOptions\n  minify?: boolean | MinifyOptions\n\n  // 开发配置\n  sourcemap?: boolean | 'inline' | 'hidden'\n  watch?: boolean | WatchOptions\n\n  // 平台配置 (Rolldown 特有)\n  platform?: 'browser' | 'node' | 'neutral'\n\n  // 模块格式\n  format?: OutputFormat | OutputFormat[]\n\n  // 代码分割\n  manualChunks?: Record<string, string[]> | ((id: string) => string | void)\n\n  // 其他选项\n  [key: string]: any\n}\n\n/**\n * 统一输出配置\n */\nexport interface UnifiedOutputConfig {\n  dir?: string\n  file?: string\n  format?: OutputFormat | OutputFormat[]\n  name?: string\n  fileName?: string | ((chunkInfo: ChunkInfo) => string)\n  chunkFileNames?: string\n  assetFileNames?: string\n  sourcemap?: boolean | 'inline' | 'hidden'\n  globals?: Record<string, string>\n  banner?: string | (() => string | Promise<string>)\n  footer?: string | (() => string | Promise<string>)\n  intro?: string | (() => string | Promise<string>)\n  outro?: string | (() => string | Promise<string>)\n}\n\n/**\n * 输出格式\n */\nexport type OutputFormat = 'esm' | 'cjs' | 'umd' | 'iife' | 'css'\n\n/**\n * Chunk 信息\n */\nexport interface ChunkInfo {\n  isEntry: boolean\n  isDynamicEntry: boolean\n  name: string\n  moduleIds: string[]\n  imports: string[]\n  dynamicImports: string[]\n  exports: string[]\n  referencedFiles: string[]\n  type: 'chunk' | 'asset'\n  fileName: string\n  preliminaryFileName: string\n}\n\n/**\n * Tree Shaking 选项\n */\nexport interface TreeshakeOptions {\n  annotations?: boolean\n  moduleSideEffects?: boolean | string[] | ((id: string) => boolean)\n  propertyReadSideEffects?: boolean\n  tryCatchDeoptimization?: boolean\n  unknownGlobalSideEffects?: boolean\n}\n\n/**\n * 压缩选项\n */\nexport interface MinifyOptions {\n  compress?: any\n  mangle?: any\n  format?: any\n  sourceMap?: any\n}\n\n// WatchOptions 已在 common.ts 中定义，这里导入\nexport type { WatchOptions } from './common'\n\n// UnifiedPlugin 已在 plugin.ts 中定义，这里导入\nexport type { UnifiedPlugin } from './plugin'\n\n// PluginBuild 已在 plugin.ts 中定义，这里导入\nexport type { PluginBuild } from './plugin'\n\n// RollupPluginConfig 已在 plugin.ts 中定义，这里导入\nexport type { RollupPluginConfig } from './plugin'\n\n// RolldownPluginConfig 已在 plugin.ts 中定义，这里导入\nexport type { RolldownPluginConfig } from './plugin'\n\n/**\n * 打包核心适配器接口\n */\nexport interface IBundlerAdapter {\n  /** 适配器名称 */\n  readonly name: 'rollup' | 'rolldown'\n\n  /** 适配器版本 */\n  readonly version: string\n\n  /** 是否可用 */\n  readonly available: boolean\n\n  // 核心构建方法\n  build(config: UnifiedConfig): Promise<BuildResult>\n  watch(config: UnifiedConfig): Promise<BuildWatcher>\n\n  // 配置转换\n  transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig>\n\n  // 插件处理\n  transformPlugins(plugins: UnifiedPlugin[]): Promise<BundlerSpecificPlugin[]>\n\n  // 功能检测\n  supportsFeature(feature: BundlerFeature): boolean\n  getFeatureSupport(): FeatureSupportMap\n\n  // 性能监控\n  getPerformanceMetrics(): PerformanceMetrics\n\n  // 生命周期钩子\n  onBuildStart?(config: UnifiedConfig): Promise<void> | void\n  onBuildEnd?(result: BuildResult): Promise<void> | void\n  onError?(error: Error): Promise<void> | void\n\n  // 资源清理\n  dispose(): Promise<void>\n}\n\n/**\n * 打包器特定配置\n */\nexport type BundlerSpecificConfig = RollupOptions | RolldownOptions\n\n/**\n * Rollup 配置选项\n */\nexport interface RollupOptions {\n  input: string | string[] | Record<string, string>\n  output?: RollupOutputOptions | RollupOutputOptions[]\n  external?: string[] | ((id: string) => boolean)\n  plugins?: RollupPlugin[]\n  treeshake?: boolean | TreeshakeOptions\n  watch?: RollupWatchOptions\n  [key: string]: any\n}\n\n/**\n * Rollup 输出选项\n */\nexport interface RollupOutputOptions {\n  dir?: string\n  file?: string\n  format?: RollupFormat\n  name?: string\n  globals?: Record<string, string>\n  sourcemap?: boolean | 'inline' | 'hidden'\n  entryFileNames?: string | ((chunkInfo: any) => string)\n  chunkFileNames?: string\n  assetFileNames?: string\n  banner?: string | (() => string | Promise<string>)\n  footer?: string | (() => string | Promise<string>)\n  intro?: string | (() => string | Promise<string>)\n  outro?: string | (() => string | Promise<string>)\n  [key: string]: any\n}\n\n/**\n * Rollup 格式\n */\nexport type RollupFormat = 'es' | 'cjs' | 'umd' | 'iife' | 'system' | 'amd'\n\n/**\n * Rollup 监听选项\n */\nexport interface RollupWatchOptions extends Omit<RollupOptions, 'watch'> {\n  watch?: {\n    include?: string | string[]\n    exclude?: string | string[]\n    chokidar?: any\n    buildDelay?: number\n    clearScreen?: boolean\n  }\n}\n\n/**\n * Rollup 插件\n */\nexport interface RollupPlugin {\n  name: string\n  buildStart?: (opts: any) => void | Promise<void>\n  resolveId?: (id: string, importer?: string) => string | null | Promise<string | null>\n  load?: (id: string) => string | null | Promise<string | null>\n  transform?: (code: string, id: string) => any | Promise<any>\n  generateBundle?: (opts: any, bundle: any) => void | Promise<void>\n  writeBundle?: (opts: any, bundle: any) => void | Promise<void>\n  [key: string]: any\n}\n\n/**\n * Rolldown 配置选项\n */\nexport interface RolldownOptions {\n  input: string | string[] | Record<string, string>\n  output?: RolldownOutputOptions\n  external?: string[] | ((id: string) => boolean)\n  plugins?: RolldownPlugin[]\n  treeshake?: boolean | TreeshakeOptions\n  platform?: 'browser' | 'node' | 'neutral'\n  watch?: boolean | WatchOptions\n  [key: string]: any\n}\n\n/**\n * Rolldown 输出选项\n */\nexport interface RolldownOutputOptions {\n  dir?: string\n  file?: string\n  format?: RolldownFormat\n  name?: string\n  globals?: Record<string, string>\n  sourcemap?: boolean | 'inline' | 'hidden'\n  entryFileNames?: string\n  chunkFileNames?: string\n  assetFileNames?: string\n  banner?: string | (() => string | Promise<string>)\n  footer?: string | (() => string | Promise<string>)\n  intro?: string | (() => string | Promise<string>)\n  outro?: string | (() => string | Promise<string>)\n  [key: string]: any\n}\n\n/**\n * Rolldown 格式\n */\nexport type RolldownFormat = 'esm' | 'cjs' | 'umd' | 'iife'\n\n/**\n * Rolldown 插件\n */\nexport interface RolldownPlugin {\n  name: string\n  setup?: (build: PluginBuild) => void | Promise<void>\n  [key: string]: any\n}\n\n/**\n * 打包器特定插件\n */\nexport type BundlerSpecificPlugin = RollupPlugin | RolldownPlugin\n\n/**\n * 适配器选项\n */\nexport interface AdapterOptions {\n  logger: any\n  performanceMonitor: any\n  cacheDir?: string\n  tempDir?: string\n}\n\n/**\n * 配置转换器接口\n */\nexport interface ConfigTransformer {\n  transform(config: UnifiedConfig): BundlerSpecificConfig\n}\n\n/**\n * 插件转换器接口\n */\nexport interface PluginTransformer {\n  transform(plugins: UnifiedPlugin[]): BundlerSpecificPlugin[]\n}\n\n/**\n * 结果转换器接口\n */\nexport interface ResultTransformer {\n  transform(result: any, context: TransformContext): BuildResult\n  transformWatcher(watcher: any, context: TransformContext): BuildWatcher\n}\n\n/**\n * 转换上下文\n */\nexport interface TransformContext {\n  bundler: string\n  config: UnifiedConfig\n  duration?: number\n  [key: string]: any\n}\n\n// PerformanceComparison 已在 performance.ts 中定义，这里导入\nexport type { PerformanceComparison } from './performance'\n\n/**\n * 性能结果\n */\nexport interface PerformanceResult {\n  adapter: string\n  buildTime: number\n  memoryUsage: number\n  bundleSize: number\n  success: boolean\n  error?: string\n  features: FeatureSupportMap\n}\n\n/**\n * 对比报告\n */\nexport interface ComparisonReport {\n  buildTimeComparison: any\n  memorySizeComparison: any\n  bundleSizeComparison: any\n  featureComparison: any\n}\n","/**\n * 插件相关类型定义\n */\n\n/**\n * 插件类型枚举\n */\nexport enum PluginType {\n  /** 核心插件 */\n  CORE = 'core',\n  /** 转换插件 */\n  TRANSFORM = 'transform',\n  /** 优化插件 */\n  OPTIMIZATION = 'optimization',\n  /** 工具插件 */\n  UTILITY = 'utility',\n  /** 开发插件 */\n  DEVELOPMENT = 'development',\n  /** 自定义插件 */\n  CUSTOM = 'custom'\n}\n\n/**\n * 插件阶段枚举\n */\nexport enum PluginPhase {\n  /** 构建开始前 */\n  PRE_BUILD = 'pre-build',\n  /** 模块解析 */\n  RESOLVE = 'resolve',\n  /** 模块加载 */\n  LOAD = 'load',\n  /** 代码转换 */\n  TRANSFORM = 'transform',\n  /** 代码生成 */\n  GENERATE = 'generate',\n  /** 构建完成后 */\n  POST_BUILD = 'post-build'\n}\n\n/**\n * 统一插件接口\n */\nexport interface UnifiedPlugin {\n  /** 插件名称 */\n  name: string\n\n  /** 插件类型 */\n  type?: PluginType\n\n  /** 插件版本 */\n  version?: string\n\n  /** 插件描述 */\n  description?: string\n\n  /** 插件作者 */\n  author?: string\n\n  /** 插件优先级 */\n  priority?: number\n\n  /** 插件依赖 */\n  dependencies?: string[]\n\n  /** 插件选项 */\n  options?: Record<string, any>\n\n  /** 是否启用 */\n  enabled?: boolean\n\n  /** 应用条件 */\n  condition?: (context: PluginContext) => boolean\n\n  // 通用钩子\n  setup?: (build: PluginBuild) => void | Promise<void>\n\n  // Rollup 兼容钩子\n  buildStart?: (opts: any) => void | Promise<void>\n  resolveId?: (id: string, importer?: string) => string | null | Promise<string | null>\n  load?: (id: string) => string | null | Promise<string | null>\n  transform?: (code: string, id: string) => any | Promise<any>\n  generateBundle?: (opts: any, bundle: any) => void | Promise<void>\n  writeBundle?: (opts: any, bundle: any) => void | Promise<void>\n\n  // 生命周期钩子\n  onInit?: (context: PluginContext) => void | Promise<void>\n  onDestroy?: (context: PluginContext) => void | Promise<void>\n  onError?: (error: Error, context: PluginContext) => void | Promise<void>\n\n  // 适配器特定配置\n  rollup?: RollupPluginConfig\n  rolldown?: RolldownPluginConfig\n\n  // 插件元数据\n  meta?: PluginMetadata\n}\n\n/**\n * 插件构建接口\n */\nexport interface PluginBuild {\n  /** 构建开始时调用 */\n  onStart(callback: () => void | Promise<void>): void\n\n  /** 模块解析时调用 */\n  onResolve(options: ResolveOptions, callback: ResolveCallback): void\n\n  /** 模块加载时调用 */\n  onLoad(options: LoadOptions, callback: LoadCallback): void\n\n  /** 代码转换时调用 */\n  onTransform(options: TransformOptions, callback: TransformCallback): void\n\n  /** 构建结束时调用 */\n  onEnd(callback: () => void | Promise<void>): void\n\n  /** 获取构建上下文 */\n  getContext(): PluginContext\n\n  /** 添加监听文件 */\n  addWatchFile(file: string): void\n\n  /** 发出资源文件 */\n  emitFile(file: EmittedFile): string\n\n  /** 获取文件名 */\n  getFileName(referenceId: string): string\n}\n\n/**\n * 解析选项\n */\nexport interface ResolveOptions {\n  /** 文件过滤器 */\n  filter: RegExp\n\n  /** 命名空间 */\n  namespace?: string\n}\n\n/**\n * 解析回调\n */\nexport type ResolveCallback = (args: ResolveArgs) => ResolveResult | Promise<ResolveResult>\n\n/**\n * 解析参数\n */\nexport interface ResolveArgs {\n  /** 模块 ID */\n  path: string\n\n  /** 导入者 */\n  importer: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 解析目录 */\n  resolveDir: string\n\n  /** 导入类型 */\n  kind: ImportKind\n}\n\n/**\n * 导入类型\n */\nexport type ImportKind =\n  | 'entry-point'\n  | 'import-statement'\n  | 'require-call'\n  | 'dynamic-import'\n  | 'require-resolve'\n  | 'import-rule'\n  | 'url-token'\n\n/**\n * 解析结果\n */\nexport interface ResolveResult {\n  /** 解析后的路径 */\n  path?: string\n\n  /** 外部模块 */\n  external?: boolean\n\n  /** 命名空间 */\n  namespace?: string\n\n  /** 后缀 */\n  suffix?: string\n\n  /** 插件数据 */\n  pluginData?: any\n\n  /** 错误信息 */\n  errors?: Message[]\n\n  /** 警告信息 */\n  warnings?: Message[]\n\n  /** 监听文件 */\n  watchFiles?: string[]\n\n  /** 监听目录 */\n  watchDirs?: string[]\n}\n\n/**\n * 加载选项\n */\nexport interface LoadOptions {\n  /** 文件过滤器 */\n  filter: RegExp\n\n  /** 命名空间 */\n  namespace?: string\n}\n\n/**\n * 加载回调\n */\nexport type LoadCallback = (args: LoadArgs) => LoadResult | Promise<LoadResult>\n\n/**\n * 加载参数\n */\nexport interface LoadArgs {\n  /** 文件路径 */\n  path: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 后缀 */\n  suffix: string\n\n  /** 插件数据 */\n  pluginData: any\n}\n\n/**\n * 加载结果\n */\nexport interface LoadResult {\n  /** 文件内容 */\n  contents?: string | Uint8Array\n\n  /** 加载器 */\n  loader?: Loader\n\n  /** 解析目录 */\n  resolveDir?: string\n\n  /** 插件数据 */\n  pluginData?: any\n\n  /** 错误信息 */\n  errors?: Message[]\n\n  /** 警告信息 */\n  warnings?: Message[]\n\n  /** 监听文件 */\n  watchFiles?: string[]\n\n  /** 监听目录 */\n  watchDirs?: string[]\n}\n\n/**\n * 加载器类型\n */\nexport type Loader =\n  | 'js'\n  | 'jsx'\n  | 'ts'\n  | 'tsx'\n  | 'css'\n  | 'json'\n  | 'text'\n  | 'base64'\n  | 'dataurl'\n  | 'file'\n  | 'binary'\n  | 'copy'\n\n/**\n * 转换选项\n */\nexport interface TransformOptions {\n  /** 文件过滤器 */\n  filter: RegExp\n\n  /** 命名空间 */\n  namespace?: string\n}\n\n/**\n * 转换回调\n */\nexport type TransformCallback = (args: TransformArgs) => TransformResult | Promise<TransformResult>\n\n/**\n * 转换参数\n */\nexport interface TransformArgs {\n  /** 文件路径 */\n  path: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 文件内容 */\n  contents: string\n\n  /** 加载器 */\n  loader: Loader\n\n  /** 插件数据 */\n  pluginData: any\n}\n\n/**\n * 转换结果\n */\nexport interface TransformResult {\n  /** 转换后的内容 */\n  contents?: string\n\n  /** 加载器 */\n  loader?: Loader\n\n  /** 插件数据 */\n  pluginData?: any\n\n  /** 错误信息 */\n  errors?: Message[]\n\n  /** 警告信息 */\n  warnings?: Message[]\n\n  /** 监听文件 */\n  watchFiles?: string[]\n\n  /** 监听目录 */\n  watchDirs?: string[]\n}\n\n/**\n * 消息\n */\nexport interface Message {\n  /** 消息 ID */\n  id?: string\n\n  /** 插件名称 */\n  pluginName: string\n\n  /** 消息文本 */\n  text: string\n\n  /** 位置信息 */\n  location?: Location\n\n  /** 注释 */\n  notes?: Note[]\n\n  /** 详细信息 */\n  detail?: any\n}\n\n/**\n * 位置信息\n */\nexport interface Location {\n  /** 文件路径 */\n  file: string\n\n  /** 命名空间 */\n  namespace: string\n\n  /** 行号 */\n  line: number\n\n  /** 列号 */\n  column: number\n\n  /** 行内容 */\n  lineText: string\n\n  /** 建议 */\n  suggestion: string\n}\n\n/**\n * 注释\n */\nexport interface Note {\n  /** 注释文本 */\n  text: string\n\n  /** 位置信息 */\n  location?: Location\n}\n\n/**\n * 发出的文件\n */\nexport interface EmittedFile {\n  /** 文件类型 */\n  type: 'asset' | 'chunk'\n\n  /** 文件名 */\n  fileName?: string\n\n  /** 文件名模式 */\n  name?: string\n\n  /** 文件内容 */\n  source?: string | Uint8Array\n\n  /** 入口点 */\n  id?: string\n\n  /** 是否保留签名 */\n  preserveSignature?: 'strict' | 'allow-extension' | 'exports-only' | false\n}\n\n/**\n * 插件上下文\n */\nexport interface PluginContext {\n  /** 构建 ID */\n  buildId: string\n\n  /** 插件名称 */\n  pluginName: string\n\n  /** 工作目录 */\n  cwd: string\n\n  /** 构建模式 */\n  mode: 'development' | 'production'\n\n  /** 目标平台 */\n  platform: 'browser' | 'node' | 'neutral'\n\n  /** 环境变量 */\n  env: Record<string, string>\n\n  /** 配置信息 */\n  config: any\n\n  /** 缓存目录 */\n  cacheDir: string\n\n  /** 临时目录 */\n  tempDir: string\n\n  /** 日志记录器 */\n  logger: any\n\n  /** 性能监控器 */\n  performanceMonitor: any\n}\n\n/**\n * Rollup 插件配置\n */\nexport interface RollupPluginConfig {\n  /** 插件选项 */\n  [key: string]: any\n}\n\n/**\n * Rolldown 插件配置\n */\nexport interface RolldownPluginConfig {\n  /** 插件选项 */\n  [key: string]: any\n}\n\n/**\n * 插件元数据\n */\nexport interface PluginMetadata {\n  /** 插件标签 */\n  tags?: string[]\n\n  /** 插件分类 */\n  category?: string\n\n  /** 插件主页 */\n  homepage?: string\n\n  /** 插件仓库 */\n  repository?: string\n\n  /** 插件许可证 */\n  license?: string\n\n  /** 插件关键词 */\n  keywords?: string[]\n\n  /** 插件兼容性 */\n  compatibility?: {\n    rollup?: string\n    rolldown?: string\n    node?: string\n  }\n\n  /** 插件配置模式 */\n  configSchema?: any\n}\n\n/**\n * 插件管理器选项\n */\nexport interface PluginManagerOptions {\n  /** 插件目录 */\n  pluginDir?: string\n\n  /** 是否启用缓存 */\n  cache?: boolean\n\n  /** 缓存目录 */\n  cacheDir?: string\n\n  /** 是否启用热重载 */\n  hotReload?: boolean\n\n  /** 插件加载超时时间 */\n  timeout?: number\n\n  /** 最大插件数量 */\n  maxPlugins?: number\n\n  /** 插件白名单 */\n  whitelist?: string[]\n\n  /** 插件黑名单 */\n  blacklist?: string[]\n}\n\n/**\n * 插件加载结果\n */\nexport interface PluginLoadResult {\n  /** 加载的插件 */\n  plugin: UnifiedPlugin\n\n  /** 加载时间 */\n  loadTime: number\n\n  /** 是否成功 */\n  success: boolean\n\n  /** 错误信息 */\n  error?: Error\n\n  /** 警告信息 */\n  warnings?: string[]\n}\n\n// PluginPerformanceStats 已在 performance.ts 中定义，这里导入\nexport type { PluginPerformanceStats } from './performance'\n\n// HookPerformance 已在 performance.ts 中定义，这里导入\nexport type { HookPerformance } from './performance'\n","/**\n * 打包器相关类型定义\n */\n\nimport type { BundlerFeature } from './adapter'\n\n/**\n * 支持的打包器类型\n */\nexport type BundlerType = 'rollup' | 'rolldown'\n\n/**\n * 打包器状态\n */\nexport enum BundlerStatus {\n  /** 未初始化 */\n  UNINITIALIZED = 'uninitialized',\n  /** 初始化中 */\n  INITIALIZING = 'initializing',\n  /** 就绪 */\n  READY = 'ready',\n  /** 构建中 */\n  BUILDING = 'building',\n  /** 监听中 */\n  WATCHING = 'watching',\n  /** 错误状态 */\n  ERROR = 'error',\n  /** 已销毁 */\n  DISPOSED = 'disposed'\n}\n\n/**\n * 打包器信息\n */\nexport interface BundlerInfo {\n  /** 打包器名称 */\n  name: BundlerType\n\n  /** 打包器版本 */\n  version: string\n\n  /** 是否可用 */\n  available: boolean\n\n  /** 安装路径 */\n  installPath?: string\n\n  /** 支持的功能 */\n  features: BundlerFeature[]\n\n  /** 性能特征 */\n  performance: BundlerPerformanceProfile\n\n  /** 兼容性信息 */\n  compatibility: BundlerCompatibility\n}\n\n// BundlerFeature 已在 adapter.ts 中定义，这里导入\nexport { BundlerFeature } from './adapter'\n\n/**\n * 打包器性能特征\n */\nexport interface BundlerPerformanceProfile {\n  /** 构建速度等级 */\n  buildSpeed: 'slow' | 'medium' | 'fast' | 'very-fast'\n\n  /** 内存使用等级 */\n  memoryUsage: 'low' | 'medium' | 'high' | 'very-high'\n\n  /** 启动时间 */\n  startupTime: 'fast' | 'medium' | 'slow'\n\n  /** 增量构建性能 */\n  incrementalBuild: 'excellent' | 'good' | 'fair' | 'poor'\n\n  /** 大型项目支持 */\n  largeProjectSupport: 'excellent' | 'good' | 'fair' | 'poor'\n\n  /** 并行处理能力 */\n  parallelProcessing: 'excellent' | 'good' | 'fair' | 'poor'\n}\n\n/**\n * 打包器兼容性\n */\nexport interface BundlerCompatibility {\n  /** Node.js 版本要求 */\n  nodeVersion: string\n\n  /** 操作系统支持 */\n  platforms: ('win32' | 'darwin' | 'linux')[]\n\n  /** 架构支持 */\n  architectures: ('x64' | 'arm64' | 'ia32')[]\n\n  /** 插件兼容性 */\n  pluginCompatibility: {\n    /** Rollup 插件兼容性 */\n    rollup: 'full' | 'partial' | 'none'\n    /** Webpack 插件兼容性 */\n    webpack: 'full' | 'partial' | 'none'\n    /** Vite 插件兼容性 */\n    vite: 'full' | 'partial' | 'none'\n  }\n\n  /** 配置兼容性 */\n  configCompatibility: {\n    /** 与其他工具的配置兼容性 */\n    rollup: boolean\n    webpack: boolean\n    vite: boolean\n  }\n}\n\n/**\n * 打包器配置\n */\nexport interface BundlerConfig {\n  /** 打包器类型 */\n  type: BundlerType\n\n  /** 打包器选项 */\n  options?: BundlerOptions\n\n  /** 插件配置 */\n  plugins?: any[]\n\n  /** 优化配置 */\n  optimization?: OptimizationConfig\n\n  /** 开发配置 */\n  development?: DevelopmentConfig\n\n  /** 实验性功能 */\n  experimental?: ExperimentalConfig\n}\n\n/**\n * 打包器选项\n */\nexport interface BundlerOptions {\n  /** 工作目录 */\n  cwd?: string\n\n  /** 缓存目录 */\n  cacheDir?: string\n\n  /** 临时目录 */\n  tempDir?: string\n\n  /** 日志级别 */\n  logLevel?: 'silent' | 'error' | 'warn' | 'info' | 'debug'\n\n  /** 是否启用颜色输出 */\n  colors?: boolean\n\n  /** 是否清屏 */\n  clearScreen?: boolean\n\n  /** 构建超时时间 */\n  timeout?: number\n\n  /** 最大内存使用 */\n  maxMemory?: string | number\n\n  /** 工作线程数 */\n  workers?: number | 'auto'\n}\n\n/**\n * 优化配置\n */\nexport interface OptimizationConfig {\n  /** 是否启用 Tree Shaking */\n  treeshake?: boolean\n\n  /** 是否启用代码分割 */\n  codeSplitting?: boolean\n\n  /** 是否启用压缩 */\n  minify?: boolean\n\n  /** 是否启用 gzip 压缩 */\n  gzip?: boolean\n\n  /** 是否启用 brotli 压缩 */\n  brotli?: boolean\n\n  /** 是否移除未使用的代码 */\n  removeUnusedCode?: boolean\n\n  /** 是否内联小文件 */\n  inlineSmallFiles?: boolean\n\n  /** 资源优化 */\n  assets?: {\n    /** 图片优化 */\n    images?: boolean\n    /** 字体优化 */\n    fonts?: boolean\n    /** SVG 优化 */\n    svg?: boolean\n  }\n}\n\n/**\n * 开发配置\n */\nexport interface DevelopmentConfig {\n  /** 是否启用热重载 */\n  hmr?: boolean\n\n  /** 是否启用实时重载 */\n  liveReload?: boolean\n\n  /** 开发服务器配置 */\n  server?: {\n    /** 端口号 */\n    port?: number\n    /** 主机名 */\n    host?: string\n    /** 是否启用 HTTPS */\n    https?: boolean\n    /** 是否自动打开浏览器 */\n    open?: boolean\n  }\n\n  /** 是否启用源码映射 */\n  sourcemap?: boolean | 'inline'\n\n  /** 是否启用错误覆盖 */\n  errorOverlay?: boolean\n\n  /** 是否启用进度显示 */\n  progress?: boolean\n}\n\n/**\n * 实验性功能配置\n */\nexport interface ExperimentalConfig {\n  /** 是否启用实验性功能 */\n  enabled?: boolean\n\n  /** 具体的实验性功能 */\n  features?: string[]\n\n  /** 实验性插件 */\n  plugins?: any[]\n\n  /** 实验性优化 */\n  optimizations?: string[]\n}\n\n/**\n * 打包器检测结果\n */\nexport interface BundlerDetectionResult {\n  /** 可用的打包器 */\n  available: BundlerInfo[]\n\n  /** 推荐的打包器 */\n  recommended: BundlerType\n\n  /** 推荐理由 */\n  reason: string\n\n  /** 性能对比 */\n  performance: Record<BundlerType, BundlerPerformanceMetrics>\n\n  /** 兼容性分析 */\n  compatibility: Record<BundlerType, CompatibilityAnalysis>\n}\n\n/**\n * 打包器性能指标\n */\nexport interface BundlerPerformanceMetrics {\n  /** 构建时间 */\n  buildTime: number\n\n  /** 内存使用 */\n  memoryUsage: number\n\n  /** 启动时间 */\n  startupTime: number\n\n  /** 包大小 */\n  bundleSize: number\n\n  /** 缓存命中率 */\n  cacheHitRate: number\n\n  /** 并行效率 */\n  parallelEfficiency: number\n}\n\n/**\n * 兼容性分析\n */\nexport interface CompatibilityAnalysis {\n  /** 整体兼容性评分 */\n  score: number\n\n  /** 插件兼容性 */\n  pluginCompatibility: number\n\n  /** 配置兼容性 */\n  configCompatibility: number\n\n  /** 功能兼容性 */\n  featureCompatibility: number\n\n  /** 兼容性问题 */\n  issues: CompatibilityIssue[]\n\n  /** 解决方案 */\n  solutions: string[]\n}\n\n/**\n * 兼容性问题\n */\nexport interface CompatibilityIssue {\n  /** 问题类型 */\n  type: 'plugin' | 'config' | 'feature' | 'dependency'\n\n  /** 问题描述 */\n  description: string\n\n  /** 严重程度 */\n  severity: 'low' | 'medium' | 'high' | 'critical'\n\n  /** 影响范围 */\n  impact: string[]\n\n  /** 解决方案 */\n  solution?: string\n\n  /** 相关文档 */\n  documentation?: string\n}\n\n/**\n * 打包器切换选项\n */\nexport interface BundlerSwitchOptions {\n  /** 目标打包器 */\n  target: BundlerType\n\n  /** 是否保留配置 */\n  preserveConfig?: boolean\n\n  /** 是否迁移插件 */\n  migratePlugins?: boolean\n\n  /** 是否备份原配置 */\n  backup?: boolean\n\n  /** 迁移策略 */\n  migrationStrategy?: 'conservative' | 'aggressive' | 'custom'\n\n  /** 自定义迁移规则 */\n  customRules?: MigrationRule[]\n}\n\n/**\n * 迁移规则\n */\nexport interface MigrationRule {\n  /** 规则名称 */\n  name: string\n\n  /** 源配置路径 */\n  from: string\n\n  /** 目标配置路径 */\n  to: string\n\n  /** 转换函数 */\n  transform?: (value: any) => any\n\n  /** 是否必需 */\n  required?: boolean\n\n  /** 默认值 */\n  defaultValue?: any\n}\n\n/**\n * 打包器切换结果\n */\nexport interface BundlerSwitchResult {\n  /** 是否成功 */\n  success: boolean\n\n  /** 新的打包器 */\n  newBundler: BundlerType\n\n  /** 迁移的配置 */\n  migratedConfig: any\n\n  /** 迁移的插件 */\n  migratedPlugins: any[]\n\n  /** 迁移报告 */\n  migrationReport: MigrationReport\n\n  /** 警告信息 */\n  warnings: string[]\n\n  /** 错误信息 */\n  errors: string[]\n}\n\n/**\n * 迁移报告\n */\nexport interface MigrationReport {\n  /** 迁移的配置项数量 */\n  configItemsMigrated: number\n\n  /** 迁移的插件数量 */\n  pluginsMigrated: number\n\n  /** 无法迁移的配置项 */\n  unmigratableConfigs: string[]\n\n  /** 无法迁移的插件 */\n  unmigratablePlugins: string[]\n\n  /** 需要手动处理的项目 */\n  manualActions: ManualAction[]\n\n  /** 迁移时间 */\n  migrationTime: number\n}\n\n/**\n * 手动操作\n */\nexport interface ManualAction {\n  /** 操作类型 */\n  type: 'config' | 'plugin' | 'dependency' | 'file'\n\n  /** 操作描述 */\n  description: string\n\n  /** 相关文件 */\n  files?: string[]\n\n  /** 建议的操作 */\n  suggestedAction: string\n\n  /** 参考文档 */\n  documentation?: string\n}\n","/**\n * 输出格式相关常量\n */\n\nimport type { OutputFormat } from '../types/output'\n\n/**\n * 支持的输出格式\n */\nexport const OUTPUT_FORMATS: OutputFormat[] = ['esm', 'cjs', 'umd', 'iife']\n\n/**\n * 格式别名映射\n */\nexport const FORMAT_ALIASES: Record<string, OutputFormat> = {\n  'es': 'esm',\n  'es6': 'esm',\n  'module': 'esm',\n  'commonjs': 'cjs',\n  'common': 'cjs',\n  'universal': 'umd',\n  'browser': 'iife',\n  'global': 'iife'\n}\n\n/**\n * 格式描述\n */\nexport const FORMAT_DESCRIPTIONS: Record<OutputFormat, string> = {\n  esm: 'ES Module - 现代 JavaScript 模块格式，支持 Tree Shaking',\n  cjs: 'CommonJS - Node.js 默认模块格式',\n  umd: 'Universal Module Definition - 通用模块格式，支持多种环境',\n  iife: 'Immediately Invoked Function Expression - 立即执行函数，适用于浏览器',\n  css: 'Cascading Style Sheets - 样式表格式'\n}\n\n/**\n * 格式文件扩展名\n */\nexport const FORMAT_EXTENSIONS: Record<OutputFormat, string> = {\n  esm: '.js',\n  cjs: '.cjs',\n  umd: '.umd.js',\n  iife: '.iife.js',\n  css: '.css'\n}\n\n/**\n * 格式默认文件名模式\n */\nexport const FORMAT_FILE_PATTERNS: Record<OutputFormat, string> = {\n  esm: '[name].js',\n  cjs: '[name].cjs',\n  umd: '[name].umd.js',\n  iife: '[name].iife.js',\n  css: '[name].css'\n}\n\n/**\n * 格式兼容性\n */\nexport const FORMAT_COMPATIBILITY: Record<OutputFormat, {\n  browser: boolean\n  node: boolean\n  requiresGlobals: boolean\n  supportsTreeShaking: boolean\n  supportsCodeSplitting: boolean\n}> = {\n  esm: {\n    browser: true,\n    node: true,\n    requiresGlobals: false,\n    supportsTreeShaking: true,\n    supportsCodeSplitting: true\n  },\n  cjs: {\n    browser: false,\n    node: true,\n    requiresGlobals: false,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  },\n  umd: {\n    browser: true,\n    node: true,\n    requiresGlobals: true,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  },\n  iife: {\n    browser: true,\n    node: false,\n    requiresGlobals: true,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  },\n  css: {\n    browser: true,\n    node: false,\n    requiresGlobals: false,\n    supportsTreeShaking: false,\n    supportsCodeSplitting: false\n  }\n}\n\n/**\n * 格式推荐用途\n */\nexport const FORMAT_USE_CASES: Record<OutputFormat, string[]> = {\n  esm: [\n    '现代 JavaScript 库',\n    '支持 Tree Shaking 的库',\n    'Node.js 模块',\n    '浏览器原生模块'\n  ],\n  cjs: [\n    'Node.js 库',\n    '传统 npm 包',\n    '服务端应用',\n    '构建工具插件'\n  ],\n  umd: [\n    '通用库',\n    '需要多环境支持的库',\n    'CDN 分发的库',\n    '向后兼容的库'\n  ],\n  iife: [\n    '浏览器脚本',\n    '内联脚本',\n    '不支持模块的环境',\n    '简单的工具脚本'\n  ],\n  css: [\n    '样式库',\n    '主题包',\n    '组件样式',\n    'CSS 框架'\n  ]\n}\n\n/**\n * 格式优先级（用于自动选择）\n */\nexport const FORMAT_PRIORITY: Record<OutputFormat, number> = {\n  esm: 4, // 最高优先级\n  cjs: 3,\n  umd: 2,\n  iife: 1,\n  css: 5 // CSS 样式库的最高优先级\n}\n\n/**\n * 格式组合建议\n */\nexport const FORMAT_COMBINATIONS = {\n  // 现代库推荐组合\n  modern: ['esm', 'cjs'] as OutputFormat[],\n\n  // 通用库推荐组合\n  universal: ['esm', 'cjs', 'umd'] as OutputFormat[],\n\n  // 浏览器库推荐组合\n  browser: ['esm', 'umd', 'iife'] as OutputFormat[],\n\n  // Node.js 库推荐组合\n  node: ['esm', 'cjs'] as OutputFormat[],\n\n  // 最小组合\n  minimal: ['esm'] as OutputFormat[],\n\n  // 完整组合\n  complete: ['esm', 'cjs', 'umd', 'iife'] as OutputFormat[]\n}\n\n/**\n * 根据库类型推荐的格式\n */\nexport const LIBRARY_TYPE_FORMATS = {\n  typescript: ['esm', 'cjs'],\n  style: ['esm'],\n  vue2: ['esm', 'cjs', 'umd'],\n  vue3: ['esm', 'cjs', 'umd'],\n  mixed: ['esm', 'cjs']\n} as const\n\n/**\n * 格式特定的配置选项\n */\nexport const FORMAT_SPECIFIC_OPTIONS = {\n  esm: {\n    // ES Module 特定选项\n    exports: 'named',\n    interop: 'auto',\n    strict: true\n  },\n  cjs: {\n    // CommonJS 特定选项\n    exports: 'auto',\n    interop: 'auto',\n    strict: false\n  },\n  umd: {\n    // UMD 特定选项\n    exports: 'auto',\n    interop: 'auto',\n    strict: false,\n    // 需要全局变量名\n    requiresName: true\n  },\n  iife: {\n    // IIFE 特定选项\n    exports: 'none',\n    interop: false,\n    strict: false,\n    // 需要全局变量名\n    requiresName: true\n  }\n} as const\n\n/**\n * 格式验证规则\n */\nexport const FORMAT_VALIDATION_RULES = {\n  esm: {\n    // ES Module 验证规则\n    allowedExports: ['named', 'default'],\n    requiresModernNode: true,\n    supportsTopLevelAwait: true\n  },\n  cjs: {\n    // CommonJS 验证规则\n    allowedExports: ['auto', 'default', 'named'],\n    requiresModernNode: false,\n    supportsTopLevelAwait: false\n  },\n  umd: {\n    // UMD 验证规则\n    allowedExports: ['auto', 'default'],\n    requiresGlobalName: true,\n    requiresGlobalsMapping: true\n  },\n  iife: {\n    // IIFE 验证规则\n    allowedExports: ['none'],\n    requiresGlobalName: true,\n    requiresGlobalsMapping: true\n  }\n} as const\n\n/**\n * 格式性能特征\n */\nexport const FORMAT_PERFORMANCE = {\n  esm: {\n    bundleSize: 'small',\n    loadTime: 'fast',\n    treeShaking: 'excellent',\n    caching: 'excellent'\n  },\n  cjs: {\n    bundleSize: 'medium',\n    loadTime: 'medium',\n    treeShaking: 'none',\n    caching: 'good'\n  },\n  umd: {\n    bundleSize: 'large',\n    loadTime: 'slow',\n    treeShaking: 'none',\n    caching: 'fair'\n  },\n  iife: {\n    bundleSize: 'large',\n    loadTime: 'slow',\n    treeShaking: 'none',\n    caching: 'poor'\n  }\n} as const\n","/**\n * 打包器相关常量\n */\n\nimport type { BundlerType } from '../types/bundler'\nimport { BundlerFeature } from '../types/bundler'\n\n/**\n * 支持的打包器列表\n */\nexport const SUPPORTED_BUNDLERS: BundlerType[] = ['rollup', 'rolldown']\n\n/**\n * 默认打包器\n */\nexport const DEFAULT_BUNDLER: BundlerType = 'rollup'\n\n/**\n * 打包器信息\n */\nexport const BUNDLER_INFO = {\n  rollup: {\n    name: 'Rollup',\n    description: '成熟稳定的 JavaScript 模块打包器，专注于 ES 模块',\n    homepage: 'https://rollupjs.org',\n    repository: 'https://github.com/rollup/rollup',\n    minNodeVersion: '14.18.0',\n    stableVersion: '^4.0.0',\n    features: [\n      BundlerFeature.TREE_SHAKING,\n      BundlerFeature.CODE_SPLITTING,\n      BundlerFeature.DYNAMIC_IMPORT,\n      BundlerFeature.SOURCEMAP,\n      BundlerFeature.PLUGIN_SYSTEM,\n      BundlerFeature.CONFIG_FILE,\n      BundlerFeature.CACHE_SUPPORT\n    ]\n  },\n  \n  rolldown: {\n    name: 'Rolldown',\n    description: '基于 Rust 的高性能 JavaScript 打包器，兼容 Rollup API',\n    homepage: 'https://rolldown.rs',\n    repository: 'https://github.com/rolldown/rolldown',\n    minNodeVersion: '16.0.0',\n    stableVersion: '^0.1.0',\n    features: [\n      BundlerFeature.TREE_SHAKING,\n      BundlerFeature.CODE_SPLITTING,\n      BundlerFeature.DYNAMIC_IMPORT,\n      BundlerFeature.SOURCEMAP,\n      BundlerFeature.MINIFICATION,\n      BundlerFeature.PLUGIN_SYSTEM,\n      BundlerFeature.CONFIG_FILE,\n      BundlerFeature.CACHE_SUPPORT,\n      BundlerFeature.PARALLEL_BUILD,\n      BundlerFeature.INCREMENTAL_BUILD\n    ]\n  }\n} as const\n\n/**\n * 打包器性能特征\n */\nexport const BUNDLER_PERFORMANCE = {\n  rollup: {\n    buildSpeed: 'medium',\n    memoryUsage: 'medium',\n    startupTime: 'fast',\n    incrementalBuild: 'fair',\n    largeProjectSupport: 'good',\n    parallelProcessing: 'poor'\n  },\n  \n  rolldown: {\n    buildSpeed: 'very-fast',\n    memoryUsage: 'low',\n    startupTime: 'fast',\n    incrementalBuild: 'excellent',\n    largeProjectSupport: 'excellent',\n    parallelProcessing: 'excellent'\n  }\n} as const\n\n/**\n * 打包器兼容性\n */\nexport const BUNDLER_COMPATIBILITY = {\n  rollup: {\n    nodeVersion: '>=14.18.0',\n    platforms: ['win32', 'darwin', 'linux'],\n    architectures: ['x64', 'arm64'],\n    pluginCompatibility: {\n      rollup: 'full',\n      webpack: 'none',\n      vite: 'partial'\n    },\n    configCompatibility: {\n      rollup: true,\n      webpack: false,\n      vite: true\n    }\n  },\n  \n  rolldown: {\n    nodeVersion: '>=16.0.0',\n    platforms: ['win32', 'darwin', 'linux'],\n    architectures: ['x64', 'arm64'],\n    pluginCompatibility: {\n      rollup: 'partial',\n      webpack: 'none',\n      vite: 'partial'\n    },\n    configCompatibility: {\n      rollup: true,\n      webpack: false,\n      vite: false\n    }\n  }\n} as const\n\n/**\n * 打包器推荐使用场景\n */\nexport const BUNDLER_USE_CASES = {\n  rollup: [\n    '成熟的库项目',\n    '需要稳定性的生产环境',\n    '复杂的插件需求',\n    '对构建速度要求不高的项目',\n    '需要丰富插件生态的项目'\n  ],\n  \n  rolldown: [\n    '大型项目',\n    '对构建速度有高要求的项目',\n    '需要增量构建的项目',\n    '内存敏感的环境',\n    '现代化的新项目'\n  ]\n} as const\n\n/**\n * 打包器优缺点\n */\nexport const BUNDLER_PROS_CONS = {\n  rollup: {\n    pros: [\n      '成熟稳定，生产环境验证',\n      '丰富的插件生态系统',\n      '优秀的 Tree Shaking 支持',\n      '良好的文档和社区支持',\n      '配置简单直观'\n    ],\n    cons: [\n      '构建速度相对较慢',\n      '大型项目性能有限',\n      '内存使用较高',\n      '缺乏内置的并行处理'\n    ]\n  },\n  \n  rolldown: {\n    pros: [\n      '极快的构建速度',\n      '低内存使用',\n      '优秀的增量构建',\n      '内置并行处理',\n      '兼容 Rollup API'\n    ],\n    cons: [\n      '相对较新，生态系统有限',\n      '插件兼容性不完整',\n      '文档和社区支持有限',\n      '可能存在稳定性问题'\n    ]\n  }\n} as const\n\n/**\n * 打包器选择建议\n */\nexport const BUNDLER_SELECTION_CRITERIA = {\n  // 项目规模\n  projectSize: {\n    small: 'rollup',\n    medium: 'rollup',\n    large: 'rolldown',\n    enterprise: 'rolldown'\n  },\n  \n  // 构建速度要求\n  buildSpeed: {\n    low: 'rollup',\n    medium: 'rollup',\n    high: 'rolldown',\n    critical: 'rolldown'\n  },\n  \n  // 稳定性要求\n  stability: {\n    low: 'rolldown',\n    medium: 'rollup',\n    high: 'rollup',\n    critical: 'rollup'\n  },\n  \n  // 插件需求\n  pluginNeeds: {\n    minimal: 'rolldown',\n    moderate: 'rollup',\n    extensive: 'rollup',\n    custom: 'rollup'\n  }\n} as const\n\n/**\n * 打包器迁移难度\n */\nexport const MIGRATION_DIFFICULTY = {\n  'rollup-to-rolldown': 'easy',\n  'rolldown-to-rollup': 'easy'\n} as const\n\n/**\n * 打包器配置映射\n */\nexport const CONFIG_MAPPING = {\n  // Rollup 到 Rolldown 的配置映射\n  'rollup-to-rolldown': {\n    input: 'input',\n    output: 'output',\n    external: 'external',\n    plugins: 'plugins',\n    treeshake: 'treeshake',\n    // Rolldown 特有配置\n    platform: 'browser' // 默认值\n  },\n  \n  // Rolldown 到 Rollup 的配置映射\n  'rolldown-to-rollup': {\n    input: 'input',\n    output: 'output',\n    external: 'external',\n    plugins: 'plugins',\n    treeshake: 'treeshake'\n    // 忽略 platform 等 Rolldown 特有配置\n  }\n} as const\n\n/**\n * 打包器检测命令\n */\nexport const BUNDLER_DETECTION_COMMANDS = {\n  rollup: {\n    check: 'rollup --version',\n    install: 'npm install rollup --save-dev'\n  },\n  \n  rolldown: {\n    check: 'rolldown --version',\n    install: 'npm install rolldown --save-dev'\n  }\n} as const\n\n/**\n * 打包器默认配置\n */\nexport const BUNDLER_DEFAULT_CONFIG = {\n  rollup: {\n    treeshake: true,\n    output: {\n      format: 'esm',\n      sourcemap: true\n    }\n  },\n  \n  rolldown: {\n    treeshake: true,\n    platform: 'browser',\n    output: {\n      format: 'esm',\n      sourcemap: true\n    }\n  }\n} as const\n\n/**\n * 打包器错误处理\n */\nexport const BUNDLER_ERROR_PATTERNS = {\n  rollup: {\n    notFound: /Cannot find module 'rollup'/,\n    versionMismatch: /Rollup version .* is not supported/,\n    configError: /Could not resolve config file/,\n    buildError: /Build failed with \\d+ error/\n  },\n  \n  rolldown: {\n    notFound: /Cannot find module 'rolldown'/,\n    versionMismatch: /Rolldown version .* is not supported/,\n    configError: /Could not resolve config file/,\n    buildError: /Build failed with \\d+ error/\n  }\n} as const\n\n/**\n * 打包器性能基准\n */\nexport const PERFORMANCE_BENCHMARKS = {\n  // 小型项目 (< 100 文件)\n  small: {\n    rollup: { buildTime: '2-5s', memoryUsage: '100-200MB' },\n    rolldown: { buildTime: '0.5-1s', memoryUsage: '50-100MB' }\n  },\n  \n  // 中型项目 (100-500 文件)\n  medium: {\n    rollup: { buildTime: '10-30s', memoryUsage: '300-500MB' },\n    rolldown: { buildTime: '2-5s', memoryUsage: '100-200MB' }\n  },\n  \n  // 大型项目 (> 500 文件)\n  large: {\n    rollup: { buildTime: '60-180s', memoryUsage: '500MB-1GB' },\n    rolldown: { buildTime: '5-15s', memoryUsage: '200-400MB' }\n  }\n} as const\n","/**\n * 文件扩展名相关常量\n */\n\n/**\n * 支持的文件扩展名\n */\nexport const SUPPORTED_EXTENSIONS = {\n  // JavaScript 文件\n  javascript: ['.js', '.mjs', '.cjs'],\n  \n  // TypeScript 文件\n  typescript: ['.ts', '.tsx', '.d.ts'],\n  \n  // JSX 文件\n  jsx: ['.jsx', '.tsx'],\n  \n  // Vue 文件\n  vue: ['.vue'],\n  \n  // 样式文件\n  styles: ['.css', '.less', '.scss', '.sass', '.styl', '.stylus'],\n  \n  // 配置文件\n  config: ['.json', '.js', '.ts', '.mjs'],\n  \n  // 资源文件\n  assets: ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp', '.ico'],\n  \n  // 字体文件\n  fonts: ['.woff', '.woff2', '.eot', '.ttf', '.otf'],\n  \n  // 文档文件\n  docs: ['.md', '.mdx', '.txt'],\n  \n  // 数据文件\n  data: ['.json', '.yaml', '.yml', '.toml', '.xml']\n} as const\n\n/**\n * 文件类型映射\n */\nexport const EXTENSION_TO_TYPE = {\n  // JavaScript\n  '.js': 'javascript',\n  '.mjs': 'javascript',\n  '.cjs': 'javascript',\n  \n  // TypeScript\n  '.ts': 'typescript',\n  '.tsx': 'typescript',\n  '.d.ts': 'typescript-declaration',\n  \n  // JSX\n  '.jsx': 'jsx',\n  \n  // Vue\n  '.vue': 'vue',\n  \n  // 样式\n  '.css': 'css',\n  '.less': 'less',\n  '.scss': 'scss',\n  '.sass': 'sass',\n  '.styl': 'stylus',\n  '.stylus': 'stylus',\n  \n  // 配置\n  '.json': 'json',\n  \n  // 资源\n  '.png': 'image',\n  '.jpg': 'image',\n  '.jpeg': 'image',\n  '.gif': 'image',\n  '.svg': 'svg',\n  '.webp': 'image',\n  '.ico': 'icon',\n  \n  // 字体\n  '.woff': 'font',\n  '.woff2': 'font',\n  '.eot': 'font',\n  '.ttf': 'font',\n  '.otf': 'font',\n  \n  // 文档\n  '.md': 'markdown',\n  '.mdx': 'mdx',\n  '.txt': 'text',\n  \n  // 数据\n  '.yaml': 'yaml',\n  '.yml': 'yaml',\n  '.toml': 'toml',\n  '.xml': 'xml'\n} as const\n\n/**\n * 加载器映射\n */\nexport const EXTENSION_TO_LOADER = {\n  '.js': 'js',\n  '.mjs': 'js',\n  '.cjs': 'js',\n  '.ts': 'ts',\n  '.tsx': 'tsx',\n  '.jsx': 'jsx',\n  '.vue': 'vue',\n  '.css': 'css',\n  '.less': 'less',\n  '.scss': 'scss',\n  '.sass': 'sass',\n  '.styl': 'stylus',\n  '.stylus': 'stylus',\n  '.json': 'json',\n  '.png': 'file',\n  '.jpg': 'file',\n  '.jpeg': 'file',\n  '.gif': 'file',\n  '.svg': 'svg',\n  '.webp': 'file',\n  '.ico': 'file',\n  '.woff': 'file',\n  '.woff2': 'file',\n  '.eot': 'file',\n  '.ttf': 'file',\n  '.otf': 'file',\n  '.md': 'text',\n  '.txt': 'text'\n} as const\n\n/**\n * 入口文件优先级\n */\nexport const ENTRY_FILE_PRIORITY = [\n  'index.ts',\n  'index.tsx',\n  'index.js',\n  'index.jsx',\n  'index.vue',\n  'main.ts',\n  'main.tsx',\n  'main.js',\n  'main.jsx',\n  'src/index.ts',\n  'src/index.tsx',\n  'src/index.js',\n  'src/index.jsx',\n  'src/main.ts',\n  'src/main.tsx',\n  'src/main.js',\n  'src/main.jsx',\n  'lib/index.ts',\n  'lib/index.js'\n] as const\n\n/**\n * 配置文件优先级\n */\nexport const CONFIG_FILE_PRIORITY = [\n  'builder.config.ts',\n  'builder.config.js',\n  'builder.config.mjs',\n  'builder.config.json',\n  '.builderrc.ts',\n  '.builderrc.js',\n  '.builderrc.json',\n  'package.json'\n] as const\n\n/**\n * TypeScript 配置文件\n */\nexport const TYPESCRIPT_CONFIG_FILES = [\n  'tsconfig.json',\n  'tsconfig.build.json',\n  'tsconfig.lib.json',\n  'tsconfig.prod.json'\n] as const\n\n/**\n * 样式配置文件\n */\nexport const STYLE_CONFIG_FILES = [\n  'postcss.config.js',\n  'postcss.config.ts',\n  'postcss.config.json',\n  '.postcssrc',\n  '.postcssrc.js',\n  '.postcssrc.json',\n  'tailwind.config.js',\n  'tailwind.config.ts',\n  '.stylelintrc',\n  '.stylelintrc.js',\n  '.stylelintrc.json'\n] as const\n\n/**\n * Vue 配置文件\n */\nexport const VUE_CONFIG_FILES = [\n  'vue.config.js',\n  'vue.config.ts',\n  'vite.config.js',\n  'vite.config.ts'\n] as const\n\n/**\n * 忽略的文件模式\n */\nexport const IGNORE_PATTERNS = [\n  // 依赖目录\n  'node_modules/**',\n  \n  // 构建输出\n  'dist/**',\n  'build/**',\n  'lib/**',\n  'es/**',\n  'cjs/**',\n  'umd/**',\n  \n  // 缓存目录\n  '.cache/**',\n  '.temp/**',\n  '.tmp/**',\n  \n  // 测试文件\n  '**/*.test.*',\n  '**/*.spec.*',\n  '**/__tests__/**',\n  '**/__mocks__/**',\n  'test/**',\n  'tests/**',\n  \n  // 配置文件\n  '*.config.*',\n  '.*rc.*',\n  \n  // 文档文件\n  '*.md',\n  'docs/**',\n  \n  // 其他\n  '.git/**',\n  '.svn/**',\n  '.hg/**',\n  'coverage/**',\n  '*.log'\n] as const\n\n/**\n * 包含的文件模式\n */\nexport const INCLUDE_PATTERNS = {\n  typescript: [\n    'src/**/*.ts',\n    'src/**/*.tsx',\n    'lib/**/*.ts',\n    'lib/**/*.tsx'\n  ],\n  \n  javascript: [\n    'src/**/*.js',\n    'src/**/*.jsx',\n    'src/**/*.mjs',\n    'lib/**/*.js',\n    'lib/**/*.jsx'\n  ],\n  \n  vue: [\n    'src/**/*.vue',\n    'components/**/*.vue',\n    'lib/**/*.vue'\n  ],\n  \n  styles: [\n    'src/**/*.css',\n    'src/**/*.less',\n    'src/**/*.scss',\n    'src/**/*.sass',\n    'src/**/*.styl',\n    'styles/**/*'\n  ],\n  \n  assets: [\n    'src/assets/**/*',\n    'assets/**/*',\n    'public/**/*'\n  ]\n} as const\n\n/**\n * 文件大小限制\n */\nexport const FILE_SIZE_LIMITS = {\n  // 源代码文件\n  source: 1024 * 1024, // 1MB\n  \n  // 配置文件\n  config: 100 * 1024, // 100KB\n  \n  // 样式文件\n  style: 500 * 1024, // 500KB\n  \n  // 资源文件\n  asset: 10 * 1024 * 1024, // 10MB\n  \n  // 字体文件\n  font: 2 * 1024 * 1024, // 2MB\n  \n  // 图片文件\n  image: 5 * 1024 * 1024 // 5MB\n} as const\n\n/**\n * 文件编码检测\n */\nexport const ENCODING_DETECTION = {\n  // 文本文件\n  text: ['utf8', 'utf-8', 'ascii'],\n  \n  // 二进制文件\n  binary: ['binary', 'base64'],\n  \n  // 默认编码\n  default: 'utf8'\n} as const\n\n/**\n * 文件 MIME 类型\n */\nexport const MIME_TYPES = {\n  '.js': 'application/javascript',\n  '.mjs': 'application/javascript',\n  '.ts': 'application/typescript',\n  '.tsx': 'application/typescript',\n  '.jsx': 'application/javascript',\n  '.vue': 'text/x-vue',\n  '.css': 'text/css',\n  '.less': 'text/less',\n  '.scss': 'text/scss',\n  '.sass': 'text/sass',\n  '.json': 'application/json',\n  '.md': 'text/markdown',\n  '.html': 'text/html',\n  '.xml': 'application/xml',\n  '.svg': 'image/svg+xml',\n  '.png': 'image/png',\n  '.jpg': 'image/jpeg',\n  '.jpeg': 'image/jpeg',\n  '.gif': 'image/gif',\n  '.webp': 'image/webp',\n  '.woff': 'font/woff',\n  '.woff2': 'font/woff2',\n  '.ttf': 'font/ttf',\n  '.otf': 'font/otf'\n} as const\n","/**\n * 用户消息常量\n */\n\n/**\n * 成功消息\n */\nexport const SUCCESS_MESSAGES = {\n  BUILD_COMPLETE: '构建完成',\n  BUILD_SUCCESS: '构建成功',\n  CONFIG_LOADED: '配置加载成功',\n  CONFIG_VALIDATED: '配置验证通过',\n  PLUGIN_LOADED: '插件加载成功',\n  ADAPTER_INITIALIZED: '适配器初始化成功',\n  CACHE_HIT: '缓存命中',\n  WATCH_STARTED: '监听模式已启动',\n  LIBRARY_DETECTED: '库类型检测成功'\n} as const\n\n/**\n * 信息消息\n */\nexport const INFO_MESSAGES = {\n  BUILD_STARTING: '开始构建...',\n  CONFIG_LOADING: '正在加载配置...',\n  PLUGIN_LOADING: '正在加载插件...',\n  ADAPTER_SWITCHING: '正在切换适配器...',\n  CACHE_CLEARING: '正在清理缓存...',\n  WATCH_CHANGE_DETECTED: '检测到文件变化',\n  LIBRARY_DETECTING: '正在检测库类型...',\n  PERFORMANCE_ANALYZING: '正在分析性能...'\n} as const\n\n/**\n * 警告消息\n */\nexport const WARNING_MESSAGES = {\n  CONFIG_DEPRECATED: '配置项已废弃',\n  PLUGIN_DEPRECATED: '插件已废弃',\n  LARGE_BUNDLE_SIZE: '打包文件过大',\n  SLOW_BUILD_TIME: '构建时间过长',\n  MEMORY_USAGE_HIGH: '内存使用过高',\n  CACHE_MISS: '缓存未命中',\n  DEPENDENCY_OUTDATED: '依赖版本过旧',\n  EXPERIMENTAL_FEATURE: '使用了实验性功能'\n} as const\n\n/**\n * 用户消息\n */\nexport const USER_MESSAGES = {\n  BUILD_FAILED: '构建失败',\n  CONFIG_INVALID: '配置无效',\n  PLUGIN_ERROR: '插件错误',\n  ADAPTER_ERROR: '适配器错误',\n  FILE_NOT_FOUND: '文件未找到',\n  DEPENDENCY_MISSING: '依赖缺失',\n  NETWORK_ERROR: '网络错误',\n  PERMISSION_DENIED: '权限不足',\n  OUT_OF_MEMORY: '内存不足',\n  TIMEOUT: '操作超时'\n} as const\n\n/**\n * 进度消息\n */\nexport const PROGRESS_MESSAGES = {\n  INITIALIZING: '初始化中...',\n  LOADING_CONFIG: '加载配置中...',\n  DETECTING_LIBRARY: '检测库类型中...',\n  LOADING_PLUGINS: '加载插件中...',\n  RESOLVING_MODULES: '解析模块中...',\n  TRANSFORMING_CODE: '转换代码中...',\n  GENERATING_BUNDLE: '生成打包文件中...',\n  WRITING_FILES: '写入文件中...',\n  OPTIMIZING: '优化中...',\n  FINALIZING: '完成中...'\n} as const\n\n/**\n * 帮助消息\n */\nexport const HELP_MESSAGES = {\n  USAGE: '使用方法',\n  OPTIONS: '选项',\n  EXAMPLES: '示例',\n  COMMANDS: '命令',\n  CONFIG: '配置',\n  PLUGINS: '插件',\n  TROUBLESHOOTING: '故障排除',\n  FAQ: '常见问题'\n} as const\n\n/**\n * 提示消息\n */\nexport const TIP_MESSAGES = {\n  PERFORMANCE_OPTIMIZATION: '性能优化提示',\n  BUNDLE_SIZE_OPTIMIZATION: '包大小优化提示',\n  CACHE_USAGE: '缓存使用提示',\n  PLUGIN_RECOMMENDATION: '插件推荐',\n  CONFIG_SUGGESTION: '配置建议',\n  BEST_PRACTICES: '最佳实践',\n  TROUBLESHOOTING_GUIDE: '故障排除指南'\n} as const\n\n/**\n * 状态消息\n */\nexport const STATUS_MESSAGES = {\n  IDLE: '空闲',\n  INITIALIZING: '初始化中',\n  BUILDING: '构建中',\n  WATCHING: '监听中',\n  ERROR: '错误',\n  COMPLETE: '完成',\n  CANCELLED: '已取消',\n  PAUSED: '已暂停'\n} as const\n\n/**\n * 确认消息\n */\nexport const CONFIRMATION_MESSAGES = {\n  OVERWRITE_FILE: '文件已存在，是否覆盖？',\n  DELETE_CACHE: '是否清理缓存？',\n  SWITCH_BUNDLER: '是否切换打包器？',\n  INSTALL_DEPENDENCY: '是否安装依赖？',\n  UPDATE_CONFIG: '是否更新配置？',\n  CONTINUE_BUILD: '是否继续构建？',\n  ABORT_BUILD: '是否中止构建？'\n} as const\n\n/**\n * 格式化消息模板\n */\nexport const MESSAGE_TEMPLATES = {\n  BUILD_TIME: '构建时间: {time}ms',\n  BUNDLE_SIZE: '打包大小: {size}',\n  MEMORY_USAGE: '内存使用: {memory}MB',\n  CACHE_HIT_RATE: '缓存命中率: {rate}%',\n  FILE_COUNT: '文件数量: {count}',\n  PLUGIN_COUNT: '插件数量: {count}',\n  ERROR_COUNT: '错误数量: {count}',\n  WARNING_COUNT: '警告数量: {count}',\n  PROGRESS: '进度: {current}/{total} ({percent}%)',\n  VERSION: '版本: {version}'\n} as const\n\n/**\n * 日志级别消息\n */\nexport const LOG_LEVEL_MESSAGES = {\n  silent: '静默模式',\n  error: '仅显示错误',\n  warn: '显示警告和错误',\n  info: '显示信息、警告和错误',\n  debug: '显示调试信息',\n  verbose: '显示详细信息'\n} as const\n\n/**\n * 命令行消息\n */\nexport const CLI_MESSAGES = {\n  WELCOME: '欢迎使用 @ldesign/builder',\n  VERSION: '版本信息',\n  HELP: '帮助信息',\n  INVALID_COMMAND: '无效命令',\n  MISSING_ARGUMENT: '缺少参数',\n  UNKNOWN_OPTION: '未知选项',\n  COMMAND_SUCCESS: '命令执行成功',\n  COMMAND_FAILED: '命令执行失败'\n} as const\n\n/**\n * 配置消息\n */\nexport const CONFIG_MESSAGES = {\n  LOADING: '正在加载配置文件...',\n  LOADED: '配置文件加载成功',\n  NOT_FOUND: '未找到配置文件，使用默认配置',\n  INVALID: '配置文件格式错误',\n  VALIDATING: '正在验证配置...',\n  VALIDATED: '配置验证通过',\n  MERGING: '正在合并配置...',\n  MERGED: '配置合并完成',\n  WATCHING: '正在监听配置文件变化...',\n  CHANGED: '配置文件已更改，重新加载中...'\n} as const\n\n/**\n * 插件消息\n */\nexport const PLUGIN_MESSAGES = {\n  LOADING: '正在加载插件: {name}',\n  LOADED: '插件加载成功: {name}',\n  FAILED: '插件加载失败: {name}',\n  INITIALIZING: '正在初始化插件: {name}',\n  INITIALIZED: '插件初始化成功: {name}',\n  EXECUTING: '正在执行插件: {name}',\n  EXECUTED: '插件执行完成: {name}',\n  ERROR: '插件执行错误: {name}',\n  DISABLED: '插件已禁用: {name}',\n  DEPRECATED: '插件已废弃: {name}'\n} as const\n\n/**\n * 适配器消息\n */\nexport const ADAPTER_MESSAGES = {\n  DETECTING: '正在检测可用的适配器...',\n  DETECTED: '检测到适配器: {name}',\n  INITIALIZING: '正在初始化适配器: {name}',\n  INITIALIZED: '适配器初始化成功: {name}',\n  SWITCHING: '正在切换到适配器: {name}',\n  SWITCHED: '适配器切换成功: {name}',\n  NOT_AVAILABLE: '适配器不可用: {name}',\n  VERSION_MISMATCH: '适配器版本不匹配: {name}',\n  CONFIG_ERROR: '适配器配置错误: {name}'\n} as const\n\n/**\n * 性能消息\n */\nexport const PERFORMANCE_MESSAGES = {\n  ANALYZING: '正在分析性能...',\n  ANALYZED: '性能分析完成',\n  SLOW_BUILD: '构建速度较慢，建议优化',\n  LARGE_BUNDLE: '打包文件较大，建议优化',\n  HIGH_MEMORY: '内存使用较高，建议优化',\n  CACHE_EFFECTIVE: '缓存效果良好',\n  CACHE_INEFFECTIVE: '缓存效果不佳，建议检查配置',\n  OPTIMIZATION_SUGGESTION: '性能优化建议: {suggestion}'\n} as const\n","/**\n * 路径处理工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport path from 'path'\nimport { fileURLToPath } from 'url'\n\n/**\n * 路径工具类\n */\nexport class PathUtils {\n  /**\n   * 规范化路径（统一使用正斜杠）\n   */\n  static normalize(filePath: string): string {\n    return path.posix.normalize(filePath.replace(/\\\\/g, '/'))\n  }\n\n  /**\n   * 解析绝对路径\n   */\n  static resolve(...paths: string[]): string {\n    return path.resolve(...paths)\n  }\n\n  /**\n   * 获取相对路径\n   */\n  static relative(from: string, to: string): string {\n    return this.normalize(path.relative(from, to))\n  }\n\n  /**\n   * 连接路径\n   */\n  static join(...paths: string[]): string {\n    return this.normalize(path.join(...paths))\n  }\n\n  /**\n   * 获取目录名\n   */\n  static dirname(filePath: string): string {\n    return this.normalize(path.dirname(filePath))\n  }\n\n  /**\n   * 获取文件名（包含扩展名）\n   */\n  static basename(filePath: string, ext?: string): string {\n    return path.basename(filePath, ext)\n  }\n\n  /**\n   * 获取文件扩展名\n   */\n  static extname(filePath: string): string {\n    return path.extname(filePath)\n  }\n\n  /**\n   * 获取文件名（不包含扩展名）\n   */\n  static filename(filePath: string): string {\n    return this.basename(filePath, this.extname(filePath))\n  }\n\n  /**\n   * 判断路径是否为绝对路径\n   */\n  static isAbsolute(filePath: string): boolean {\n    return path.isAbsolute(filePath)\n  }\n\n  /**\n   * 转换为绝对路径\n   */\n  static toAbsolute(filePath: string, basePath?: string): string {\n    if (this.isAbsolute(filePath)) {\n      return this.normalize(filePath)\n    }\n    return this.resolve(basePath || process.cwd(), filePath)\n  }\n\n  /**\n   * 转换为相对路径\n   */\n  static toRelative(filePath: string, basePath?: string): string {\n    const base = basePath || process.cwd()\n    if (this.isAbsolute(filePath)) {\n      return this.relative(base, filePath)\n    }\n    return this.normalize(filePath)\n  }\n\n  /**\n   * 替换文件扩展名\n   */\n  static replaceExt(filePath: string, newExt: string): string {\n    const dir = this.dirname(filePath)\n    const name = this.filename(filePath)\n    const ext = newExt.startsWith('.') ? newExt : `.${newExt}`\n    return this.join(dir, `${name}${ext}`)\n  }\n\n  /**\n   * 添加后缀到文件名\n   */\n  static addSuffix(filePath: string, suffix: string): string {\n    const dir = this.dirname(filePath)\n    const name = this.filename(filePath)\n    const ext = this.extname(filePath)\n    return this.join(dir, `${name}${suffix}${ext}`)\n  }\n\n  /**\n   * 获取路径的各个部分\n   */\n  static parse(filePath: string): {\n    root: string\n    dir: string\n    base: string\n    ext: string\n    name: string\n  } {\n    const parsed = path.parse(filePath)\n    return {\n      root: parsed.root,\n      dir: this.normalize(parsed.dir),\n      base: parsed.base,\n      ext: parsed.ext,\n      name: parsed.name\n    }\n  }\n\n  /**\n   * 从路径部分构建路径\n   */\n  static format(pathObject: {\n    root?: string\n    dir?: string\n    base?: string\n    ext?: string\n    name?: string\n  }): string {\n    return this.normalize(path.format(pathObject))\n  }\n\n  /**\n   * 检查路径是否在指定目录内\n   */\n  static isInside(filePath: string, dirPath: string): boolean {\n    const relativePath = this.relative(dirPath, filePath)\n    return !relativePath.startsWith('../') && !this.isAbsolute(relativePath)\n  }\n\n  /**\n   * 获取两个路径的公共父目录\n   */\n  static getCommonParent(path1: string, path2: string): string {\n    const abs1 = this.toAbsolute(path1)\n    const abs2 = this.toAbsolute(path2)\n    \n    const parts1 = abs1.split(path.sep)\n    const parts2 = abs2.split(path.sep)\n    \n    const commonParts: string[] = []\n    const minLength = Math.min(parts1.length, parts2.length)\n    \n    for (let i = 0; i < minLength; i++) {\n      if (parts1[i] === parts2[i]) {\n        commonParts.push(parts1[i])\n      } else {\n        break\n      }\n    }\n    \n    return commonParts.join(path.sep) || path.sep\n  }\n\n  /**\n   * 获取路径深度\n   */\n  static getDepth(filePath: string): number {\n    const normalized = this.normalize(filePath)\n    if (normalized === '/' || normalized === '.') {\n      return 0\n    }\n    return normalized.split('/').filter(part => part && part !== '.').length\n  }\n\n  /**\n   * 匹配路径模式\n   */\n  static matchPattern(filePath: string, pattern: string): boolean {\n    // 简单的 glob 模式匹配\n    const regexPattern = pattern\n      .replace(/\\./g, '\\\\.')\n      .replace(/\\*/g, '.*')\n      .replace(/\\?/g, '.')\n    \n    const regex = new RegExp(`^${regexPattern}$`)\n    return regex.test(this.normalize(filePath))\n  }\n\n  /**\n   * 获取文件的 URL 路径\n   */\n  static toFileURL(filePath: string): string {\n    const absolutePath = this.toAbsolute(filePath)\n    return `file://${absolutePath.replace(/\\\\/g, '/')}`\n  }\n\n  /**\n   * 从文件 URL 获取路径\n   */\n  static fromFileURL(fileURL: string): string {\n    return this.normalize(fileURLToPath(fileURL))\n  }\n\n  /**\n   * 获取项目根目录\n   */\n  static findProjectRoot(startPath?: string): string {\n    let currentPath = startPath || process.cwd()\n    \n    while (currentPath !== path.dirname(currentPath)) {\n      // 检查是否存在 package.json\n      const packageJsonPath = this.join(currentPath, 'package.json')\n      if (require('fs').existsSync(packageJsonPath)) {\n        return currentPath\n      }\n      \n      // 检查是否存在 .git 目录\n      const gitPath = this.join(currentPath, '.git')\n      if (require('fs').existsSync(gitPath)) {\n        return currentPath\n      }\n      \n      currentPath = path.dirname(currentPath)\n    }\n    \n    // 如果没找到，返回起始路径\n    return startPath || process.cwd()\n  }\n\n  /**\n   * 获取相对于项目根目录的路径\n   */\n  static getProjectRelativePath(filePath: string, projectRoot?: string): string {\n    const root = projectRoot || this.findProjectRoot()\n    return this.relative(root, filePath)\n  }\n\n  /**\n   * 清理路径（移除多余的分隔符和相对路径符号）\n   */\n  static clean(filePath: string): string {\n    return this.normalize(filePath)\n      .replace(/\\/+/g, '/') // 移除多余的斜杠\n      .replace(/\\/\\.\\//g, '/') // 移除 ./\n      .replace(/\\/\\.$/, '') // 移除结尾的 /.\n      .replace(/^\\.\\//g, '') // 移除开头的 ./\n  }\n\n  /**\n   * 确保路径以指定字符结尾\n   */\n  static ensureTrailingSlash(dirPath: string): string {\n    const normalized = this.normalize(dirPath)\n    return normalized.endsWith('/') ? normalized : `${normalized}/`\n  }\n\n  /**\n   * 确保路径不以指定字符结尾\n   */\n  static removeTrailingSlash(dirPath: string): string {\n    const normalized = this.normalize(dirPath)\n    return normalized.endsWith('/') ? normalized.slice(0, -1) : normalized\n  }\n\n  /**\n   * 获取路径的所有父目录\n   */\n  static getParents(filePath: string): string[] {\n    const parents: string[] = []\n    let currentPath = this.dirname(filePath)\n    \n    while (currentPath !== this.dirname(currentPath)) {\n      parents.push(currentPath)\n      currentPath = this.dirname(currentPath)\n    }\n    \n    return parents\n  }\n\n  /**\n   * 检查路径是否为隐藏文件或目录\n   */\n  static isHidden(filePath: string): boolean {\n    const basename = this.basename(filePath)\n    return basename.startsWith('.')\n  }\n\n  /**\n   * 获取平台特定的路径分隔符\n   */\n  static get sep(): string {\n    return path.sep\n  }\n\n  /**\n   * 获取平台特定的路径定界符\n   */\n  static get delimiter(): string {\n    return path.delimiter\n  }\n}\n\n// 导出便捷函数\nexport const {\n  normalize,\n  resolve,\n  relative,\n  join,\n  dirname,\n  basename,\n  extname,\n  filename,\n  isAbsolute,\n  toAbsolute,\n  toRelative,\n  replaceExt,\n  addSuffix,\n  parse,\n  format,\n  isInside,\n  getCommonParent,\n  getDepth,\n  matchPattern,\n  toFileURL,\n  fromFileURL,\n  findProjectRoot,\n  getProjectRelativePath,\n  clean,\n  ensureTrailingSlash,\n  removeTrailingSlash,\n  getParents,\n  isHidden\n} = PathUtils\n","/**\n * 格式化工具函数\n */\n\n/**\n * 格式化文件大小\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B'\n\n  const units = ['B', 'KB', 'MB', 'GB', 'TB']\n  const k = 1024\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return `${(bytes / Math.pow(k, i)).toFixed(1)} ${units[i]}`\n}\n\n/**\n * 格式化持续时间\n */\nexport function formatDuration(ms: number): string {\n  if (ms < 1000) {\n    return `${ms}ms`\n  }\n\n  const seconds = ms / 1000\n  if (seconds < 60) {\n    return `${seconds.toFixed(1)}s`\n  }\n\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = seconds % 60\n  return `${minutes}m ${remainingSeconds.toFixed(1)}s`\n}\n\n/**\n * 格式化百分比\n */\nexport function formatPercentage(value: number, total: number): string {\n  if (total === 0) return '0%'\n  return `${((value / total) * 100).toFixed(1)}%`\n}\n\n/**\n * 格式化数字\n */\nexport function formatNumber(num: number): string {\n  return num.toLocaleString()\n}\n\n/**\n * 格式化内存使用\n */\nexport function formatMemory(bytes: number): string {\n  return formatFileSize(bytes)\n}\n\n/**\n * 格式化时间戳\n */\nexport function formatTimestamp(timestamp: number): string {\n  return new Date(timestamp).toLocaleString()\n}\n\n/**\n * 格式化相对时间\n */\nexport function formatRelativeTime(timestamp: number): string {\n  const now = Date.now()\n  const diff = now - timestamp\n\n  if (diff < 1000) {\n    return '刚刚'\n  }\n\n  if (diff < 60000) {\n    return `${Math.floor(diff / 1000)}秒前`\n  }\n\n  if (diff < 3600000) {\n    return `${Math.floor(diff / 60000)}分钟前`\n  }\n\n  if (diff < 86400000) {\n    return `${Math.floor(diff / 3600000)}小时前`\n  }\n\n  return `${Math.floor(diff / 86400000)}天前`\n}\n\n/**\n * 格式化路径（缩短显示）\n */\nexport function formatPath(filePath: string, maxLength: number = 50): string {\n  if (filePath.length <= maxLength) {\n    return filePath\n  }\n\n  const parts = filePath.split('/')\n  if (parts.length <= 2) {\n    return filePath\n  }\n\n  // 保留开头和结尾，中间用 ... 替代\n  const start = parts[0]\n  const end = parts[parts.length - 1]\n  return `${start}/.../${end}`\n}\n\n/**\n * 格式化版本号\n */\nexport function formatVersion(version: string): string {\n  // 移除前缀 v\n  return version.replace(/^v/, '')\n}\n\n/**\n * 格式化构建状态\n */\nexport function formatBuildStatus(status: string): string {\n  const statusMap: Record<string, string> = {\n    idle: '空闲',\n    initializing: '初始化中',\n    building: '构建中',\n    watching: '监听中',\n    error: '错误',\n    complete: '完成',\n    cancelled: '已取消'\n  }\n\n  return statusMap[status] || status\n}\n\n// formatError 已在 error-handler.ts 中定义，这里导入\nexport { formatError } from './error-handler'\n\n/**\n * 格式化配置对象\n */\nexport function formatConfig(config: any, indent: number = 2): string {\n  try {\n    return JSON.stringify(config, null, indent)\n  } catch {\n    return String(config)\n  }\n}\n\n/**\n * 格式化列表\n */\nexport function formatList(items: string[], separator: string = ', '): string {\n  if (items.length === 0) return ''\n  if (items.length === 1) return items[0]\n  if (items.length === 2) return items.join(' 和 ')\n\n  const last = items[items.length - 1]\n  const rest = items.slice(0, -1)\n  return `${rest.join(separator)} 和 ${last}`\n}\n\n/**\n * 格式化表格数据\n */\nexport function formatTable(data: Array<Record<string, any>>, columns?: string[]): string {\n  if (data.length === 0) return ''\n\n  const keys = columns || Object.keys(data[0])\n  const rows = data.map(row => keys.map(key => String(row[key] || '')))\n\n  // 计算每列的最大宽度\n  const widths = keys.map((key, i) =>\n    Math.max(\n      key.length,\n      ...rows.map(row => row[i].length)\n    )\n  )\n\n  // 生成表格\n  const header = keys.map((key, i) => key.padEnd(widths[i])).join(' | ')\n  const separator = widths.map(width => '-'.repeat(width)).join('-|-')\n  const body = rows.map(row =>\n    row.map((cell, i) => cell.padEnd(widths[i])).join(' | ')\n  ).join('\\n')\n\n  return `${header}\\n${separator}\\n${body}`\n}\n\n/**\n * 格式化进度条\n */\nexport function formatProgressBar(\n  current: number,\n  total: number,\n  width: number = 20,\n  char: string = '█'\n): string {\n  const percentage = total > 0 ? current / total : 0\n  const filled = Math.round(percentage * width)\n  const empty = width - filled\n\n  return char.repeat(filled) + '░'.repeat(empty)\n}\n\n/**\n * 格式化键值对\n */\nexport function formatKeyValue(\n  obj: Record<string, any>,\n  separator: string = ': ',\n  indent: string = '  '\n): string {\n  return Object.entries(obj)\n    .map(([key, value]) => `${indent}${key}${separator}${value}`)\n    .join('\\n')\n}\n\n/**\n * 截断文本\n */\nexport function truncateText(text: string, maxLength: number, suffix: string = '...'): string {\n  if (text.length <= maxLength) {\n    return text\n  }\n\n  return text.slice(0, maxLength - suffix.length) + suffix\n}\n\n/**\n * 首字母大写\n */\nexport function capitalize(text: string): string {\n  return text.charAt(0).toUpperCase() + text.slice(1)\n}\n\n/**\n * 驼峰转短横线\n */\nexport function camelToKebab(text: string): string {\n  return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * 短横线转驼峰\n */\nexport function kebabToCamel(text: string): string {\n  return text.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())\n}\n","/**\n * 工厂函数 - 便捷创建构建器实例\n */\n\nimport { LibraryBuilder } from '../core/LibraryBuilder'\nimport type { BuilderOptions } from '../types/builder'\nimport type { BuilderConfig } from '../types/config'\nimport { LibraryType } from '../types/library'\nimport { createLogger } from './logger'\n\n/**\n * 创建构建器实例的便捷函数\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  // 创建默认的日志记录器\n  const logger = options.logger || createLogger({\n    level: 'info',\n    colors: true,\n    prefix: '@ldesign/builder'\n  })\n\n  // 创建默认的错误处理器（暂时不使用）\n  // const errorHandler = createErrorHandler({\n  //   logger,\n  //   showSuggestions: true\n  // })\n\n  // 合并选项\n  const builderOptions: BuilderOptions = {\n    config,\n    logger,\n    autoDetect: true,\n    cache: true,\n    performance: true,\n    ...options\n  }\n\n  return new LibraryBuilder(builderOptions)\n}\n\n/**\n * 创建开发模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createDevBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const devConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    mode: 'development',\n    minify: false,\n    output: {\n      sourcemap: 'inline'\n    },\n    debug: true,\n    ...config\n  }\n\n  return createBuilder(devConfig, options)\n}\n\n/**\n * 创建生产模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createProdBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const prodConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    mode: 'production',\n    minify: true,\n    clean: true,\n    output: {\n      sourcemap: true\n    },\n    debug: false,\n    ...config\n  }\n\n  return createBuilder(prodConfig, options)\n}\n\n/**\n * 创建 TypeScript 库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createTypeScriptBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const tsConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    libraryType: LibraryType.TYPESCRIPT,\n    typescript: {\n      declaration: true,\n      isolatedDeclarations: true\n    },\n    output: {\n      format: ['esm', 'cjs']\n    },\n    ...config\n  }\n\n  return createBuilder(tsConfig, options)\n}\n\n/**\n * 创建 Vue3 组件库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createVue3Builder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const vueConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    libraryType: LibraryType.VUE3,\n    vue: {\n      version: 3,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    output: {\n      format: ['esm', 'cjs', 'umd']\n    },\n    ...config\n  }\n\n  return createBuilder(vueConfig, options)\n}\n\n/**\n * 创建样式库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createStyleBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const styleConfig: BuilderConfig = {\n    input: 'src/index.css',\n    libraryType: LibraryType.STYLE,\n    style: {\n      extract: true,\n      minimize: true,\n      autoprefixer: true\n    },\n    output: {\n      format: ['esm']\n    },\n    ...config\n  }\n\n  return createBuilder(styleConfig, options)\n}\n\n/**\n * 创建快速构建器（最小配置）\n * \n * @param input 入口文件\n * @param output 输出目录\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createQuickBuilder(\n  input: string,\n  output?: string,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const quickConfig: BuilderConfig = {\n    input,\n    output: output ? { dir: output } : undefined\n  }\n\n  return createBuilder(quickConfig, options)\n}\n\n/**\n * 创建监听模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createWatchBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const watchConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    watch: {\n      include: ['src/**/*'],\n      exclude: ['node_modules/**/*', 'dist/**/*']\n    },\n    ...config\n  }\n\n  return createBuilder(watchConfig, options)\n}\n\n/**\n * 从 package.json 创建构建器\n * \n * @param packageJsonPath package.json 文件路径\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport async function createBuilderFromPackage(\n  packageJsonPath: string = './package.json',\n  options: Omit<BuilderOptions, 'config'> = {}\n): Promise<LibraryBuilder> {\n  try {\n    const { readFile } = await import('./file-system')\n    const packageContent = await readFile(packageJsonPath, 'utf-8')\n    const packageJson = JSON.parse(packageContent)\n\n    // 从 package.json 推断配置\n    const config: BuilderConfig = {\n      input: packageJson.source || packageJson.main || 'src/index.ts',\n      output: {\n        dir: 'dist'\n      }\n    }\n\n    // 如果有 builder 字段，使用它\n    if (packageJson.builder) {\n      Object.assign(config, packageJson.builder)\n    }\n\n    return createBuilder(config, options)\n  } catch (error) {\n    throw new Error(`从 package.json 创建构建器失败: ${(error as Error).message}`)\n  }\n}\n\n/**\n * 批量创建构建器\n * \n * @param configs 配置数组\n * @param options 构建器选项\n * @returns 构建器实例数组\n */\nexport function createBuilders(\n  configs: BuilderConfig[],\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder[] {\n  return configs.map(config => createBuilder(config, options))\n}\n\n/**\n * 创建构建器池\n * \n * @param configs 配置数组\n * @param options 构建器选项\n * @returns 构建器池\n */\nexport function createBuilderPool(\n  configs: BuilderConfig[],\n  options: Omit<BuilderOptions, 'config'> = {}\n): {\n  builders: LibraryBuilder[]\n  buildAll: () => Promise<any[]>\n  disposeAll: () => Promise<void>\n} {\n  const builders = createBuilders(configs, options)\n\n  return {\n    builders,\n\n    async buildAll() {\n      return Promise.all(builders.map(builder => builder.build()))\n    },\n\n    async disposeAll() {\n      await Promise.all(builders.map(builder => builder.dispose()))\n    }\n  }\n}\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst fs = require('fs');\nconst { Readable } = require('stream');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst picomatch = require('picomatch');\n\nconst readdir = promisify(fs.readdir);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\n/**\n * @typedef {Object} EntryInfo\n * @property {String} path\n * @property {String} fullPath\n * @property {fs.Stats=} stats\n * @property {fs.Dirent=} dirent\n * @property {String} basename\n */\n\nconst BANG = '!';\nconst RECURSIVE_ERROR_CODE = 'READDIRP_RECURSIVE_ERROR';\nconst NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP', RECURSIVE_ERROR_CODE]);\nconst FILE_TYPE = 'files';\nconst DIR_TYPE = 'directories';\nconst FILE_DIR_TYPE = 'files_directories';\nconst EVERYTHING_TYPE = 'all';\nconst ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];\n\nconst isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);\nconst [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));\nconst wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));\n\nconst normalizeFilter = filter => {\n  if (filter === undefined) return;\n  if (typeof filter === 'function') return filter;\n\n  if (typeof filter === 'string') {\n    const glob = picomatch(filter.trim());\n    return entry => glob(entry.basename);\n  }\n\n  if (Array.isArray(filter)) {\n    const positive = [];\n    const negative = [];\n    for (const item of filter) {\n      const trimmed = item.trim();\n      if (trimmed.charAt(0) === BANG) {\n        negative.push(picomatch(trimmed.slice(1)));\n      } else {\n        positive.push(picomatch(trimmed));\n      }\n    }\n\n    if (negative.length > 0) {\n      if (positive.length > 0) {\n        return entry =>\n          positive.some(f => f(entry.basename)) && !negative.some(f => f(entry.basename));\n      }\n      return entry => !negative.some(f => f(entry.basename));\n    }\n    return entry => positive.some(f => f(entry.basename));\n  }\n};\n\nclass ReaddirpStream extends Readable {\n  static get defaultOptions() {\n    return {\n      root: '.',\n      /* eslint-disable no-unused-vars */\n      fileFilter: (path) => true,\n      directoryFilter: (path) => true,\n      /* eslint-enable no-unused-vars */\n      type: FILE_TYPE,\n      lstat: false,\n      depth: 2147483648,\n      alwaysStat: false\n    };\n  }\n\n  constructor(options = {}) {\n    super({\n      objectMode: true,\n      autoDestroy: true,\n      highWaterMark: options.highWaterMark || 4096\n    });\n    const opts = { ...ReaddirpStream.defaultOptions, ...options };\n    const { root, type } = opts;\n\n    this._fileFilter = normalizeFilter(opts.fileFilter);\n    this._directoryFilter = normalizeFilter(opts.directoryFilter);\n\n    const statMethod = opts.lstat ? lstat : stat;\n    // Use bigint stats if it's windows and stat() supports options (node 10+).\n    if (wantBigintFsStats) {\n      this._stat = path => statMethod(path, { bigint: true });\n    } else {\n      this._stat = statMethod;\n    }\n\n    this._maxDepth = opts.depth;\n    this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsEverything = type === EVERYTHING_TYPE;\n    this._root = sysPath.resolve(root);\n    this._isDirent = ('Dirent' in fs) && !opts.alwaysStat;\n    this._statsProp = this._isDirent ? 'dirent' : 'stats';\n    this._rdOptions = { encoding: 'utf8', withFileTypes: this._isDirent };\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  }\n\n  async _read(batch) {\n    if (this.reading) return;\n    this.reading = true;\n\n    try {\n      while (!this.destroyed && batch > 0) {\n        const { path, depth, files = [] } = this.parent || {};\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) {\n                this.push(entry);\n                batch--;\n              }\n            } else if ((entryType === 'file' || this._includeAsFile(entry)) && this._fileFilter(entry)) {\n              if (this._wantsFile) {\n                this.push(entry);\n                batch--;\n              }\n            }\n          }\n        } else {\n          const parent = this.parents.pop();\n          if (!parent) {\n            this.push(null);\n            break;\n          }\n          this.parent = await parent;\n          if (this.destroyed) return;\n        }\n      }\n    } catch (error) {\n      this.destroy(error);\n    } finally {\n      this.reading = false;\n    }\n  }\n\n  async _exploreDir(path, depth) {\n    let files;\n    try {\n      files = await readdir(path, this._rdOptions);\n    } catch (error) {\n      this._onError(error);\n    }\n    return { files, depth, path };\n  }\n\n  async _formatEntry(dirent, path) {\n    let entry;\n    try {\n      const basename = this._isDirent ? dirent.name : dirent;\n      const fullPath = sysPath.resolve(sysPath.join(path, basename));\n      entry = { path: sysPath.relative(this._root, fullPath), fullPath, basename };\n      entry[this._statsProp] = this._isDirent ? dirent : await this._stat(fullPath);\n    } catch (err) {\n      this._onError(err);\n    }\n    return entry;\n  }\n\n  _onError(err) {\n    if (isNormalFlowError(err) && !this.destroyed) {\n      this.emit('warn', err);\n    } else {\n      this.destroy(err);\n    }\n  }\n\n  async _getEntryType(entry) {\n    // entry may be undefined, because a warning or an error were emitted\n    // and the statsProp is undefined\n    const stats = entry && entry[this._statsProp];\n    if (!stats) {\n      return;\n    }\n    if (stats.isFile()) {\n      return 'file';\n    }\n    if (stats.isDirectory()) {\n      return 'directory';\n    }\n    if (stats && stats.isSymbolicLink()) {\n      const full = entry.fullPath;\n      try {\n        const entryRealPath = await realpath(full);\n        const entryRealPathStats = await lstat(entryRealPath);\n        if (entryRealPathStats.isFile()) {\n          return 'file';\n        }\n        if (entryRealPathStats.isDirectory()) {\n          const len = entryRealPath.length;\n          if (full.startsWith(entryRealPath) && full.substr(len, 1) === sysPath.sep) {\n            const recursiveError = new Error(\n              `Circular symlink detected: \"${full}\" points to \"${entryRealPath}\"`\n            );\n            recursiveError.code = RECURSIVE_ERROR_CODE;\n            return this._onError(recursiveError);\n          }\n          return 'directory';\n        }\n      } catch (error) {\n        this._onError(error);\n      }\n    }\n  }\n\n  _includeAsFile(entry) {\n    const stats = entry && entry[this._statsProp];\n\n    return stats && this._wantsEverything && !stats.isDirectory();\n  }\n}\n\n/**\n * @typedef {Object} ReaddirpArguments\n * @property {Function=} fileFilter\n * @property {Function=} directoryFilter\n * @property {String=} type\n * @property {Number=} depth\n * @property {String=} root\n * @property {Boolean=} lstat\n * @property {Boolean=} bigint\n */\n\n/**\n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param {String} root Root directory\n * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth\n */\nconst readdirp = (root, options = {}) => {\n  let type = options.entryType || options.type;\n  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility\n  if (type) options.type = type;\n  if (!root) {\n    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');\n  } else if (typeof root !== 'string') {\n    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');\n  } else if (type && !ALL_TYPES.includes(type)) {\n    throw new Error(`readdirp: Invalid type passed. Use one of ${ALL_TYPES.join(', ')}`);\n  }\n\n  options.root = root;\n  return new ReaddirpStream(options);\n};\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry))\n      .on('end', () => resolve(files))\n      .on('error', error => reject(error));\n  });\n};\n\nreaddirp.promise = readdirpPromise;\nreaddirp.ReaddirpStream = ReaddirpStream;\nreaddirp.default = readdirp;\n\nmodule.exports = readdirp;\n","/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst picomatch = require('picomatch');\nconst normalizePath = require('normalize-path');\n\n/**\n * @typedef {(testString: string) => boolean} AnymatchFn\n * @typedef {string|RegExp|AnymatchFn} AnymatchPattern\n * @typedef {AnymatchPattern|AnymatchPattern[]} AnymatchMatcher\n */\nconst BANG = '!';\nconst DEFAULT_OPTIONS = {returnIndex: false};\nconst arrify = (item) => Array.isArray(item) ? item : [item];\n\n/**\n * @param {AnymatchPattern} matcher\n * @param {object} options\n * @returns {AnymatchFn}\n */\nconst createPattern = (matcher, options) => {\n  if (typeof matcher === 'function') {\n    return matcher;\n  }\n  if (typeof matcher === 'string') {\n    const glob = picomatch(matcher, options);\n    return (string) => matcher === string || glob(string);\n  }\n  if (matcher instanceof RegExp) {\n    return (string) => matcher.test(string);\n  }\n  return (string) => false;\n};\n\n/**\n * @param {Array<Function>} patterns\n * @param {Array<Function>} negPatterns\n * @param {String|Array} args\n * @param {Boolean} returnIndex\n * @returns {boolean|number}\n */\nconst matchPatterns = (patterns, negPatterns, args, returnIndex) => {\n  const isList = Array.isArray(args);\n  const _path = isList ? args[0] : args;\n  if (!isList && typeof _path !== 'string') {\n    throw new TypeError('anymatch: second argument must be a string: got ' +\n      Object.prototype.toString.call(_path))\n  }\n  const path = normalizePath(_path, false);\n\n  for (let index = 0; index < negPatterns.length; index++) {\n    const nglob = negPatterns[index];\n    if (nglob(path)) {\n      return returnIndex ? -1 : false;\n    }\n  }\n\n  const applied = isList && [path].concat(args.slice(1));\n  for (let index = 0; index < patterns.length; index++) {\n    const pattern = patterns[index];\n    if (isList ? pattern(...applied) : pattern(path)) {\n      return returnIndex ? index : true;\n    }\n  }\n\n  return returnIndex ? -1 : false;\n};\n\n/**\n * @param {AnymatchMatcher} matchers\n * @param {Array|string} testString\n * @param {object} options\n * @returns {boolean|number|Function}\n */\nconst anymatch = (matchers, testString, options = DEFAULT_OPTIONS) => {\n  if (matchers == null) {\n    throw new TypeError('anymatch: specify first argument');\n  }\n  const opts = typeof options === 'boolean' ? {returnIndex: options} : options;\n  const returnIndex = opts.returnIndex || false;\n\n  // Early cache for matchers.\n  const mtchers = arrify(matchers);\n  const negatedGlobs = mtchers\n    .filter(item => typeof item === 'string' && item.charAt(0) === BANG)\n    .map(item => item.slice(1))\n    .map(item => picomatch(item, opts));\n  const patterns = mtchers\n    .filter(item => typeof item !== 'string' || (typeof item === 'string' && item.charAt(0) !== BANG))\n    .map(matcher => createPattern(matcher, opts));\n\n  if (testString == null) {\n    return (testString, ri = false) => {\n      const returnIndex = typeof ri === 'boolean' ? ri : false;\n      return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n    }\n  }\n\n  return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n};\n\nanymatch.default = anymatch;\nmodule.exports = anymatch;\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n","'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  const node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      const ele = arr[i];\n\n      if (Array.isArray(ele)) {\n        flat(ele);\n        continue;\n      }\n\n      if (ele !== undefined) {\n        result.push(ele);\n      }\n    }\n    return result;\n  };\n\n  flat(args);\n  return result;\n};\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  const stringify = (node, parent = {}) => {\n    const invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options, maxLen) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.map(v => toMaxLen(String(v), maxLen)).join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.map(v => toMaxLen(String(v), maxLen)).join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options, maxLen)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  const walk = (node, parent = {}) => {\n    const invalidBlock = utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    const invalid = invalidBlock === true || invalidNode === true;\n    const prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n\n    if (node.isClose === true) {\n      console.log('node.isClose', prefix, node.value);\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? prefix + node.value : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? prefix + node.value : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n      const range = fill(...args, { ...options, wrap: false, toRegex: true, strictZeros: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  const result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (const item of queue) {\n    if (Array.isArray(item)) {\n      for (const value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  const rangeLimit = options.rangeLimit === undefined ? 1000 : options.rangeLimit;\n\n  const walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    const enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      const child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 10000,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  const opts = options || {};\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  const ast = { type: 'root', input, nodes: [] };\n  const stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  const length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      const open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      const dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      const brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      const type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        const open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      const siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        const before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      const parent = stack[stack.length - 1];\n      const index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (const pattern of input) {\n      const result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n  return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","module.exports = require('./binary-extensions.json');\n","'use strict';\nconst path = require('path');\nconst binaryExtensions = require('binary-extensions');\n\nconst extensions = new Set(binaryExtensions);\n\nmodule.exports = filePath => extensions.has(path.extname(filePath).slice(1).toLowerCase());\n","'use strict';\n\nconst {sep} = require('path');\nconst {platform} = process;\nconst os = require('os');\n\nexports.EV_ALL = 'all';\nexports.EV_READY = 'ready';\nexports.EV_ADD = 'add';\nexports.EV_CHANGE = 'change';\nexports.EV_ADD_DIR = 'addDir';\nexports.EV_UNLINK = 'unlink';\nexports.EV_UNLINK_DIR = 'unlinkDir';\nexports.EV_RAW = 'raw';\nexports.EV_ERROR = 'error';\n\nexports.STR_DATA = 'data';\nexports.STR_END = 'end';\nexports.STR_CLOSE = 'close';\n\nexports.FSEVENT_CREATED = 'created';\nexports.FSEVENT_MODIFIED = 'modified';\nexports.FSEVENT_DELETED = 'deleted';\nexports.FSEVENT_MOVED = 'moved';\nexports.FSEVENT_CLONED = 'cloned';\nexports.FSEVENT_UNKNOWN = 'unknown';\nexports.FSEVENT_FLAG_MUST_SCAN_SUBDIRS = 1;\nexports.FSEVENT_TYPE_FILE = 'file';\nexports.FSEVENT_TYPE_DIRECTORY = 'directory';\nexports.FSEVENT_TYPE_SYMLINK = 'symlink';\n\nexports.KEY_LISTENERS = 'listeners';\nexports.KEY_ERR = 'errHandlers';\nexports.KEY_RAW = 'rawEmitters';\nexports.HANDLER_KEYS = [exports.KEY_LISTENERS, exports.KEY_ERR, exports.KEY_RAW];\n\nexports.DOT_SLASH = `.${sep}`;\n\nexports.BACK_SLASH_RE = /\\\\/g;\nexports.DOUBLE_SLASH_RE = /\\/\\//;\nexports.SLASH_OR_BACK_SLASH_RE = /[/\\\\]/;\nexports.DOT_RE = /\\..*\\.(sw[px])$|~$|\\.subl.*\\.tmp/;\nexports.REPLACER_RE = /^\\.[/\\\\]/;\n\nexports.SLASH = '/';\nexports.SLASH_SLASH = '//';\nexports.BRACE_START = '{';\nexports.BANG = '!';\nexports.ONE_DOT = '.';\nexports.TWO_DOTS = '..';\nexports.STAR = '*';\nexports.GLOBSTAR = '**';\nexports.ROOT_GLOBSTAR = '/**/*';\nexports.SLASH_GLOBSTAR = '/**';\nexports.DIR_SUFFIX = 'Dir';\nexports.ANYMATCH_OPTS = {dot: true};\nexports.STRING_TYPE = 'string';\nexports.FUNCTION_TYPE = 'function';\nexports.EMPTY_STR = '';\nexports.EMPTY_FN = () => {};\nexports.IDENTITY_FN = val => val;\n\nexports.isWindows = platform === 'win32';\nexports.isMacos = platform === 'darwin';\nexports.isLinux = platform === 'linux';\nexports.isIBMi = os.type() === 'OS400';\n","'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst isBinaryPath = require('is-binary-path');\nconst {\n  isWindows,\n  isLinux,\n  EMPTY_FN,\n  EMPTY_STR,\n  KEY_LISTENERS,\n  KEY_ERR,\n  KEY_RAW,\n  HANDLER_KEYS,\n  EV_CHANGE,\n  EV_ADD,\n  EV_ADD_DIR,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  BRACE_START,\n  STAR\n} = require('./constants');\n\nconst THROTTLE_MODE_WATCH = 'watch';\n\nconst open = promisify(fs.open);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst close = promisify(fs.close);\nconst fsrealpath = promisify(fs.realpath);\n\nconst statMethods = { lstat, stat };\n\n// TODO: emit errors properly. Example: EMFILE on Macos.\nconst foreach = (val, fn) => {\n  if (val instanceof Set) {\n    val.forEach(fn);\n  } else {\n    fn(val);\n  }\n};\n\nconst addAndConvert = (main, prop, item) => {\n  let container = main[prop];\n  if (!(container instanceof Set)) {\n    main[prop] = container = new Set([container]);\n  }\n  container.add(item);\n};\n\nconst clearItem = cont => key => {\n  const set = cont[key];\n  if (set instanceof Set) {\n    set.clear();\n  } else {\n    delete cont[key];\n  }\n};\n\nconst delFromSet = (main, prop, item) => {\n  const container = main[prop];\n  if (container instanceof Set) {\n    container.delete(item);\n  } else if (container === item) {\n    delete main[prop];\n  }\n};\n\nconst isEmptySet = (val) => val instanceof Set ? val.size === 0 : !val;\n\n/**\n * @typedef {String} Path\n */\n\n// fs_watch helpers\n\n// object to hold per-process fs_watch instances\n// (may be shared across chokidar FSWatcher instances)\n\n/**\n * @typedef {Object} FsWatchContainer\n * @property {Set} listeners\n * @property {Set} errHandlers\n * @property {Set} rawEmitters\n * @property {fs.FSWatcher=} watcher\n * @property {Boolean=} watcherUnusable\n */\n\n/**\n * @type {Map<String,FsWatchContainer>}\n */\nconst FsWatchInstances = new Map();\n\n/**\n * Instantiates the fs_watch interface\n * @param {String} path to be watched\n * @param {Object} options to be passed to fs_watch\n * @param {Function} listener main event handler\n * @param {Function} errHandler emits info about errors\n * @param {Function} emitRaw emits raw event data\n * @returns {fs.FSWatcher} new fsevents instance\n */\nfunction createFsWatchInstance(path, options, listener, errHandler, emitRaw) {\n  const handleEvent = (rawEvent, evPath) => {\n    listener(path);\n    emitRaw(rawEvent, evPath, {watchedPath: path});\n\n    // emit based on events occurring for files from a directory's watcher in\n    // case the file's watcher misses it (and rely on throttling to de-dupe)\n    if (evPath && path !== evPath) {\n      fsWatchBroadcast(\n        sysPath.resolve(path, evPath), KEY_LISTENERS, sysPath.join(path, evPath)\n      );\n    }\n  };\n  try {\n    return fs.watch(path, options, handleEvent);\n  } catch (error) {\n    errHandler(error);\n  }\n}\n\n/**\n * Helper for passing fs_watch event data to a collection of listeners\n * @param {Path} fullPath absolute path bound to fs_watch instance\n * @param {String} type listener type\n * @param {*=} val1 arguments to be passed to listeners\n * @param {*=} val2\n * @param {*=} val3\n */\nconst fsWatchBroadcast = (fullPath, type, val1, val2, val3) => {\n  const cont = FsWatchInstances.get(fullPath);\n  if (!cont) return;\n  foreach(cont[type], (listener) => {\n    listener(val1, val2, val3);\n  });\n};\n\n/**\n * Instantiates the fs_watch interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path\n * @param {String} fullPath absolute path\n * @param {Object} options to be passed to fs_watch\n * @param {Object} handlers container for event listener functions\n */\nconst setFsWatchListener = (path, fullPath, options, handlers) => {\n  const {listener, errHandler, rawEmitter} = handlers;\n  let cont = FsWatchInstances.get(fullPath);\n\n  /** @type {fs.FSWatcher=} */\n  let watcher;\n  if (!options.persistent) {\n    watcher = createFsWatchInstance(\n      path, options, listener, errHandler, rawEmitter\n    );\n    return watcher.close.bind(watcher);\n  }\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_ERR, errHandler);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    watcher = createFsWatchInstance(\n      path,\n      options,\n      fsWatchBroadcast.bind(null, fullPath, KEY_LISTENERS),\n      errHandler, // no need to use broadcast here\n      fsWatchBroadcast.bind(null, fullPath, KEY_RAW)\n    );\n    if (!watcher) return;\n    watcher.on(EV_ERROR, async (error) => {\n      const broadcastErr = fsWatchBroadcast.bind(null, fullPath, KEY_ERR);\n      cont.watcherUnusable = true; // documented since Node 10.4.1\n      // Workaround for https://github.com/joyent/node/issues/4337\n      if (isWindows && error.code === 'EPERM') {\n        try {\n          const fd = await open(path, 'r');\n          await close(fd);\n          broadcastErr(error);\n        } catch (err) {}\n      } else {\n        broadcastErr(error);\n      }\n    });\n    cont = {\n      listeners: listener,\n      errHandlers: errHandler,\n      rawEmitters: rawEmitter,\n      watcher\n    };\n    FsWatchInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // removes this instance's listeners and closes the underlying fs_watch\n  // instance if there are no more listeners left\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_ERR, errHandler);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      // Check to protect against issue gh-730.\n      // if (cont.watcherUnusable) {\n      cont.watcher.close();\n      // }\n      FsWatchInstances.delete(fullPath);\n      HANDLER_KEYS.forEach(clearItem(cont));\n      cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n// fs_watchFile helpers\n\n// object to hold per-process fs_watchFile instances\n// (may be shared across chokidar FSWatcher instances)\nconst FsWatchFileInstances = new Map();\n\n/**\n * Instantiates the fs_watchFile interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path to be watched\n * @param {String} fullPath absolute path\n * @param {Object} options options to be passed to fs_watchFile\n * @param {Object} handlers container for event listener functions\n * @returns {Function} closer\n */\nconst setFsWatchFileListener = (path, fullPath, options, handlers) => {\n  const {listener, rawEmitter} = handlers;\n  let cont = FsWatchFileInstances.get(fullPath);\n\n  /* eslint-disable no-unused-vars, prefer-destructuring */\n  let listeners = new Set();\n  let rawEmitters = new Set();\n\n  const copts = cont && cont.options;\n  if (copts && (copts.persistent < options.persistent || copts.interval > options.interval)) {\n    // \"Upgrade\" the watcher to persistence or a quicker interval.\n    // This creates some unlikely edge case issues if the user mixes\n    // settings in a very weird way, but solving for those cases\n    // doesn't seem worthwhile for the added complexity.\n    listeners = cont.listeners;\n    rawEmitters = cont.rawEmitters;\n    fs.unwatchFile(fullPath);\n    cont = undefined;\n  }\n\n  /* eslint-enable no-unused-vars, prefer-destructuring */\n\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    // TODO\n    // listeners.add(listener);\n    // rawEmitters.add(rawEmitter);\n    cont = {\n      listeners: listener,\n      rawEmitters: rawEmitter,\n      options,\n      watcher: fs.watchFile(fullPath, options, (curr, prev) => {\n        foreach(cont.rawEmitters, (rawEmitter) => {\n          rawEmitter(EV_CHANGE, fullPath, {curr, prev});\n        });\n        const currmtime = curr.mtimeMs;\n        if (curr.size !== prev.size || currmtime > prev.mtimeMs || currmtime === 0) {\n          foreach(cont.listeners, (listener) => listener(path, curr));\n        }\n      })\n    };\n    FsWatchFileInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // Removes this instance's listeners and closes the underlying fs_watchFile\n  // instance if there are no more listeners left.\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      FsWatchFileInstances.delete(fullPath);\n      fs.unwatchFile(fullPath);\n      cont.options = cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n/**\n * @mixin\n */\nclass NodeFsHandler {\n\n/**\n * @param {import(\"../index\").FSWatcher} fsW\n */\nconstructor(fsW) {\n  this.fsw = fsW;\n  this._boundHandleError = (error) => fsW._handleError(error);\n}\n\n/**\n * Watch file for changes with fs_watchFile or fs_watch.\n * @param {String} path to file or dir\n * @param {Function} listener on fs change\n * @returns {Function} closer for the watcher instance\n */\n_watchWithNodeFs(path, listener) {\n  const opts = this.fsw.options;\n  const directory = sysPath.dirname(path);\n  const basename = sysPath.basename(path);\n  const parent = this.fsw._getWatchedDir(directory);\n  parent.add(basename);\n  const absolutePath = sysPath.resolve(path);\n  const options = {persistent: opts.persistent};\n  if (!listener) listener = EMPTY_FN;\n\n  let closer;\n  if (opts.usePolling) {\n    options.interval = opts.enableBinaryInterval && isBinaryPath(basename) ?\n      opts.binaryInterval : opts.interval;\n    closer = setFsWatchFileListener(path, absolutePath, options, {\n      listener,\n      rawEmitter: this.fsw._emitRaw\n    });\n  } else {\n    closer = setFsWatchListener(path, absolutePath, options, {\n      listener,\n      errHandler: this._boundHandleError,\n      rawEmitter: this.fsw._emitRaw\n    });\n  }\n  return closer;\n}\n\n/**\n * Watch a file and emit add event if warranted.\n * @param {Path} file Path\n * @param {fs.Stats} stats result of fs_stat\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @returns {Function} closer for the watcher instance\n */\n_handleFile(file, stats, initialAdd) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const dirname = sysPath.dirname(file);\n  const basename = sysPath.basename(file);\n  const parent = this.fsw._getWatchedDir(dirname);\n  // stats is always present\n  let prevStats = stats;\n\n  // if the file is already being watched, do nothing\n  if (parent.has(basename)) return;\n\n  const listener = async (path, newStats) => {\n    if (!this.fsw._throttle(THROTTLE_MODE_WATCH, file, 5)) return;\n    if (!newStats || newStats.mtimeMs === 0) {\n      try {\n        const newStats = await stat(file);\n        if (this.fsw.closed) return;\n        // Check that change event was not fired because of changed only accessTime.\n        const at = newStats.atimeMs;\n        const mt = newStats.mtimeMs;\n        if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n          this.fsw._emit(EV_CHANGE, file, newStats);\n        }\n        if (isLinux && prevStats.ino !== newStats.ino) {\n          this.fsw._closeFile(path)\n          prevStats = newStats;\n          this.fsw._addPathCloser(path, this._watchWithNodeFs(file, listener));\n        } else {\n          prevStats = newStats;\n        }\n      } catch (error) {\n        // Fix issues where mtime is null but file is still present\n        this.fsw._remove(dirname, basename);\n      }\n      // add is about to be emitted if file not already tracked in parent\n    } else if (parent.has(basename)) {\n      // Check that change event was not fired because of changed only accessTime.\n      const at = newStats.atimeMs;\n      const mt = newStats.mtimeMs;\n      if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n        this.fsw._emit(EV_CHANGE, file, newStats);\n      }\n      prevStats = newStats;\n    }\n  }\n  // kick off the watcher\n  const closer = this._watchWithNodeFs(file, listener);\n\n  // emit an add event if we're supposed to\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && this.fsw._isntIgnored(file)) {\n    if (!this.fsw._throttle(EV_ADD, file, 0)) return;\n    this.fsw._emit(EV_ADD, file, stats);\n  }\n\n  return closer;\n}\n\n/**\n * Handle symlinks encountered while reading a dir.\n * @param {Object} entry returned by readdirp\n * @param {String} directory path of dir being read\n * @param {String} path of this item\n * @param {String} item basename of this item\n * @returns {Promise<Boolean>} true if no more processing is needed for this entry.\n */\nasync _handleSymlink(entry, directory, path, item) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const full = entry.fullPath;\n  const dir = this.fsw._getWatchedDir(directory);\n\n  if (!this.fsw.options.followSymlinks) {\n    // watch symlink directly (don't follow) and detect changes\n    this.fsw._incrReadyCount();\n\n    let linkPath;\n    try {\n      linkPath = await fsrealpath(path);\n    } catch (e) {\n      this.fsw._emitReady();\n      return true;\n    }\n\n    if (this.fsw.closed) return;\n    if (dir.has(item)) {\n      if (this.fsw._symlinkPaths.get(full) !== linkPath) {\n        this.fsw._symlinkPaths.set(full, linkPath);\n        this.fsw._emit(EV_CHANGE, path, entry.stats);\n      }\n    } else {\n      dir.add(item);\n      this.fsw._symlinkPaths.set(full, linkPath);\n      this.fsw._emit(EV_ADD, path, entry.stats);\n    }\n    this.fsw._emitReady();\n    return true;\n  }\n\n  // don't follow the same symlink more than once\n  if (this.fsw._symlinkPaths.has(full)) {\n    return true;\n  }\n\n  this.fsw._symlinkPaths.set(full, true);\n}\n\n_handleRead(directory, initialAdd, wh, target, dir, depth, throttler) {\n  // Normalize the directory name on Windows\n  directory = sysPath.join(directory, EMPTY_STR);\n\n  if (!wh.hasGlob) {\n    throttler = this.fsw._throttle('readdir', directory, 1000);\n    if (!throttler) return;\n  }\n\n  const previous = this.fsw._getWatchedDir(wh.path);\n  const current = new Set();\n\n  let stream = this.fsw._readdirp(directory, {\n    fileFilter: entry => wh.filterPath(entry),\n    directoryFilter: entry => wh.filterDir(entry),\n    depth: 0\n  }).on(STR_DATA, async (entry) => {\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    const item = entry.path;\n    let path = sysPath.join(directory, item);\n    current.add(item);\n\n    if (entry.stats.isSymbolicLink() && await this._handleSymlink(entry, directory, path, item)) {\n      return;\n    }\n\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    // Files that present in current directory snapshot\n    // but absent in previous are added to watch list and\n    // emit `add` event.\n    if (item === target || !target && !previous.has(item)) {\n      this.fsw._incrReadyCount();\n\n      // ensure relativeness of path is preserved in case of watcher reuse\n      path = sysPath.join(dir, sysPath.relative(dir, path));\n\n      this._addToNodeFs(path, initialAdd, wh, depth + 1);\n    }\n  }).on(EV_ERROR, this._boundHandleError);\n\n  return new Promise(resolve =>\n    stream.once(STR_END, () => {\n      if (this.fsw.closed) {\n        stream = undefined;\n        return;\n      }\n      const wasThrottled = throttler ? throttler.clear() : false;\n\n      resolve();\n\n      // Files that absent in current directory snapshot\n      // but present in previous emit `remove` event\n      // and are removed from @watched[directory].\n      previous.getChildren().filter((item) => {\n        return item !== directory &&\n          !current.has(item) &&\n          // in case of intersecting globs;\n          // a path may have been filtered out of this readdir, but\n          // shouldn't be removed because it matches a different glob\n          (!wh.hasGlob || wh.filterPath({\n            fullPath: sysPath.resolve(directory, item)\n          }));\n      }).forEach((item) => {\n        this.fsw._remove(directory, item);\n      });\n\n      stream = undefined;\n\n      // one more time for any missed in case changes came in extremely quickly\n      if (wasThrottled) this._handleRead(directory, false, wh, target, dir, depth, throttler);\n    })\n  );\n}\n\n/**\n * Read directory to add / remove files from `@watched` list and re-read it on change.\n * @param {String} dir fs path\n * @param {fs.Stats} stats\n * @param {Boolean} initialAdd\n * @param {Number} depth relative to user-supplied path\n * @param {String} target child path targeted for watch\n * @param {Object} wh Common watch helpers for this path\n * @param {String} realpath\n * @returns {Promise<Function>} closer for the watcher instance.\n */\nasync _handleDir(dir, stats, initialAdd, depth, target, wh, realpath) {\n  const parentDir = this.fsw._getWatchedDir(sysPath.dirname(dir));\n  const tracked = parentDir.has(sysPath.basename(dir));\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && !target && !tracked) {\n    if (!wh.hasGlob || wh.globFilter(dir)) this.fsw._emit(EV_ADD_DIR, dir, stats);\n  }\n\n  // ensure dir is tracked (harmless if redundant)\n  parentDir.add(sysPath.basename(dir));\n  this.fsw._getWatchedDir(dir);\n  let throttler;\n  let closer;\n\n  const oDepth = this.fsw.options.depth;\n  if ((oDepth == null || depth <= oDepth) && !this.fsw._symlinkPaths.has(realpath)) {\n    if (!target) {\n      await this._handleRead(dir, initialAdd, wh, target, dir, depth, throttler);\n      if (this.fsw.closed) return;\n    }\n\n    closer = this._watchWithNodeFs(dir, (dirPath, stats) => {\n      // if current directory is removed, do nothing\n      if (stats && stats.mtimeMs === 0) return;\n\n      this._handleRead(dirPath, false, wh, target, dir, depth, throttler);\n    });\n  }\n  return closer;\n}\n\n/**\n * Handle added file, directory, or glob pattern.\n * Delegates call to _handleFile / _handleDir after checks.\n * @param {String} path to file or ir\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @param {Object} priorWh depth relative to user-supplied path\n * @param {Number} depth Child path actually targeted for watch\n * @param {String=} target Child path actually targeted for watch\n * @returns {Promise}\n */\nasync _addToNodeFs(path, initialAdd, priorWh, depth, target) {\n  const ready = this.fsw._emitReady;\n  if (this.fsw._isIgnored(path) || this.fsw.closed) {\n    ready();\n    return false;\n  }\n\n  const wh = this.fsw._getWatchHelpers(path, depth);\n  if (!wh.hasGlob && priorWh) {\n    wh.hasGlob = priorWh.hasGlob;\n    wh.globFilter = priorWh.globFilter;\n    wh.filterPath = entry => priorWh.filterPath(entry);\n    wh.filterDir = entry => priorWh.filterDir(entry);\n  }\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      ready();\n      return false;\n    }\n\n    const follow = this.fsw.options.followSymlinks && !path.includes(STAR) && !path.includes(BRACE_START);\n    let closer;\n    if (stats.isDirectory()) {\n      const absPath = sysPath.resolve(path);\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      closer = await this._handleDir(wh.watchPath, stats, initialAdd, depth, target, wh, targetPath);\n      if (this.fsw.closed) return;\n      // preserve this symlink's target path\n      if (absPath !== targetPath && targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(absPath, targetPath);\n      }\n    } else if (stats.isSymbolicLink()) {\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      const parent = sysPath.dirname(wh.watchPath);\n      this.fsw._getWatchedDir(parent).add(wh.watchPath);\n      this.fsw._emit(EV_ADD, wh.watchPath, stats);\n      closer = await this._handleDir(parent, stats, initialAdd, depth, path, wh, targetPath);\n      if (this.fsw.closed) return;\n\n      // preserve this symlink's target path\n      if (targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(sysPath.resolve(path), targetPath);\n      }\n    } else {\n      closer = this._handleFile(wh.watchPath, stats, initialAdd);\n    }\n    ready();\n\n    this.fsw._addPathCloser(path, closer);\n    return false;\n\n  } catch (error) {\n    if (this.fsw._handleError(error)) {\n      ready();\n      return path;\n    }\n  }\n}\n\n}\n\nmodule.exports = NodeFsHandler;\n","'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\n\nlet fsevents;\ntry {\n  fsevents = require('fsevents');\n} catch (error) {\n  if (process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR) console.error(error);\n}\n\nif (fsevents) {\n  // TODO: real check\n  const mtch = process.version.match(/v(\\d+)\\.(\\d+)/);\n  if (mtch && mtch[1] && mtch[2]) {\n    const maj = Number.parseInt(mtch[1], 10);\n    const min = Number.parseInt(mtch[2], 10);\n    if (maj === 8 && min < 16) {\n      fsevents = undefined;\n    }\n  }\n}\n\nconst {\n  EV_ADD,\n  EV_CHANGE,\n  EV_ADD_DIR,\n  EV_UNLINK,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  FSEVENT_CREATED,\n  FSEVENT_MODIFIED,\n  FSEVENT_DELETED,\n  FSEVENT_MOVED,\n  // FSEVENT_CLONED,\n  FSEVENT_UNKNOWN,\n  FSEVENT_FLAG_MUST_SCAN_SUBDIRS,\n  FSEVENT_TYPE_FILE,\n  FSEVENT_TYPE_DIRECTORY,\n  FSEVENT_TYPE_SYMLINK,\n\n  ROOT_GLOBSTAR,\n  DIR_SUFFIX,\n  DOT_SLASH,\n  FUNCTION_TYPE,\n  EMPTY_FN,\n  IDENTITY_FN\n} = require('./constants');\n\nconst Depth = (value) => isNaN(value) ? {} : {depth: value};\n\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\nconst statMethods = { stat, lstat };\n\n/**\n * @typedef {String} Path\n */\n\n/**\n * @typedef {Object} FsEventsWatchContainer\n * @property {Set<Function>} listeners\n * @property {Function} rawEmitter\n * @property {{stop: Function}} watcher\n */\n\n// fsevents instance helper functions\n/**\n * Object to hold per-process fsevents instances (may be shared across chokidar FSWatcher instances)\n * @type {Map<Path,FsEventsWatchContainer>}\n */\nconst FSEventsWatchers = new Map();\n\n// Threshold of duplicate path prefixes at which to start\n// consolidating going forward\nconst consolidateThreshhold = 10;\n\nconst wrongEventFlags = new Set([\n  69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912\n]);\n\n/**\n * Instantiates the fsevents interface\n * @param {Path} path path to be watched\n * @param {Function} callback called when fsevents is bound and ready\n * @returns {{stop: Function}} new fsevents instance\n */\nconst createFSEventsInstance = (path, callback) => {\n  const stop = fsevents.watch(path, callback);\n  return {stop};\n};\n\n/**\n * Instantiates the fsevents interface or binds listeners to an existing one covering\n * the same file tree.\n * @param {Path} path           - to be watched\n * @param {Path} realPath       - real path for symlinks\n * @param {Function} listener   - called when fsevents emits events\n * @param {Function} rawEmitter - passes data to listeners of the 'raw' event\n * @returns {Function} closer\n */\nfunction setFSEventsListener(path, realPath, listener, rawEmitter) {\n  let watchPath = sysPath.extname(realPath) ? sysPath.dirname(realPath) : realPath;\n\n  const parentPath = sysPath.dirname(watchPath);\n  let cont = FSEventsWatchers.get(watchPath);\n\n  // If we've accumulated a substantial number of paths that\n  // could have been consolidated by watching one directory\n  // above the current one, create a watcher on the parent\n  // path instead, so that we do consolidate going forward.\n  if (couldConsolidate(parentPath)) {\n    watchPath = parentPath;\n  }\n\n  const resolvedPath = sysPath.resolve(path);\n  const hasSymlink = resolvedPath !== realPath;\n\n  const filteredListener = (fullPath, flags, info) => {\n    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);\n    if (\n      fullPath === resolvedPath ||\n      !fullPath.indexOf(resolvedPath + sysPath.sep)\n    ) listener(fullPath, flags, info);\n  };\n\n  // check if there is already a watcher on a parent path\n  // modifies `watchPath` to the parent path when it finds a match\n  let watchedParent = false;\n  for (const watchedPath of FSEventsWatchers.keys()) {\n    if (realPath.indexOf(sysPath.resolve(watchedPath) + sysPath.sep) === 0) {\n      watchPath = watchedPath;\n      cont = FSEventsWatchers.get(watchPath);\n      watchedParent = true;\n      break;\n    }\n  }\n\n  if (cont || watchedParent) {\n    cont.listeners.add(filteredListener);\n  } else {\n    cont = {\n      listeners: new Set([filteredListener]),\n      rawEmitter,\n      watcher: createFSEventsInstance(watchPath, (fullPath, flags) => {\n        if (!cont.listeners.size) return;\n        if (flags & FSEVENT_FLAG_MUST_SCAN_SUBDIRS) return;\n        const info = fsevents.getInfo(fullPath, flags);\n        cont.listeners.forEach(list => {\n          list(fullPath, flags, info);\n        });\n\n        cont.rawEmitter(info.event, fullPath, info);\n      })\n    };\n    FSEventsWatchers.set(watchPath, cont);\n  }\n\n  // removes this instance's listeners and closes the underlying fsevents\n  // instance if there are no more listeners left\n  return () => {\n    const lst = cont.listeners;\n\n    lst.delete(filteredListener);\n    if (!lst.size) {\n      FSEventsWatchers.delete(watchPath);\n      if (cont.watcher) return cont.watcher.stop().then(() => {\n        cont.rawEmitter = cont.watcher = undefined;\n        Object.freeze(cont);\n      });\n    }\n  };\n}\n\n// Decide whether or not we should start a new higher-level\n// parent watcher\nconst couldConsolidate = (path) => {\n  let count = 0;\n  for (const watchPath of FSEventsWatchers.keys()) {\n    if (watchPath.indexOf(path) === 0) {\n      count++;\n      if (count >= consolidateThreshhold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n// returns boolean indicating whether fsevents can be used\nconst canUse = () => fsevents && FSEventsWatchers.size < 128;\n\n// determines subdirectory traversal levels from root to path\nconst calcDepth = (path, root) => {\n  let i = 0;\n  while (!path.indexOf(root) && (path = sysPath.dirname(path)) !== root) i++;\n  return i;\n};\n\n// returns boolean indicating whether the fsevents' event info has the same type\n// as the one returned by fs.stat\nconst sameTypes = (info, stats) => (\n  info.type === FSEVENT_TYPE_DIRECTORY && stats.isDirectory() ||\n  info.type === FSEVENT_TYPE_SYMLINK && stats.isSymbolicLink() ||\n  info.type === FSEVENT_TYPE_FILE && stats.isFile()\n)\n\n/**\n * @mixin\n */\nclass FsEventsHandler {\n\n/**\n * @param {import('../index').FSWatcher} fsw\n */\nconstructor(fsw) {\n  this.fsw = fsw;\n}\ncheckIgnored(path, stats) {\n  const ipaths = this.fsw._ignoredPaths;\n  if (this.fsw._isIgnored(path, stats)) {\n    ipaths.add(path);\n    if (stats && stats.isDirectory()) {\n      ipaths.add(path + ROOT_GLOBSTAR);\n    }\n    return true;\n  }\n\n  ipaths.delete(path);\n  ipaths.delete(path + ROOT_GLOBSTAR);\n}\n\naddOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  const event = watchedDir.has(item) ? EV_CHANGE : EV_ADD;\n  this.handleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n}\n\nasync checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  try {\n    const stats = await stat(path)\n    if (this.fsw.closed) return;\n    if (sameTypes(info, stats)) {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  } catch (error) {\n    if (error.code === 'EACCES') {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  }\n}\n\nhandleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  if (this.fsw.closed || this.checkIgnored(path)) return;\n\n  if (event === EV_UNLINK) {\n    const isDirectory = info.type === FSEVENT_TYPE_DIRECTORY\n    // suppress unlink events on never before seen files\n    if (isDirectory || watchedDir.has(item)) {\n      this.fsw._remove(parent, item, isDirectory);\n    }\n  } else {\n    if (event === EV_ADD) {\n      // track new directories\n      if (info.type === FSEVENT_TYPE_DIRECTORY) this.fsw._getWatchedDir(path);\n\n      if (info.type === FSEVENT_TYPE_SYMLINK && opts.followSymlinks) {\n        // push symlinks back to the top of the stack to get handled\n        const curDepth = opts.depth === undefined ?\n          undefined : calcDepth(fullPath, realPath) + 1;\n        return this._addToFsEvents(path, false, true, curDepth);\n      }\n\n      // track new paths\n      // (other than symlinks being followed, which will be tracked soon)\n      this.fsw._getWatchedDir(parent).add(item);\n    }\n    /**\n     * @type {'add'|'addDir'|'unlink'|'unlinkDir'}\n     */\n    const eventName = info.type === FSEVENT_TYPE_DIRECTORY ? event + DIR_SUFFIX : event;\n    this.fsw._emit(eventName, path);\n    if (eventName === EV_ADD_DIR) this._addToFsEvents(path, false, true);\n  }\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} watchPath  - file/dir path to be watched with fsevents\n * @param {String} realPath   - real path (in case of symlinks)\n * @param {Function} transform  - path transformer\n * @param {Function} globFilter - path filter in case a glob pattern was provided\n * @returns {Function} closer for the watcher instance\n*/\n_watchWithFsEvents(watchPath, realPath, transform, globFilter) {\n  if (this.fsw.closed || this.fsw._isIgnored(watchPath)) return;\n  const opts = this.fsw.options;\n  const watchCallback = async (fullPath, flags, info) => {\n    if (this.fsw.closed) return;\n    if (\n      opts.depth !== undefined &&\n      calcDepth(fullPath, realPath) > opts.depth\n    ) return;\n    const path = transform(sysPath.join(\n      watchPath, sysPath.relative(watchPath, fullPath)\n    ));\n    if (globFilter && !globFilter(path)) return;\n    // ensure directories are tracked\n    const parent = sysPath.dirname(path);\n    const item = sysPath.basename(path);\n    const watchedDir = this.fsw._getWatchedDir(\n      info.type === FSEVENT_TYPE_DIRECTORY ? path : parent\n    );\n\n    // correct for wrong events emitted\n    if (wrongEventFlags.has(flags) || info.event === FSEVENT_UNKNOWN) {\n      if (typeof opts.ignored === FUNCTION_TYPE) {\n        let stats;\n        try {\n          stats = await stat(path);\n        } catch (error) {}\n        if (this.fsw.closed) return;\n        if (this.checkIgnored(path, stats)) return;\n        if (sameTypes(info, stats)) {\n          this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        } else {\n          this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        }\n      } else {\n        this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    } else {\n      switch (info.event) {\n      case FSEVENT_CREATED:\n      case FSEVENT_MODIFIED:\n        return this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      case FSEVENT_DELETED:\n      case FSEVENT_MOVED:\n        return this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    }\n  };\n\n  const closer = setFSEventsListener(\n    watchPath,\n    realPath,\n    watchCallback,\n    this.fsw._emitRaw\n  );\n\n  this.fsw._emitReady();\n  return closer;\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} linkPath path to symlink\n * @param {String} fullPath absolute path to the symlink\n * @param {Function} transform pre-existing path transformer\n * @param {Number} curDepth level of subdirectories traversed to where symlink is\n * @returns {Promise<void>}\n */\nasync _handleFsEventsSymlink(linkPath, fullPath, transform, curDepth) {\n  // don't follow the same symlink more than once\n  if (this.fsw.closed || this.fsw._symlinkPaths.has(fullPath)) return;\n\n  this.fsw._symlinkPaths.set(fullPath, true);\n  this.fsw._incrReadyCount();\n\n  try {\n    const linkTarget = await realpath(linkPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(linkTarget)) {\n      return this.fsw._emitReady();\n    }\n\n    this.fsw._incrReadyCount();\n\n    // add the linkTarget for watching with a wrapper for transform\n    // that causes emitted paths to incorporate the link's path\n    this._addToFsEvents(linkTarget || linkPath, (path) => {\n      let aliasedPath = linkPath;\n      if (linkTarget && linkTarget !== DOT_SLASH) {\n        aliasedPath = path.replace(linkTarget, linkPath);\n      } else if (path !== DOT_SLASH) {\n        aliasedPath = sysPath.join(linkPath, path);\n      }\n      return transform(aliasedPath);\n    }, false, curDepth);\n  } catch(error) {\n    if (this.fsw._handleError(error)) {\n      return this.fsw._emitReady();\n    }\n  }\n}\n\n/**\n *\n * @param {Path} newPath\n * @param {fs.Stats} stats\n */\nemitAdd(newPath, stats, processPath, opts, forceAdd) {\n  const pp = processPath(newPath);\n  const isDir = stats.isDirectory();\n  const dirObj = this.fsw._getWatchedDir(sysPath.dirname(pp));\n  const base = sysPath.basename(pp);\n\n  // ensure empty dirs get tracked\n  if (isDir) this.fsw._getWatchedDir(pp);\n  if (dirObj.has(base)) return;\n  dirObj.add(base);\n\n  if (!opts.ignoreInitial || forceAdd === true) {\n    this.fsw._emit(isDir ? EV_ADD_DIR : EV_ADD, pp, stats);\n  }\n}\n\ninitWatch(realPath, path, wh, processPath) {\n  if (this.fsw.closed) return;\n  const closer = this._watchWithFsEvents(\n    wh.watchPath,\n    sysPath.resolve(realPath || wh.watchPath),\n    processPath,\n    wh.globFilter\n  );\n  this.fsw._addPathCloser(path, closer);\n}\n\n/**\n * Handle added path with fsevents\n * @param {String} path file/dir path or glob pattern\n * @param {Function|Boolean=} transform converts working path to what the user expects\n * @param {Boolean=} forceAdd ensure add is emitted\n * @param {Number=} priorDepth Level of subdirectories already traversed.\n * @returns {Promise<void>}\n */\nasync _addToFsEvents(path, transform, forceAdd, priorDepth) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const opts = this.fsw.options;\n  const processPath = typeof transform === FUNCTION_TYPE ? transform : IDENTITY_FN;\n\n  const wh = this.fsw._getWatchHelpers(path);\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      throw null;\n    }\n    if (stats.isDirectory()) {\n      // emit addDir unless this is a glob parent\n      if (!wh.globFilter) this.emitAdd(processPath(path), stats, processPath, opts, forceAdd);\n\n      // don't recurse further if it would exceed depth setting\n      if (priorDepth && priorDepth > opts.depth) return;\n\n      // scan the contents of the dir\n      this.fsw._readdirp(wh.watchPath, {\n        fileFilter: entry => wh.filterPath(entry),\n        directoryFilter: entry => wh.filterDir(entry),\n        ...Depth(opts.depth - (priorDepth || 0))\n      }).on(STR_DATA, (entry) => {\n        // need to check filterPath on dirs b/c filterDir is less restrictive\n        if (this.fsw.closed) {\n          return;\n        }\n        if (entry.stats.isDirectory() && !wh.filterPath(entry)) return;\n\n        const joinedPath = sysPath.join(wh.watchPath, entry.path);\n        const {fullPath} = entry;\n\n        if (wh.followSymlinks && entry.stats.isSymbolicLink()) {\n          // preserve the current depth here since it can't be derived from\n          // real paths past the symlink\n          const curDepth = opts.depth === undefined ?\n            undefined : calcDepth(joinedPath, sysPath.resolve(wh.watchPath)) + 1;\n\n          this._handleFsEventsSymlink(joinedPath, fullPath, processPath, curDepth);\n        } else {\n          this.emitAdd(joinedPath, entry.stats, processPath, opts, forceAdd);\n        }\n      }).on(EV_ERROR, EMPTY_FN).on(STR_END, () => {\n        this.fsw._emitReady();\n      });\n    } else {\n      this.emitAdd(wh.watchPath, stats, processPath, opts, forceAdd);\n      this.fsw._emitReady();\n    }\n  } catch (error) {\n    if (!error || this.fsw._handleError(error)) {\n      // TODO: Strange thing: \"should not choke on an ignored watch path\" will be failed without 2 ready calls -__-\n      this.fsw._emitReady();\n      this.fsw._emitReady();\n    }\n  }\n\n  if (opts.persistent && forceAdd !== true) {\n    if (typeof transform === FUNCTION_TYPE) {\n      // realpath has already been resolved\n      this.initWatch(undefined, path, wh, processPath);\n    } else {\n      let realPath;\n      try {\n        realPath = await realpath(wh.watchPath);\n      } catch (e) {}\n      this.initWatch(realPath, path, wh, processPath);\n    }\n  }\n}\n\n}\n\nmodule.exports = FsEventsHandler;\nmodule.exports.canUse = canUse;\n","'use strict';\n\nconst { EventEmitter } = require('events');\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst readdirp = require('readdirp');\nconst anymatch = require('anymatch').default;\nconst globParent = require('glob-parent');\nconst isGlob = require('is-glob');\nconst braces = require('braces');\nconst normalizePath = require('normalize-path');\n\nconst NodeFsHandler = require('./lib/nodefs-handler');\nconst FsEventsHandler = require('./lib/fsevents-handler');\nconst {\n  EV_ALL,\n  EV_READY,\n  EV_ADD,\n  EV_CHANGE,\n  EV_UNLINK,\n  EV_ADD_DIR,\n  EV_UNLINK_DIR,\n  EV_RAW,\n  EV_ERROR,\n\n  STR_CLOSE,\n  STR_END,\n\n  BACK_SLASH_RE,\n  DOUBLE_SLASH_RE,\n  SLASH_OR_BACK_SLASH_RE,\n  DOT_RE,\n  REPLACER_RE,\n\n  SLASH,\n  SLASH_SLASH,\n  BRACE_START,\n  BANG,\n  ONE_DOT,\n  TWO_DOTS,\n  GLOBSTAR,\n  SLASH_GLOBSTAR,\n  ANYMATCH_OPTS,\n  STRING_TYPE,\n  FUNCTION_TYPE,\n  EMPTY_STR,\n  EMPTY_FN,\n\n  isWindows,\n  isMacos,\n  isIBMi\n} = require('./lib/constants');\n\nconst stat = promisify(fs.stat);\nconst readdir = promisify(fs.readdir);\n\n/**\n * @typedef {String} Path\n * @typedef {'all'|'add'|'addDir'|'change'|'unlink'|'unlinkDir'|'raw'|'error'|'ready'} EventName\n * @typedef {'readdir'|'watch'|'add'|'remove'|'change'} ThrottleType\n */\n\n/**\n *\n * @typedef {Object} WatchHelpers\n * @property {Boolean} followSymlinks\n * @property {'stat'|'lstat'} statMethod\n * @property {Path} path\n * @property {Path} watchPath\n * @property {Function} entryPath\n * @property {Boolean} hasGlob\n * @property {Object} globFilter\n * @property {Function} filterPath\n * @property {Function} filterDir\n */\n\nconst arrify = (value = []) => Array.isArray(value) ? value : [value];\nconst flatten = (list, result = []) => {\n  list.forEach(item => {\n    if (Array.isArray(item)) {\n      flatten(item, result);\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nconst unifyPaths = (paths_) => {\n  /**\n   * @type {Array<String>}\n   */\n  const paths = flatten(arrify(paths_));\n  if (!paths.every(p => typeof p === STRING_TYPE)) {\n    throw new TypeError(`Non-string provided as watch path: ${paths}`);\n  }\n  return paths.map(normalizePathToUnix);\n};\n\n// If SLASH_SLASH occurs at the beginning of path, it is not replaced\n//     because \"//StoragePC/DrivePool/Movies\" is a valid network path\nconst toUnix = (string) => {\n  let str = string.replace(BACK_SLASH_RE, SLASH);\n  let prepend = false;\n  if (str.startsWith(SLASH_SLASH)) {\n    prepend = true;\n  }\n  while (str.match(DOUBLE_SLASH_RE)) {\n    str = str.replace(DOUBLE_SLASH_RE, SLASH);\n  }\n  if (prepend) {\n    str = SLASH + str;\n  }\n  return str;\n};\n\n// Our version of upath.normalize\n// TODO: this is not equal to path-normalize module - investigate why\nconst normalizePathToUnix = (path) => toUnix(sysPath.normalize(toUnix(path)));\n\nconst normalizeIgnored = (cwd = EMPTY_STR) => (path) => {\n  if (typeof path !== STRING_TYPE) return path;\n  return normalizePathToUnix(sysPath.isAbsolute(path) ? path : sysPath.join(cwd, path));\n};\n\nconst getAbsolutePath = (path, cwd) => {\n  if (sysPath.isAbsolute(path)) {\n    return path;\n  }\n  if (path.startsWith(BANG)) {\n    return BANG + sysPath.join(cwd, path.slice(1));\n  }\n  return sysPath.join(cwd, path);\n};\n\nconst undef = (opts, key) => opts[key] === undefined;\n\n/**\n * Directory entry.\n * @property {Path} path\n * @property {Set<Path>} items\n */\nclass DirEntry {\n  /**\n   * @param {Path} dir\n   * @param {Function} removeWatcher\n   */\n  constructor(dir, removeWatcher) {\n    this.path = dir;\n    this._removeWatcher = removeWatcher;\n    /** @type {Set<Path>} */\n    this.items = new Set();\n  }\n\n  add(item) {\n    const {items} = this;\n    if (!items) return;\n    if (item !== ONE_DOT && item !== TWO_DOTS) items.add(item);\n  }\n\n  async remove(item) {\n    const {items} = this;\n    if (!items) return;\n    items.delete(item);\n    if (items.size > 0) return;\n\n    const dir = this.path;\n    try {\n      await readdir(dir);\n    } catch (err) {\n      if (this._removeWatcher) {\n        this._removeWatcher(sysPath.dirname(dir), sysPath.basename(dir));\n      }\n    }\n  }\n\n  has(item) {\n    const {items} = this;\n    if (!items) return;\n    return items.has(item);\n  }\n\n  /**\n   * @returns {Array<String>}\n   */\n  getChildren() {\n    const {items} = this;\n    if (!items) return;\n    return [...items.values()];\n  }\n\n  dispose() {\n    this.items.clear();\n    delete this.path;\n    delete this._removeWatcher;\n    delete this.items;\n    Object.freeze(this);\n  }\n}\n\nconst STAT_METHOD_F = 'stat';\nconst STAT_METHOD_L = 'lstat';\nclass WatchHelper {\n  constructor(path, watchPath, follow, fsw) {\n    this.fsw = fsw;\n    this.path = path = path.replace(REPLACER_RE, EMPTY_STR);\n    this.watchPath = watchPath;\n    this.fullWatchPath = sysPath.resolve(watchPath);\n    this.hasGlob = watchPath !== path;\n    /** @type {object|boolean} */\n    if (path === EMPTY_STR) this.hasGlob = false;\n    this.globSymlink = this.hasGlob && follow ? undefined : false;\n    this.globFilter = this.hasGlob ? anymatch(path, undefined, ANYMATCH_OPTS) : false;\n    this.dirParts = this.getDirParts(path);\n    this.dirParts.forEach((parts) => {\n      if (parts.length > 1) parts.pop();\n    });\n    this.followSymlinks = follow;\n    this.statMethod = follow ? STAT_METHOD_F : STAT_METHOD_L;\n  }\n\n  checkGlobSymlink(entry) {\n    // only need to resolve once\n    // first entry should always have entry.parentDir === EMPTY_STR\n    if (this.globSymlink === undefined) {\n      this.globSymlink = entry.fullParentDir === this.fullWatchPath ?\n        false : {realPath: entry.fullParentDir, linkPath: this.fullWatchPath};\n    }\n\n    if (this.globSymlink) {\n      return entry.fullPath.replace(this.globSymlink.realPath, this.globSymlink.linkPath);\n    }\n\n    return entry.fullPath;\n  }\n\n  entryPath(entry) {\n    return sysPath.join(this.watchPath,\n      sysPath.relative(this.watchPath, this.checkGlobSymlink(entry))\n    );\n  }\n\n  filterPath(entry) {\n    const {stats} = entry;\n    if (stats && stats.isSymbolicLink()) return this.filterDir(entry);\n    const resolvedPath = this.entryPath(entry);\n    const matchesGlob = this.hasGlob && typeof this.globFilter === FUNCTION_TYPE ?\n      this.globFilter(resolvedPath) : true;\n    return matchesGlob &&\n      this.fsw._isntIgnored(resolvedPath, stats) &&\n      this.fsw._hasReadPermissions(stats);\n  }\n\n  getDirParts(path) {\n    if (!this.hasGlob) return [];\n    const parts = [];\n    const expandedPath = path.includes(BRACE_START) ? braces.expand(path) : [path];\n    expandedPath.forEach((path) => {\n      parts.push(sysPath.relative(this.watchPath, path).split(SLASH_OR_BACK_SLASH_RE));\n    });\n    return parts;\n  }\n\n  filterDir(entry) {\n    if (this.hasGlob) {\n      const entryParts = this.getDirParts(this.checkGlobSymlink(entry));\n      let globstar = false;\n      this.unmatchedGlob = !this.dirParts.some((parts) => {\n        return parts.every((part, i) => {\n          if (part === GLOBSTAR) globstar = true;\n          return globstar || !entryParts[0][i] || anymatch(part, entryParts[0][i], ANYMATCH_OPTS);\n        });\n      });\n    }\n    return !this.unmatchedGlob && this.fsw._isntIgnored(this.entryPath(entry), entry.stats);\n  }\n}\n\n/**\n * Watches files & directories for changes. Emitted events:\n * `add`, `addDir`, `change`, `unlink`, `unlinkDir`, `all`, `error`\n *\n *     new FSWatcher()\n *       .add(directories)\n *       .on('add', path => log('File', path, 'was added'))\n */\nclass FSWatcher extends EventEmitter {\n// Not indenting methods for history sake; for now.\nconstructor(_opts) {\n  super();\n\n  const opts = {};\n  if (_opts) Object.assign(opts, _opts); // for frozen objects\n\n  /** @type {Map<String, DirEntry>} */\n  this._watched = new Map();\n  /** @type {Map<String, Array>} */\n  this._closers = new Map();\n  /** @type {Set<String>} */\n  this._ignoredPaths = new Set();\n\n  /** @type {Map<ThrottleType, Map>} */\n  this._throttled = new Map();\n\n  /** @type {Map<Path, String|Boolean>} */\n  this._symlinkPaths = new Map();\n\n  this._streams = new Set();\n  this.closed = false;\n\n  // Set up default options.\n  if (undef(opts, 'persistent')) opts.persistent = true;\n  if (undef(opts, 'ignoreInitial')) opts.ignoreInitial = false;\n  if (undef(opts, 'ignorePermissionErrors')) opts.ignorePermissionErrors = false;\n  if (undef(opts, 'interval')) opts.interval = 100;\n  if (undef(opts, 'binaryInterval')) opts.binaryInterval = 300;\n  if (undef(opts, 'disableGlobbing')) opts.disableGlobbing = false;\n  opts.enableBinaryInterval = opts.binaryInterval !== opts.interval;\n\n  // Enable fsevents on OS X when polling isn't explicitly enabled.\n  if (undef(opts, 'useFsEvents')) opts.useFsEvents = !opts.usePolling;\n\n  // If we can't use fsevents, ensure the options reflect it's disabled.\n  const canUseFsEvents = FsEventsHandler.canUse();\n  if (!canUseFsEvents) opts.useFsEvents = false;\n\n  // Use polling on Mac if not using fsevents.\n  // Other platforms use non-polling fs_watch.\n  if (undef(opts, 'usePolling') && !opts.useFsEvents) {\n    opts.usePolling = isMacos;\n  }\n\n  // Always default to polling on IBM i because fs.watch() is not available on IBM i.\n  if(isIBMi) {\n    opts.usePolling = true;\n  }\n\n  // Global override (useful for end-developers that need to force polling for all\n  // instances of chokidar, regardless of usage/dependency depth)\n  const envPoll = process.env.CHOKIDAR_USEPOLLING;\n  if (envPoll !== undefined) {\n    const envLower = envPoll.toLowerCase();\n\n    if (envLower === 'false' || envLower === '0') {\n      opts.usePolling = false;\n    } else if (envLower === 'true' || envLower === '1') {\n      opts.usePolling = true;\n    } else {\n      opts.usePolling = !!envLower;\n    }\n  }\n  const envInterval = process.env.CHOKIDAR_INTERVAL;\n  if (envInterval) {\n    opts.interval = Number.parseInt(envInterval, 10);\n  }\n\n  // Editor atomic write normalization enabled by default with fs.watch\n  if (undef(opts, 'atomic')) opts.atomic = !opts.usePolling && !opts.useFsEvents;\n  if (opts.atomic) this._pendingUnlinks = new Map();\n\n  if (undef(opts, 'followSymlinks')) opts.followSymlinks = true;\n\n  if (undef(opts, 'awaitWriteFinish')) opts.awaitWriteFinish = false;\n  if (opts.awaitWriteFinish === true) opts.awaitWriteFinish = {};\n  const awf = opts.awaitWriteFinish;\n  if (awf) {\n    if (!awf.stabilityThreshold) awf.stabilityThreshold = 2000;\n    if (!awf.pollInterval) awf.pollInterval = 100;\n    this._pendingWrites = new Map();\n  }\n  if (opts.ignored) opts.ignored = arrify(opts.ignored);\n\n  let readyCalls = 0;\n  this._emitReady = () => {\n    readyCalls++;\n    if (readyCalls >= this._readyCount) {\n      this._emitReady = EMPTY_FN;\n      this._readyEmitted = true;\n      // use process.nextTick to allow time for listener to be bound\n      process.nextTick(() => this.emit(EV_READY));\n    }\n  };\n  this._emitRaw = (...args) => this.emit(EV_RAW, ...args);\n  this._readyEmitted = false;\n  this.options = opts;\n\n  // Initialize with proper watcher.\n  if (opts.useFsEvents) {\n    this._fsEventsHandler = new FsEventsHandler(this);\n  } else {\n    this._nodeFsHandler = new NodeFsHandler(this);\n  }\n\n  // You’re frozen when your heart’s not open.\n  Object.freeze(opts);\n}\n\n// Public methods\n\n/**\n * Adds paths to be watched on an existing FSWatcher instance\n * @param {Path|Array<Path>} paths_\n * @param {String=} _origAdd private; for handling non-existent paths to be watched\n * @param {Boolean=} _internal private; indicates a non-user add\n * @returns {FSWatcher} for chaining\n */\nadd(paths_, _origAdd, _internal) {\n  const {cwd, disableGlobbing} = this.options;\n  this.closed = false;\n  let paths = unifyPaths(paths_);\n  if (cwd) {\n    paths = paths.map((path) => {\n      const absPath = getAbsolutePath(path, cwd);\n\n      // Check `path` instead of `absPath` because the cwd portion can't be a glob\n      if (disableGlobbing || !isGlob(path)) {\n        return absPath;\n      }\n      return normalizePath(absPath);\n    });\n  }\n\n  // set aside negated glob strings\n  paths = paths.filter((path) => {\n    if (path.startsWith(BANG)) {\n      this._ignoredPaths.add(path.slice(1));\n      return false;\n    }\n\n    // if a path is being added that was previously ignored, stop ignoring it\n    this._ignoredPaths.delete(path);\n    this._ignoredPaths.delete(path + SLASH_GLOBSTAR);\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n\n    return true;\n  });\n\n  if (this.options.useFsEvents && this._fsEventsHandler) {\n    if (!this._readyCount) this._readyCount = paths.length;\n    if (this.options.persistent) this._readyCount += paths.length;\n    paths.forEach((path) => this._fsEventsHandler._addToFsEvents(path));\n  } else {\n    if (!this._readyCount) this._readyCount = 0;\n    this._readyCount += paths.length;\n    Promise.all(\n      paths.map(async path => {\n        const res = await this._nodeFsHandler._addToNodeFs(path, !_internal, 0, 0, _origAdd);\n        if (res) this._emitReady();\n        return res;\n      })\n    ).then(results => {\n      if (this.closed) return;\n      results.filter(item => item).forEach(item => {\n        this.add(sysPath.dirname(item), sysPath.basename(_origAdd || item));\n      });\n    });\n  }\n\n  return this;\n}\n\n/**\n * Close watchers or start ignoring events from specified paths.\n * @param {Path|Array<Path>} paths_ - string or array of strings, file/directory paths and/or globs\n * @returns {FSWatcher} for chaining\n*/\nunwatch(paths_) {\n  if (this.closed) return this;\n  const paths = unifyPaths(paths_);\n  const {cwd} = this.options;\n\n  paths.forEach((path) => {\n    // convert to absolute path unless relative path already matches\n    if (!sysPath.isAbsolute(path) && !this._closers.has(path)) {\n      if (cwd) path = sysPath.join(cwd, path);\n      path = sysPath.resolve(path);\n    }\n\n    this._closePath(path);\n\n    this._ignoredPaths.add(path);\n    if (this._watched.has(path)) {\n      this._ignoredPaths.add(path + SLASH_GLOBSTAR);\n    }\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n  });\n\n  return this;\n}\n\n/**\n * Close watchers and remove all listeners from watched paths.\n * @returns {Promise<void>}.\n*/\nclose() {\n  if (this.closed) return this._closePromise;\n  this.closed = true;\n\n  // Memory management.\n  this.removeAllListeners();\n  const closers = [];\n  this._closers.forEach(closerList => closerList.forEach(closer => {\n    const promise = closer();\n    if (promise instanceof Promise) closers.push(promise);\n  }));\n  this._streams.forEach(stream => stream.destroy());\n  this._userIgnored = undefined;\n  this._readyCount = 0;\n  this._readyEmitted = false;\n  this._watched.forEach(dirent => dirent.dispose());\n  ['closers', 'watched', 'streams', 'symlinkPaths', 'throttled'].forEach(key => {\n    this[`_${key}`].clear();\n  });\n\n  this._closePromise = closers.length ? Promise.all(closers).then(() => undefined) : Promise.resolve();\n  return this._closePromise;\n}\n\n/**\n * Expose list of watched paths\n * @returns {Object} for chaining\n*/\ngetWatched() {\n  const watchList = {};\n  this._watched.forEach((entry, dir) => {\n    const key = this.options.cwd ? sysPath.relative(this.options.cwd, dir) : dir;\n    watchList[key || ONE_DOT] = entry.getChildren().sort();\n  });\n  return watchList;\n}\n\nemitWithAll(event, args) {\n  this.emit(...args);\n  if (event !== EV_ERROR) this.emit(EV_ALL, ...args);\n}\n\n// Common helpers\n// --------------\n\n/**\n * Normalize and emit events.\n * Calling _emit DOES NOT MEAN emit() would be called!\n * @param {EventName} event Type of event\n * @param {Path} path File or directory path\n * @param {*=} val1 arguments to be passed with event\n * @param {*=} val2\n * @param {*=} val3\n * @returns the error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\nasync _emit(event, path, val1, val2, val3) {\n  if (this.closed) return;\n\n  const opts = this.options;\n  if (isWindows) path = sysPath.normalize(path);\n  if (opts.cwd) path = sysPath.relative(opts.cwd, path);\n  /** @type Array<any> */\n  const args = [event, path];\n  if (val3 !== undefined) args.push(val1, val2, val3);\n  else if (val2 !== undefined) args.push(val1, val2);\n  else if (val1 !== undefined) args.push(val1);\n\n  const awf = opts.awaitWriteFinish;\n  let pw;\n  if (awf && (pw = this._pendingWrites.get(path))) {\n    pw.lastChange = new Date();\n    return this;\n  }\n\n  if (opts.atomic) {\n    if (event === EV_UNLINK) {\n      this._pendingUnlinks.set(path, args);\n      setTimeout(() => {\n        this._pendingUnlinks.forEach((entry, path) => {\n          this.emit(...entry);\n          this.emit(EV_ALL, ...entry);\n          this._pendingUnlinks.delete(path);\n        });\n      }, typeof opts.atomic === 'number' ? opts.atomic : 100);\n      return this;\n    }\n    if (event === EV_ADD && this._pendingUnlinks.has(path)) {\n      event = args[0] = EV_CHANGE;\n      this._pendingUnlinks.delete(path);\n    }\n  }\n\n  if (awf && (event === EV_ADD || event === EV_CHANGE) && this._readyEmitted) {\n    const awfEmit = (err, stats) => {\n      if (err) {\n        event = args[0] = EV_ERROR;\n        args[1] = err;\n        this.emitWithAll(event, args);\n      } else if (stats) {\n        // if stats doesn't exist the file must have been deleted\n        if (args.length > 2) {\n          args[2] = stats;\n        } else {\n          args.push(stats);\n        }\n        this.emitWithAll(event, args);\n      }\n    };\n\n    this._awaitWriteFinish(path, awf.stabilityThreshold, event, awfEmit);\n    return this;\n  }\n\n  if (event === EV_CHANGE) {\n    const isThrottled = !this._throttle(EV_CHANGE, path, 50);\n    if (isThrottled) return this;\n  }\n\n  if (opts.alwaysStat && val1 === undefined &&\n    (event === EV_ADD || event === EV_ADD_DIR || event === EV_CHANGE)\n  ) {\n    const fullPath = opts.cwd ? sysPath.join(opts.cwd, path) : path;\n    let stats;\n    try {\n      stats = await stat(fullPath);\n    } catch (err) {}\n    // Suppress event when fs_stat fails, to avoid sending undefined 'stat'\n    if (!stats || this.closed) return;\n    args.push(stats);\n  }\n  this.emitWithAll(event, args);\n\n  return this;\n}\n\n/**\n * Common handler for errors\n * @param {Error} error\n * @returns {Error|Boolean} The error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\n_handleError(error) {\n  const code = error && error.code;\n  if (error && code !== 'ENOENT' && code !== 'ENOTDIR' &&\n    (!this.options.ignorePermissionErrors || (code !== 'EPERM' && code !== 'EACCES'))\n  ) {\n    this.emit(EV_ERROR, error);\n  }\n  return error || this.closed;\n}\n\n/**\n * Helper utility for throttling\n * @param {ThrottleType} actionType type being throttled\n * @param {Path} path being acted upon\n * @param {Number} timeout duration of time to suppress duplicate actions\n * @returns {Object|false} tracking object or false if action should be suppressed\n */\n_throttle(actionType, path, timeout) {\n  if (!this._throttled.has(actionType)) {\n    this._throttled.set(actionType, new Map());\n  }\n\n  /** @type {Map<Path, Object>} */\n  const action = this._throttled.get(actionType);\n  /** @type {Object} */\n  const actionPath = action.get(path);\n\n  if (actionPath) {\n    actionPath.count++;\n    return false;\n  }\n\n  let timeoutObject;\n  const clear = () => {\n    const item = action.get(path);\n    const count = item ? item.count : 0;\n    action.delete(path);\n    clearTimeout(timeoutObject);\n    if (item) clearTimeout(item.timeoutObject);\n    return count;\n  };\n  timeoutObject = setTimeout(clear, timeout);\n  const thr = {timeoutObject, clear, count: 0};\n  action.set(path, thr);\n  return thr;\n}\n\n_incrReadyCount() {\n  return this._readyCount++;\n}\n\n/**\n * Awaits write operation to finish.\n * Polls a newly created file for size variations. When files size does not change for 'threshold' milliseconds calls callback.\n * @param {Path} path being acted upon\n * @param {Number} threshold Time in milliseconds a file size must be fixed before acknowledging write OP is finished\n * @param {EventName} event\n * @param {Function} awfEmit Callback to be called when ready for event to be emitted.\n */\n_awaitWriteFinish(path, threshold, event, awfEmit) {\n  let timeoutHandler;\n\n  let fullPath = path;\n  if (this.options.cwd && !sysPath.isAbsolute(path)) {\n    fullPath = sysPath.join(this.options.cwd, path);\n  }\n\n  const now = new Date();\n\n  const awaitWriteFinish = (prevStat) => {\n    fs.stat(fullPath, (err, curStat) => {\n      if (err || !this._pendingWrites.has(path)) {\n        if (err && err.code !== 'ENOENT') awfEmit(err);\n        return;\n      }\n\n      const now = Number(new Date());\n\n      if (prevStat && curStat.size !== prevStat.size) {\n        this._pendingWrites.get(path).lastChange = now;\n      }\n      const pw = this._pendingWrites.get(path);\n      const df = now - pw.lastChange;\n\n      if (df >= threshold) {\n        this._pendingWrites.delete(path);\n        awfEmit(undefined, curStat);\n      } else {\n        timeoutHandler = setTimeout(\n          awaitWriteFinish,\n          this.options.awaitWriteFinish.pollInterval,\n          curStat\n        );\n      }\n    });\n  };\n\n  if (!this._pendingWrites.has(path)) {\n    this._pendingWrites.set(path, {\n      lastChange: now,\n      cancelWait: () => {\n        this._pendingWrites.delete(path);\n        clearTimeout(timeoutHandler);\n        return event;\n      }\n    });\n    timeoutHandler = setTimeout(\n      awaitWriteFinish,\n      this.options.awaitWriteFinish.pollInterval\n    );\n  }\n}\n\n_getGlobIgnored() {\n  return [...this._ignoredPaths.values()];\n}\n\n/**\n * Determines whether user has asked to ignore this path.\n * @param {Path} path filepath or dir\n * @param {fs.Stats=} stats result of fs.stat\n * @returns {Boolean}\n */\n_isIgnored(path, stats) {\n  if (this.options.atomic && DOT_RE.test(path)) return true;\n  if (!this._userIgnored) {\n    const {cwd} = this.options;\n    const ign = this.options.ignored;\n\n    const ignored = ign && ign.map(normalizeIgnored(cwd));\n    const paths = arrify(ignored)\n      .filter((path) => typeof path === STRING_TYPE && !isGlob(path))\n      .map((path) => path + SLASH_GLOBSTAR);\n    const list = this._getGlobIgnored().map(normalizeIgnored(cwd)).concat(ignored, paths);\n    this._userIgnored = anymatch(list, undefined, ANYMATCH_OPTS);\n  }\n\n  return this._userIgnored([path, stats]);\n}\n\n_isntIgnored(path, stat) {\n  return !this._isIgnored(path, stat);\n}\n\n/**\n * Provides a set of common helpers and properties relating to symlink and glob handling.\n * @param {Path} path file, directory, or glob pattern being watched\n * @param {Number=} depth at any depth > 0, this isn't a glob\n * @returns {WatchHelper} object containing helpers for this path\n */\n_getWatchHelpers(path, depth) {\n  const watchPath = depth || this.options.disableGlobbing || !isGlob(path) ? path : globParent(path);\n  const follow = this.options.followSymlinks;\n\n  return new WatchHelper(path, watchPath, follow, this);\n}\n\n// Directory helpers\n// -----------------\n\n/**\n * Provides directory tracking objects\n * @param {String} directory path of the directory\n * @returns {DirEntry} the directory's tracking object\n */\n_getWatchedDir(directory) {\n  if (!this._boundRemove) this._boundRemove = this._remove.bind(this);\n  const dir = sysPath.resolve(directory);\n  if (!this._watched.has(dir)) this._watched.set(dir, new DirEntry(dir, this._boundRemove));\n  return this._watched.get(dir);\n}\n\n// File helpers\n// ------------\n\n/**\n * Check for read permissions.\n * Based on this answer on SO: https://stackoverflow.com/a/11781404/1358405\n * @param {fs.Stats} stats - object, result of fs_stat\n * @returns {Boolean} indicates whether the file can be read\n*/\n_hasReadPermissions(stats) {\n  if (this.options.ignorePermissionErrors) return true;\n\n  // stats.mode may be bigint\n  const md = stats && Number.parseInt(stats.mode, 10);\n  const st = md & 0o777;\n  const it = Number.parseInt(st.toString(8)[0], 10);\n  return Boolean(4 & it);\n}\n\n/**\n * Handles emitting unlink events for\n * files and directories, and via recursion, for\n * files and directories within directories that are unlinked\n * @param {String} directory within which the following item is located\n * @param {String} item      base path of item/directory\n * @returns {void}\n*/\n_remove(directory, item, isDirectory) {\n  // if what is being deleted is a directory, get that directory's paths\n  // for recursive deleting and cleaning of watched object\n  // if it is not a directory, nestedDirectoryChildren will be empty array\n  const path = sysPath.join(directory, item);\n  const fullPath = sysPath.resolve(path);\n  isDirectory = isDirectory != null\n    ? isDirectory\n    : this._watched.has(path) || this._watched.has(fullPath);\n\n  // prevent duplicate handling in case of arriving here nearly simultaneously\n  // via multiple paths (such as _handleFile and _handleDir)\n  if (!this._throttle('remove', path, 100)) return;\n\n  // if the only watched file is removed, watch for its return\n  if (!isDirectory && !this.options.useFsEvents && this._watched.size === 1) {\n    this.add(directory, item, true);\n  }\n\n  // This will create a new entry in the watched object in either case\n  // so we got to do the directory check beforehand\n  const wp = this._getWatchedDir(path);\n  const nestedDirectoryChildren = wp.getChildren();\n\n  // Recursively remove children directories / files.\n  nestedDirectoryChildren.forEach(nested => this._remove(path, nested));\n\n  // Check if item was on the watched list and remove it\n  const parent = this._getWatchedDir(directory);\n  const wasTracked = parent.has(item);\n  parent.remove(item);\n\n  // Fixes issue #1042 -> Relative paths were detected and added as symlinks\n  // (https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L612),\n  // but never removed from the map in case the path was deleted.\n  // This leads to an incorrect state if the path was recreated:\n  // https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L553\n  if (this._symlinkPaths.has(fullPath)) {\n    this._symlinkPaths.delete(fullPath);\n  }\n\n  // If we wait for this file to be fully written, cancel the wait.\n  let relPath = path;\n  if (this.options.cwd) relPath = sysPath.relative(this.options.cwd, path);\n  if (this.options.awaitWriteFinish && this._pendingWrites.has(relPath)) {\n    const event = this._pendingWrites.get(relPath).cancelWait();\n    if (event === EV_ADD) return;\n  }\n\n  // The Entry will either be a directory that just got removed\n  // or a bogus entry to a file, in either case we have to remove it\n  this._watched.delete(path);\n  this._watched.delete(fullPath);\n  const eventName = isDirectory ? EV_UNLINK_DIR : EV_UNLINK;\n  if (wasTracked && !this._isIgnored(path)) this._emit(eventName, path);\n\n  // Avoid conflicts if we later create another file with the same name\n  if (!this.options.useFsEvents) {\n    this._closePath(path);\n  }\n}\n\n/**\n * Closes all watchers for a path\n * @param {Path} path\n */\n_closePath(path) {\n  this._closeFile(path)\n  const dir = sysPath.dirname(path);\n  this._getWatchedDir(dir).remove(sysPath.basename(path));\n}\n\n/**\n * Closes only file-specific watchers\n * @param {Path} path\n */\n_closeFile(path) {\n  const closers = this._closers.get(path);\n  if (!closers) return;\n  closers.forEach(closer => closer());\n  this._closers.delete(path);\n}\n\n/**\n *\n * @param {Path} path\n * @param {Function} closer\n */\n_addPathCloser(path, closer) {\n  if (!closer) return;\n  let list = this._closers.get(path);\n  if (!list) {\n    list = [];\n    this._closers.set(path, list);\n  }\n  list.push(closer);\n}\n\n_readdirp(root, opts) {\n  if (this.closed) return;\n  const options = {type: EV_ALL, alwaysStat: true, lstat: true, ...opts};\n  let stream = readdirp(root, options);\n  this._streams.add(stream);\n  stream.once(STR_CLOSE, () => {\n    stream = undefined;\n  });\n  stream.once(STR_END, () => {\n    if (stream) {\n      this._streams.delete(stream);\n      stream = undefined;\n    }\n  });\n  return stream;\n}\n\n}\n\n// Export FSWatcher class\nexports.FSWatcher = FSWatcher;\n\n/**\n * Instantiates watcher with paths to be tracked.\n * @param {String|Array<String>} paths file/directory paths and/or globs\n * @param {Object=} options chokidar opts\n * @returns an instance of FSWatcher for chaining.\n */\nconst watch = (paths, options) => {\n  const watcher = new FSWatcher(options);\n  watcher.add(paths);\n  return watcher;\n};\n\nexports.watch = watch;\n"],"names":["BuilderStatus","BuilderEvent","LibraryType","fs","path","stat","ErrorCode","LogLevelEnum","EventEmitter","spawn","randomUUID","os","BundlerFeature","PluginType","PluginPhase","BundlerStatus","fileURLToPath","parse","require$$0","STAR","POSIX_REGEX_SOURCE","constants","require$$1","utils","CHAR_COMMA","CHAR_DOT","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_PARENTHESES","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_PARENTHESES","CHAR_RIGHT_SQUARE_BRACKET","scan","MAX_LENGTH","parse_1","require$$2","require$$3","require$$4","isObject","picomatch","sysPath","promisify","readdir","lstat","realpath","BANG","readdirp","normalizePath","arrify","anymatch","anymatchModule","isExtglob","isGlob","globParent","stringify","isNumber","toRegexRange","fill","compile","expand","braces","binaryExtensions","isBinaryPath","isWindows","EMPTY_FN","EMPTY_STR","EV_CHANGE","EV_ADD","EV_ADD_DIR","EV_ERROR","STR_DATA","STR_END","BRACE_START","statMethods","NodeFsHandler","EV_UNLINK","FUNCTION_TYPE","fseventsHandlerModule","FsEventsHandler","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12"],"mappings":"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","x_google_ignoreList":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65]}